/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: swsscommon.i

package swsscommon

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef long long swig_type_21;
typedef long long swig_type_22;
typedef long long swig_type_23;
typedef long long swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef long long swig_type_28;
typedef long long swig_type_29;
typedef long long swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _gostring_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef long long swig_type_43;
typedef long long swig_type_44;
typedef long long swig_type_45;
typedef long long swig_type_46;
typedef _gostring_ swig_type_47;
typedef _gostring_ swig_type_48;
typedef _gostring_ swig_type_49;
typedef _gostring_ swig_type_50;
typedef _gostring_ swig_type_51;
typedef _gostring_ swig_type_52;
typedef _gostring_ swig_type_53;
typedef _gostring_ swig_type_54;
typedef _gostring_ swig_type_55;
typedef _gostring_ swig_type_56;
typedef _gostring_ swig_type_57;
typedef _gostring_ swig_type_58;
typedef _gostring_ swig_type_59;
typedef _gostring_ swig_type_60;
typedef _gostring_ swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef _gostring_ swig_type_65;
typedef _gostring_ swig_type_66;
typedef _gostring_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef _gostring_ swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef _gostring_ swig_type_74;
typedef _gostring_ swig_type_75;
typedef _gostring_ swig_type_76;
typedef _gostring_ swig_type_77;
typedef _gostring_ swig_type_78;
typedef _gostring_ swig_type_79;
typedef _gostring_ swig_type_80;
typedef _gostring_ swig_type_81;
typedef _gostring_ swig_type_82;
typedef _gostring_ swig_type_83;
typedef _gostring_ swig_type_84;
typedef _gostring_ swig_type_85;
typedef _gostring_ swig_type_86;
typedef _gostring_ swig_type_87;
typedef _gostring_ swig_type_88;
typedef _gostring_ swig_type_89;
typedef _gostring_ swig_type_90;
typedef _gostring_ swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
typedef _gostring_ swig_type_106;
typedef _gostring_ swig_type_107;
typedef _gostring_ swig_type_108;
typedef _gostring_ swig_type_109;
typedef _gostring_ swig_type_110;
typedef _gostring_ swig_type_111;
typedef _gostring_ swig_type_112;
typedef _gostring_ swig_type_113;
typedef _gostring_ swig_type_114;
typedef _gostring_ swig_type_115;
typedef _gostring_ swig_type_116;
typedef _gostring_ swig_type_117;
typedef _gostring_ swig_type_118;
typedef _gostring_ swig_type_119;
typedef _gostring_ swig_type_120;
typedef _gostring_ swig_type_121;
typedef _gostring_ swig_type_122;
typedef _gostring_ swig_type_123;
typedef _gostring_ swig_type_124;
typedef _gostring_ swig_type_125;
typedef _gostring_ swig_type_126;
typedef _gostring_ swig_type_127;
typedef _gostring_ swig_type_128;
typedef _gostring_ swig_type_129;
typedef _gostring_ swig_type_130;
typedef _gostring_ swig_type_131;
typedef _gostring_ swig_type_132;
typedef _gostring_ swig_type_133;
typedef _gostring_ swig_type_134;
typedef _gostring_ swig_type_135;
typedef _gostring_ swig_type_136;
typedef _gostring_ swig_type_137;
typedef _gostring_ swig_type_138;
typedef _gostring_ swig_type_139;
typedef _gostring_ swig_type_140;
typedef _gostring_ swig_type_141;
typedef _gostring_ swig_type_142;
typedef _gostring_ swig_type_143;
typedef _gostring_ swig_type_144;
typedef _gostring_ swig_type_145;
typedef _gostring_ swig_type_146;
typedef _gostring_ swig_type_147;
typedef _gostring_ swig_type_148;
typedef _gostring_ swig_type_149;
typedef _gostring_ swig_type_150;
typedef _gostring_ swig_type_151;
typedef long long swig_type_152;
typedef _gostring_ swig_type_153;
typedef _gostring_ swig_type_154;
typedef long long swig_type_155;
typedef _gostring_ swig_type_156;
typedef _gostring_ swig_type_157;
typedef long long swig_type_158;
typedef _gostring_ swig_type_159;
typedef _gostring_ swig_type_160;
typedef _gostring_ swig_type_161;
typedef _gostring_ swig_type_162;
typedef _gostring_ swig_type_163;
typedef _gostring_ swig_type_164;
typedef _gostring_ swig_type_165;
typedef _gostring_ swig_type_166;
typedef _gostring_ swig_type_167;
typedef _gostring_ swig_type_168;
typedef _gostring_ swig_type_169;
typedef _gostring_ swig_type_170;
typedef _gostring_ swig_type_171;
typedef _gostring_ swig_type_172;
typedef _gostring_ swig_type_173;
typedef long long swig_type_174;
typedef _gostring_ swig_type_175;
typedef long long swig_type_176;
typedef _gostring_ swig_type_177;
typedef long long swig_type_178;
typedef _gostring_ swig_type_179;
typedef _gostring_ swig_type_180;
typedef _gostring_ swig_type_181;
typedef _gostring_ swig_type_182;
typedef _gostring_ swig_type_183;
typedef _gostring_ swig_type_184;
typedef long long swig_type_185;
typedef _gostring_ swig_type_186;
typedef _gostring_ swig_type_187;
typedef _gostring_ swig_type_188;
typedef _gostring_ swig_type_189;
typedef _gostring_ swig_type_190;
typedef _gostring_ swig_type_191;
typedef _gostring_ swig_type_192;
typedef _gostring_ swig_type_193;
typedef _gostring_ swig_type_194;
typedef _gostring_ swig_type_195;
typedef _gostring_ swig_type_196;
typedef _gostring_ swig_type_197;
typedef _gostring_ swig_type_198;
typedef _gostring_ swig_type_199;
typedef _gostring_ swig_type_200;
typedef _gostring_ swig_type_201;
typedef long long swig_type_202;
typedef _gostring_ swig_type_203;
typedef _gostring_ swig_type_204;
typedef _gostring_ swig_type_205;
typedef _gostring_ swig_type_206;
typedef _gostring_ swig_type_207;
typedef _gostring_ swig_type_208;
typedef _gostring_ swig_type_209;
typedef _gostring_ swig_type_210;
typedef _gostring_ swig_type_211;
typedef _gostring_ swig_type_212;
typedef _gostring_ swig_type_213;
typedef _gostring_ swig_type_214;
typedef _gostring_ swig_type_215;
typedef _gostring_ swig_type_216;
typedef _gostring_ swig_type_217;
typedef _gostring_ swig_type_218;
typedef _gostring_ swig_type_219;
typedef _gostring_ swig_type_220;
typedef _gostring_ swig_type_221;
typedef _gostring_ swig_type_222;
typedef _gostring_ swig_type_223;
typedef _gostring_ swig_type_224;
typedef _gostring_ swig_type_225;
typedef _gostring_ swig_type_226;
typedef _gostring_ swig_type_227;
typedef _gostring_ swig_type_228;
typedef _gostring_ swig_type_229;
typedef _gostring_ swig_type_230;
typedef _gostring_ swig_type_231;
typedef _gostring_ swig_type_232;
typedef _gostring_ swig_type_233;
typedef long long swig_type_234;
typedef _gostring_ swig_type_235;
typedef _gostring_ swig_type_236;
typedef _gostring_ swig_type_237;
typedef _gostring_ swig_type_238;
typedef long long swig_type_239;
typedef _gostring_ swig_type_240;
typedef _gostring_ swig_type_241;
typedef _gostring_ swig_type_242;
typedef _gostring_ swig_type_243;
typedef long long swig_type_244;
typedef _gostring_ swig_type_245;
typedef _gostring_ swig_type_246;
typedef long long swig_type_247;
typedef _gostring_ swig_type_248;
typedef _gostring_ swig_type_249;
typedef _gostring_ swig_type_250;
typedef _gostring_ swig_type_251;
typedef _gostring_ swig_type_252;
typedef _gostring_ swig_type_253;
typedef long long swig_type_254;
typedef _gostring_ swig_type_255;
typedef _gostring_ swig_type_256;
typedef _gostring_ swig_type_257;
typedef _gostring_ swig_type_258;
typedef _gostring_ swig_type_259;
typedef _gostring_ swig_type_260;
typedef _gostring_ swig_type_261;
typedef _gostring_ swig_type_262;
typedef _gostring_ swig_type_263;
typedef _gostring_ swig_type_264;
typedef _gostring_ swig_type_265;
typedef _gostring_ swig_type_266;
typedef _gostring_ swig_type_267;
typedef _gostring_ swig_type_268;
typedef _gostring_ swig_type_269;
typedef _gostring_ swig_type_270;
typedef long long swig_type_271;
typedef _gostring_ swig_type_272;
typedef _gostring_ swig_type_273;
typedef _gostring_ swig_type_274;
typedef _gostring_ swig_type_275;
typedef _gostring_ swig_type_276;
typedef _gostring_ swig_type_277;
typedef _gostring_ swig_type_278;
typedef _gostring_ swig_type_279;
typedef _gostring_ swig_type_280;
typedef _gostring_ swig_type_281;
typedef _gostring_ swig_type_282;
typedef _gostring_ swig_type_283;
typedef _gostring_ swig_type_284;
typedef long long swig_type_285;
typedef _gostring_ swig_type_286;
typedef _gostring_ swig_type_287;
typedef _gostring_ swig_type_288;
typedef long long swig_type_289;
typedef long long swig_type_290;
typedef _gostring_ swig_type_291;
typedef _gostring_ swig_type_292;
typedef long long swig_type_293;
typedef _gostring_ swig_type_294;
typedef _gostring_ swig_type_295;
typedef _gostring_ swig_type_296;
typedef _gostring_ swig_type_297;
typedef _gostring_ swig_type_298;
typedef _gostring_ swig_type_299;
typedef _gostring_ swig_type_300;
typedef _gostring_ swig_type_301;
typedef _gostring_ swig_type_302;
typedef _gostring_ swig_type_303;
typedef _gostring_ swig_type_304;
typedef _gostring_ swig_type_305;
typedef _gostring_ swig_type_306;
typedef long long swig_type_307;
typedef long long swig_type_308;
typedef long long swig_type_309;
typedef _gostring_ swig_type_310;
typedef _gostring_ swig_type_311;
typedef _gostring_ swig_type_312;
typedef _gostring_ swig_type_313;
typedef long long swig_type_314;
typedef _gostring_ swig_type_315;
typedef _gostring_ swig_type_316;
typedef _gostring_ swig_type_317;
typedef long long swig_type_318;
typedef _gostring_ swig_type_319;
typedef _gostring_ swig_type_320;
typedef _gostring_ swig_type_321;
typedef _gostring_ swig_type_322;
typedef _gostring_ swig_type_323;
typedef _gostring_ swig_type_324;
typedef _gostring_ swig_type_325;
typedef _gostring_ swig_type_326;
typedef _gostring_ swig_type_327;
typedef _gostring_ swig_type_328;
typedef _gostring_ swig_type_329;
typedef _gostring_ swig_type_330;
typedef _gostring_ swig_type_331;
typedef _gostring_ swig_type_332;
typedef _gostring_ swig_type_333;
typedef _gostring_ swig_type_334;
typedef _gostring_ swig_type_335;
typedef _gostring_ swig_type_336;
typedef _gostring_ swig_type_337;
typedef _gostring_ swig_type_338;
typedef _gostring_ swig_type_339;
typedef _gostring_ swig_type_340;
typedef _gostring_ swig_type_341;
typedef _gostring_ swig_type_342;
typedef _gostring_ swig_type_343;
typedef long long swig_type_344;
typedef _gostring_ swig_type_345;
typedef _gostring_ swig_type_346;
typedef _gostring_ swig_type_347;
typedef _gostring_ swig_type_348;
typedef _gostring_ swig_type_349;
typedef _gostring_ swig_type_350;
typedef _gostring_ swig_type_351;
typedef _gostring_ swig_type_352;
typedef _gostring_ swig_type_353;
typedef _gostring_ swig_type_354;
typedef _gostring_ swig_type_355;
typedef _gostring_ swig_type_356;
typedef _gostring_ swig_type_357;
typedef _gostring_ swig_type_358;
typedef _gostring_ swig_type_359;
typedef _gostring_ swig_type_360;
typedef _gostring_ swig_type_361;
typedef _gostring_ swig_type_362;
typedef _gostring_ swig_type_363;
typedef _gostring_ swig_type_364;
typedef _gostring_ swig_type_365;
typedef _gostring_ swig_type_366;
typedef _gostring_ swig_type_367;
typedef _gostring_ swig_type_368;
typedef _gostring_ swig_type_369;
typedef _gostring_ swig_type_370;
typedef _gostring_ swig_type_371;
typedef _gostring_ swig_type_372;
typedef _gostring_ swig_type_373;
typedef _gostring_ swig_type_374;
typedef _gostring_ swig_type_375;
typedef long long swig_type_376;
typedef _gostring_ swig_type_377;
typedef _gostring_ swig_type_378;
typedef _gostring_ swig_type_379;
typedef _gostring_ swig_type_380;
typedef long long swig_type_381;
typedef _gostring_ swig_type_382;
typedef _gostring_ swig_type_383;
typedef _gostring_ swig_type_384;
typedef _gostring_ swig_type_385;
typedef long long swig_type_386;
typedef _gostring_ swig_type_387;
typedef _gostring_ swig_type_388;
typedef long long swig_type_389;
typedef _gostring_ swig_type_390;
typedef _gostring_ swig_type_391;
typedef _gostring_ swig_type_392;
typedef _gostring_ swig_type_393;
typedef _gostring_ swig_type_394;
typedef _gostring_ swig_type_395;
typedef _gostring_ swig_type_396;
typedef _gostring_ swig_type_397;
typedef _gostring_ swig_type_398;
typedef _gostring_ swig_type_399;
typedef _gostring_ swig_type_400;
typedef _gostring_ swig_type_401;
typedef _gostring_ swig_type_402;
typedef _gostring_ swig_type_403;
typedef _gostring_ swig_type_404;
typedef _gostring_ swig_type_405;
typedef _gostring_ swig_type_406;
typedef _gostring_ swig_type_407;
typedef _gostring_ swig_type_408;
typedef _gostring_ swig_type_409;
typedef _gostring_ swig_type_410;
typedef _gostring_ swig_type_411;
typedef _gostring_ swig_type_412;
typedef long long swig_type_413;
typedef long long swig_type_414;
typedef long long swig_type_415;
typedef long long swig_type_416;
typedef long long swig_type_417;
typedef _gostring_ swig_type_418;
typedef _gostring_ swig_type_419;
typedef _gostring_ swig_type_420;
typedef _gostring_ swig_type_421;
typedef _gostring_ swig_type_422;
typedef _gostring_ swig_type_423;
typedef _gostring_ swig_type_424;
typedef _gostring_ swig_type_425;
typedef _gostring_ swig_type_426;
typedef _gostring_ swig_type_427;
typedef _gostring_ swig_type_428;
typedef _gostring_ swig_type_429;
typedef _gostring_ swig_type_430;
typedef _gostring_ swig_type_431;
typedef _gostring_ swig_type_432;
typedef long long swig_type_433;
typedef long long swig_type_434;
typedef _gostring_ swig_type_435;
typedef _gostring_ swig_type_436;
typedef _gostring_ swig_type_437;
typedef _gostring_ swig_type_438;
typedef _gostring_ swig_type_439;
typedef _gostring_ swig_type_440;
typedef _gostring_ swig_type_441;
typedef _gostring_ swig_type_442;
typedef _gostring_ swig_type_443;
typedef _gostring_ swig_type_444;
typedef _gostring_ swig_type_445;
typedef _gostring_ swig_type_446;
typedef _gostring_ swig_type_447;
typedef _gostring_ swig_type_448;
typedef _gostring_ swig_type_449;
typedef _gostring_ swig_type_450;
typedef _gostring_ swig_type_451;
typedef _gostring_ swig_type_452;
typedef _gostring_ swig_type_453;
typedef _gostring_ swig_type_454;
typedef _gostring_ swig_type_455;
typedef _gostring_ swig_type_456;
typedef _gostring_ swig_type_457;
typedef _gostring_ swig_type_458;
typedef _gostring_ swig_type_459;
typedef _gostring_ swig_type_460;
typedef _gostring_ swig_type_461;
typedef _gostring_ swig_type_462;
typedef _gostring_ swig_type_463;
typedef _gostring_ swig_type_464;
typedef _gostring_ swig_type_465;
typedef _gostring_ swig_type_466;
typedef _gostring_ swig_type_467;
typedef _gostring_ swig_type_468;
typedef _gostring_ swig_type_469;
typedef _gostring_ swig_type_470;
typedef _gostring_ swig_type_471;
typedef long long swig_type_472;
typedef _gostring_ swig_type_473;
typedef _gostring_ swig_type_474;
typedef _gostring_ swig_type_475;
typedef long long swig_type_476;
typedef _gostring_ swig_type_477;
typedef _gostring_ swig_type_478;
typedef _gostring_ swig_type_479;
typedef long long swig_type_480;
typedef _gostring_ swig_type_481;
typedef _gostring_ swig_type_482;
typedef _gostring_ swig_type_483;
typedef _gostring_ swig_type_484;
typedef _gostring_ swig_type_485;
typedef _gostring_ swig_type_486;
typedef _gostring_ swig_type_487;
typedef _gostring_ swig_type_488;
typedef _gostring_ swig_type_489;
typedef _gostring_ swig_type_490;
typedef _gostring_ swig_type_491;
typedef long long swig_type_492;
typedef _gostring_ swig_type_493;
typedef _gostring_ swig_type_494;
typedef _gostring_ swig_type_495;
typedef _gostring_ swig_type_496;
typedef _gostring_ swig_type_497;
typedef _gostring_ swig_type_498;
typedef _gostring_ swig_type_499;
typedef _gostring_ swig_type_500;
typedef _gostring_ swig_type_501;
typedef _gostring_ swig_type_502;
typedef _gostring_ swig_type_503;
typedef _gostring_ swig_type_504;
typedef _gostring_ swig_type_505;
typedef _gostring_ swig_type_506;
typedef _gostring_ swig_type_507;
typedef _gostring_ swig_type_508;
typedef _gostring_ swig_type_509;
typedef _gostring_ swig_type_510;
typedef _gostring_ swig_type_511;
typedef _gostring_ swig_type_512;
typedef _gostring_ swig_type_513;
typedef _gostring_ swig_type_514;
typedef _gostring_ swig_type_515;
typedef _gostring_ swig_type_516;
typedef _gostring_ swig_type_517;
typedef _gostring_ swig_type_518;
typedef _gostring_ swig_type_519;
typedef _gostring_ swig_type_520;
typedef _gostring_ swig_type_521;
typedef _gostring_ swig_type_522;
typedef _gostring_ swig_type_523;
typedef _gostring_ swig_type_524;
typedef _gostring_ swig_type_525;
typedef _gostring_ swig_type_526;
typedef _gostring_ swig_type_527;
typedef _gostring_ swig_type_528;
typedef _gostring_ swig_type_529;
typedef _gostring_ swig_type_530;
typedef _gostring_ swig_type_531;
typedef _gostring_ swig_type_532;
typedef _gostring_ swig_type_533;
typedef _gostring_ swig_type_534;
typedef _gostring_ swig_type_535;
typedef _gostring_ swig_type_536;
typedef _gostring_ swig_type_537;
typedef _gostring_ swig_type_538;
typedef _gostring_ swig_type_539;
typedef _gostring_ swig_type_540;
typedef _gostring_ swig_type_541;
typedef _gostring_ swig_type_542;
typedef _gostring_ swig_type_543;
typedef _gostring_ swig_type_544;
typedef _gostring_ swig_type_545;
typedef _gostring_ swig_type_546;
typedef _gostring_ swig_type_547;
typedef _gostring_ swig_type_548;
typedef _gostring_ swig_type_549;
typedef _gostring_ swig_type_550;
typedef _gostring_ swig_type_551;
typedef _gostring_ swig_type_552;
typedef _gostring_ swig_type_553;
typedef _gostring_ swig_type_554;
typedef _gostring_ swig_type_555;
typedef _gostring_ swig_type_556;
typedef _gostring_ swig_type_557;
typedef _gostring_ swig_type_558;
typedef _gostring_ swig_type_559;
typedef _gostring_ swig_type_560;
typedef _gostring_ swig_type_561;
typedef _gostring_ swig_type_562;
typedef _gostring_ swig_type_563;
typedef _gostring_ swig_type_564;
typedef _gostring_ swig_type_565;
typedef _gostring_ swig_type_566;
typedef _gostring_ swig_type_567;
typedef _gostring_ swig_type_568;
typedef _gostring_ swig_type_569;
typedef _gostring_ swig_type_570;
typedef _gostring_ swig_type_571;
typedef _gostring_ swig_type_572;
typedef _gostring_ swig_type_573;
typedef _gostring_ swig_type_574;
typedef _gostring_ swig_type_575;
typedef _gostring_ swig_type_576;
typedef _gostring_ swig_type_577;
typedef _gostring_ swig_type_578;
typedef _gostring_ swig_type_579;
typedef _gostring_ swig_type_580;
typedef _gostring_ swig_type_581;
typedef _gostring_ swig_type_582;
typedef _gostring_ swig_type_583;
typedef _gostring_ swig_type_584;
typedef _gostring_ swig_type_585;
typedef _gostring_ swig_type_586;
typedef _gostring_ swig_type_587;
typedef _gostring_ swig_type_588;
typedef _gostring_ swig_type_589;
typedef _gostring_ swig_type_590;
typedef _gostring_ swig_type_591;
typedef _gostring_ swig_type_592;
typedef _gostring_ swig_type_593;
typedef _gostring_ swig_type_594;
typedef _gostring_ swig_type_595;
typedef _gostring_ swig_type_596;
typedef _gostring_ swig_type_597;
typedef _gostring_ swig_type_598;
typedef _gostring_ swig_type_599;
typedef _gostring_ swig_type_600;
typedef _gostring_ swig_type_601;
typedef _gostring_ swig_type_602;
typedef _gostring_ swig_type_603;
typedef _gostring_ swig_type_604;
typedef _gostring_ swig_type_605;
typedef _gostring_ swig_type_606;
typedef _gostring_ swig_type_607;
typedef _gostring_ swig_type_608;
typedef _gostring_ swig_type_609;
typedef _gostring_ swig_type_610;
typedef _gostring_ swig_type_611;
typedef _gostring_ swig_type_612;
typedef _gostring_ swig_type_613;
typedef _gostring_ swig_type_614;
typedef _gostring_ swig_type_615;
typedef _gostring_ swig_type_616;
typedef _gostring_ swig_type_617;
typedef _gostring_ swig_type_618;
typedef _gostring_ swig_type_619;
typedef long long swig_type_620;
typedef _gostring_ swig_type_621;
typedef _gostring_ swig_type_622;
typedef _gostring_ swig_type_623;
typedef _gostring_ swig_type_624;
typedef _gostring_ swig_type_625;
typedef _gostring_ swig_type_626;
typedef _gostring_ swig_type_627;
typedef _gostring_ swig_type_628;
typedef _gostring_ swig_type_629;
typedef _gostring_ swig_type_630;
typedef _gostring_ swig_type_631;
typedef _gostring_ swig_type_632;
typedef _gostring_ swig_type_633;
typedef _gostring_ swig_type_634;
typedef _gostring_ swig_type_635;
typedef _gostring_ swig_type_636;
typedef _gostring_ swig_type_637;
typedef _gostring_ swig_type_638;
typedef _gostring_ swig_type_639;
typedef _gostring_ swig_type_640;
typedef _gostring_ swig_type_641;
typedef _gostring_ swig_type_642;
typedef _gostring_ swig_type_643;
typedef _gostring_ swig_type_644;
typedef _gostring_ swig_type_645;
typedef _gostring_ swig_type_646;
typedef _gostring_ swig_type_647;
typedef long long swig_type_648;
typedef long long swig_type_649;
typedef _gostring_ swig_type_650;
typedef _gostring_ swig_type_651;
typedef _gostring_ swig_type_652;
typedef _gostring_ swig_type_653;
typedef _gostring_ swig_type_654;
typedef _gostring_ swig_type_655;
typedef _gostring_ swig_type_656;
typedef _gostring_ swig_type_657;
typedef _gostring_ swig_type_658;
typedef _gostring_ swig_type_659;
typedef _gostring_ swig_type_660;
typedef _gostring_ swig_type_661;
typedef _gostring_ swig_type_662;
typedef _gostring_ swig_type_663;
typedef _gostring_ swig_type_664;
typedef _gostring_ swig_type_665;
typedef _gostring_ swig_type_666;
typedef _gostring_ swig_type_667;
typedef _gostring_ swig_type_668;
typedef long long swig_type_669;
typedef _gostring_ swig_type_670;
typedef _gostring_ swig_type_671;
typedef _gostring_ swig_type_672;
typedef _gostring_ swig_type_673;
typedef _gostring_ swig_type_674;
typedef _gostring_ swig_type_675;
typedef _gostring_ swig_type_676;
typedef _gostring_ swig_type_677;
typedef _gostring_ swig_type_678;
typedef _gostring_ swig_type_679;
typedef _gostring_ swig_type_680;
typedef _gostring_ swig_type_681;
typedef _gostring_ swig_type_682;
typedef long long swig_type_683;
typedef _gostring_ swig_type_684;
typedef _gostring_ swig_type_685;
typedef _gostring_ swig_type_686;
typedef _gostring_ swig_type_687;
typedef _gostring_ swig_type_688;
typedef _gostring_ swig_type_689;
typedef _gostring_ swig_type_690;
typedef _gostring_ swig_type_691;
typedef _gostring_ swig_type_692;
typedef _gostring_ swig_type_693;
typedef _gostring_ swig_type_694;
typedef long long swig_type_695;
typedef _gostring_ swig_type_696;
typedef _gostring_ swig_type_697;
typedef _gostring_ swig_type_698;
typedef _gostring_ swig_type_699;
typedef _gostring_ swig_type_700;
typedef _gostring_ swig_type_701;
typedef long long swig_type_702;
typedef _gostring_ swig_type_703;
typedef _gostring_ swig_type_704;
typedef _gostring_ swig_type_705;
typedef _gostring_ swig_type_706;
typedef _gostring_ swig_type_707;
typedef _gostring_ swig_type_708;
typedef _gostring_ swig_type_709;
typedef long long swig_type_710;
typedef _gostring_ swig_type_711;
typedef long long swig_type_712;
typedef _gostring_ swig_type_713;
typedef _gostring_ swig_type_714;
typedef long long swig_type_715;
typedef long long swig_type_716;
typedef _gostring_ swig_type_717;
typedef _gostring_ swig_type_718;
typedef _gostring_ swig_type_719;
typedef long long swig_type_720;
typedef _gostring_ swig_type_721;
typedef _gostring_ swig_type_722;
typedef _gostring_ swig_type_723;
typedef _gostring_ swig_type_724;
typedef _gostring_ swig_type_725;
typedef _gostring_ swig_type_726;
typedef _gostring_ swig_type_727;
typedef _gostring_ swig_type_728;
typedef _gostring_ swig_type_729;
typedef _gostring_ swig_type_730;
typedef _gostring_ swig_type_731;
typedef _gostring_ swig_type_732;
typedef _gostring_ swig_type_733;
typedef _gostring_ swig_type_734;
typedef _gostring_ swig_type_735;
typedef _gostring_ swig_type_736;
typedef _gostring_ swig_type_737;
typedef _gostring_ swig_type_738;
typedef _gostring_ swig_type_739;
typedef _gostring_ swig_type_740;
typedef _gostring_ swig_type_741;
typedef _gostring_ swig_type_742;
typedef _gostring_ swig_type_743;
typedef _gostring_ swig_type_744;
typedef long long swig_type_745;
typedef _gostring_ swig_type_746;
typedef _gostring_ swig_type_747;
typedef long long swig_type_748;
typedef _gostring_ swig_type_749;
typedef _gostring_ swig_type_750;
typedef _gostring_ swig_type_751;
typedef _gostring_ swig_type_752;
typedef _gostring_ swig_type_753;
typedef _gostring_ swig_type_754;
typedef _gostring_ swig_type_755;
typedef _gostring_ swig_type_756;
typedef _gostring_ swig_type_757;
typedef _gostring_ swig_type_758;
typedef _gostring_ swig_type_759;
typedef _gostring_ swig_type_760;
typedef _gostring_ swig_type_761;
typedef _gostring_ swig_type_762;
typedef _gostring_ swig_type_763;
typedef _gostring_ swig_type_764;
typedef _gostring_ swig_type_765;
typedef _gostring_ swig_type_766;
typedef _gostring_ swig_type_767;
typedef _gostring_ swig_type_768;
typedef _gostring_ swig_type_769;
typedef _gostring_ swig_type_770;
typedef _gostring_ swig_type_771;
typedef _gostring_ swig_type_772;
typedef _gostring_ swig_type_773;
typedef _gostring_ swig_type_774;
typedef long long swig_type_775;
typedef _gostring_ swig_type_776;
typedef _gostring_ swig_type_777;
typedef _gostring_ swig_type_778;
typedef _gostring_ swig_type_779;
typedef _gostring_ swig_type_780;
typedef long long swig_type_781;
typedef _gostring_ swig_type_782;
typedef _gostring_ swig_type_783;
typedef _gostring_ swig_type_784;
typedef _gostring_ swig_type_785;
typedef long long swig_type_786;
typedef _gostring_ swig_type_787;
typedef _gostring_ swig_type_788;
typedef _gostring_ swig_type_789;
typedef _gostring_ swig_type_790;
typedef _gostring_ swig_type_791;
typedef _gostring_ swig_type_792;
typedef _gostring_ swig_type_793;
typedef _gostring_ swig_type_794;
typedef _gostring_ swig_type_795;
typedef _gostring_ swig_type_796;
typedef _gostring_ swig_type_797;
typedef _gostring_ swig_type_798;
typedef _gostring_ swig_type_799;
typedef _gostring_ swig_type_800;
typedef _gostring_ swig_type_801;
typedef _gostring_ swig_type_802;
typedef _gostring_ swig_type_803;
typedef _gostring_ swig_type_804;
typedef _gostring_ swig_type_805;
typedef _gostring_ swig_type_806;
typedef _gostring_ swig_type_807;
typedef _gostring_ swig_type_808;
typedef _gostring_ swig_type_809;
typedef _gostring_ swig_type_810;
typedef _gostring_ swig_type_811;
typedef _gostring_ swig_type_812;
typedef _gostring_ swig_type_813;
typedef _gostring_ swig_type_814;
typedef _gostring_ swig_type_815;
typedef _gostring_ swig_type_816;
typedef long long swig_type_817;
typedef long long swig_type_818;
typedef _gostring_ swig_type_819;
typedef _gostring_ swig_type_820;
extern void _wrap_Swig_free_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_swsscommon_2432462d295473d6(swig_intgo arg1);
extern uintptr_t _wrap_new_FieldValuePair__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_FieldValuePair__SWIG_1_swsscommon_2432462d295473d6(swig_type_1 arg1, swig_type_2 arg2);
extern uintptr_t _wrap_new_FieldValuePair__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePair_first_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_3 arg2);
extern swig_type_4 _wrap_FieldValuePair_first_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePair_second_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_FieldValuePair_second_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_FieldValuePair_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_FieldValuePairs__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_FieldValuePairs__SWIG_1_swsscommon_2432462d295473d6(swig_type_7 arg1);
extern uintptr_t _wrap_new_FieldValuePairs__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_8 _wrap_FieldValuePairs_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_9 _wrap_FieldValuePairs_capacity_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairs_reserve_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_10 arg2);
extern _Bool _wrap_FieldValuePairs_isEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairs_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairs_add_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FieldValuePairs_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_FieldValuePairs_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_FieldValuePairs_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_FieldValuePairsList__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_FieldValuePairsList__SWIG_1_swsscommon_2432462d295473d6(swig_type_11 arg1);
extern uintptr_t _wrap_new_FieldValuePairsList__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_12 _wrap_FieldValuePairsList_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_13 _wrap_FieldValuePairsList_capacity_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairsList_reserve_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_14 arg2);
extern _Bool _wrap_FieldValuePairsList_isEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairsList_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValuePairsList_add_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_FieldValuePairsList_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_FieldValuePairsList_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_FieldValuePairsList_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_FieldValueMap__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_FieldValueMap__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_FieldValueMap_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_FieldValueMap_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_FieldValueMap_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_15 _wrap_FieldValueMap_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_16 arg2);
extern void _wrap_FieldValueMap_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_17 arg2, swig_type_18 arg3);
extern void _wrap_FieldValueMap_delete_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_19 arg2);
extern _Bool _wrap_FieldValueMap_has_key_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_20 arg2);
extern void _wrap_delete_FieldValueMap_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_VectorString__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_VectorString__SWIG_1_swsscommon_2432462d295473d6(swig_type_21 arg1);
extern uintptr_t _wrap_new_VectorString__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_22 _wrap_VectorString_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_23 _wrap_VectorString_capacity_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorString_reserve_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_24 arg2);
extern _Bool _wrap_VectorString_isEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorString_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorString_add_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_25 arg2);
extern swig_type_26 _wrap_VectorString_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VectorString_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_27 arg3);
extern void _wrap_delete_VectorString_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_ScanResult__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_ScanResult__SWIG_1_swsscommon_2432462d295473d6(swig_type_28 arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_ScanResult__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ScanResult_first_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_29 arg2);
extern swig_type_30 _wrap_ScanResult_first_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ScanResult_second_set_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ScanResult_second_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ScanResult_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_GetTableResult__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_GetTableResult__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetTableResult_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_GetTableResult_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_GetTableResult_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_GetTableResult_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_31 arg2);
extern void _wrap_GetTableResult_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_32 arg2, uintptr_t arg3);
extern void _wrap_GetTableResult_delete_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_33 arg2);
extern _Bool _wrap_GetTableResult_has_key_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_34 arg2);
extern void _wrap_delete_GetTableResult_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_GetConfigResult__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_GetConfigResult__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetConfigResult_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_GetConfigResult_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_GetConfigResult_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_GetConfigResult_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_35 arg2);
extern void _wrap_GetConfigResult_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_36 arg2, uintptr_t arg3);
extern void _wrap_GetConfigResult_delete_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_37 arg2);
extern _Bool _wrap_GetConfigResult_has_key_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_38 arg2);
extern void _wrap_delete_GetConfigResult_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_GetInstanceListResult__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_GetInstanceListResult__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetInstanceListResult_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_GetInstanceListResult_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_GetInstanceListResult_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_GetInstanceListResult_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_39 arg2);
extern void _wrap_GetInstanceListResult_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_40 arg2, uintptr_t arg3);
extern void _wrap_GetInstanceListResult_delete_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_41 arg2);
extern _Bool _wrap_GetInstanceListResult_has_key_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_42 arg2);
extern void _wrap_delete_GetInstanceListResult_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_KeyOpFieldsValuesQueue_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_KeyOpFieldsValuesQueue__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_KeyOpFieldsValuesQueue__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_KeyOpFieldsValuesQueue__SWIG_2_swsscommon_2432462d295473d6(swig_intgo arg1);
extern uintptr_t _wrap_new_KeyOpFieldsValuesQueue__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_KeyOpFieldsValuesQueue_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyOpFieldsValuesQueue_assign_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_KeyOpFieldsValuesQueue_swap_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_KeyOpFieldsValuesQueue_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_KeyOpFieldsValuesQueue_max_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyOpFieldsValuesQueue_resize__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_KeyOpFieldsValuesQueue_resize__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_KeyOpFieldsValuesQueue_front_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_KeyOpFieldsValuesQueue_back_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyOpFieldsValuesQueue_push_front_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_KeyOpFieldsValuesQueue_push_back_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_KeyOpFieldsValuesQueue_pop_front_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyOpFieldsValuesQueue_pop_back_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyOpFieldsValuesQueue_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_KeyOpFieldsValuesQueue_getitem_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_KeyOpFieldsValuesQueue_setitem_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_KeyOpFieldsValuesQueue_delitem_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_KeyOpFieldsValuesQueue_getslice_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern void _wrap_KeyOpFieldsValuesQueue_setslice_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, uintptr_t arg4);
extern void _wrap_KeyOpFieldsValuesQueue_delslice_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_VectorSonicDbKey__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_VectorSonicDbKey__SWIG_1_swsscommon_2432462d295473d6(swig_type_43 arg1);
extern uintptr_t _wrap_new_VectorSonicDbKey__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_44 _wrap_VectorSonicDbKey_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_45 _wrap_VectorSonicDbKey_capacity_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorSonicDbKey_reserve_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_46 arg2);
extern _Bool _wrap_VectorSonicDbKey_isEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorSonicDbKey_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_VectorSonicDbKey_add_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VectorSonicDbKey_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VectorSonicDbKey_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_VectorSonicDbKey_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_CastSelectableToRedisSelectObj_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_CastSelectableToSubscriberTableObj_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_47 _wrap_EMPTY_PREFIX_swsscommon_2432462d295473d6(void);
extern void _wrap_RedisInstInfo_unixSocketPath_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_48 arg2);
extern swig_type_49 _wrap_RedisInstInfo_unixSocketPath_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisInstInfo_hostname_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_50 arg2);
extern swig_type_51 _wrap_RedisInstInfo_hostname_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisInstInfo_port_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_RedisInstInfo_port_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_RedisInstInfo_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_RedisInstInfo_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicDBInfo_instName_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_52 arg2);
extern swig_type_53 _wrap_SonicDBInfo_instName_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicDBInfo_dbId_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SonicDBInfo_dbId_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicDBInfo_separator_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_54 arg2);
extern swig_type_55 _wrap_SonicDBInfo_separator_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_SonicDBInfo_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_SonicDBInfo_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicDBKey_containerName_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_56 arg2);
extern swig_type_57 _wrap_SonicDBKey_containerName_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicDBKey_netns_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_58 arg2);
extern swig_type_59 _wrap_SonicDBKey_netns_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_SonicDBKey__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_SonicDBKey__SWIG_1_swsscommon_2432462d295473d6(swig_type_60 arg1);
extern _Bool _wrap_SonicDBKey_isEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_61 _wrap_SonicDBKey_toString_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_SonicDBKey_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_SonicDBKeyHash_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_SonicDBKeyHash_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_62 _wrap_SonicDBConfig_DEFAULT_SONIC_DB_CONFIG_FILE_SonicDBConfig_swsscommon_2432462d295473d6(void);
extern swig_type_63 _wrap_SonicDBConfig_DEFAULT_SONIC_DB_GLOBAL_CONFIG_FILE_SonicDBConfig_swsscommon_2432462d295473d6(void);
extern void _wrap_SonicDBConfig_initialize__SWIG_0_swsscommon_2432462d295473d6(swig_type_64 arg1);
extern void _wrap_SonicDBConfig_initialize__SWIG_1_swsscommon_2432462d295473d6(void);
extern void _wrap_SonicDBConfig_initializeGlobalConfig__SWIG_0_swsscommon_2432462d295473d6(swig_type_65 arg1);
extern void _wrap_SonicDBConfig_initializeGlobalConfig__SWIG_1_swsscommon_2432462d295473d6(void);
extern void _wrap_SonicDBConfig_reset_swsscommon_2432462d295473d6(void);
extern void _wrap_SonicDBConfig_validateNamespace_swsscommon_2432462d295473d6(swig_type_66 arg1);
extern swig_type_67 _wrap_SonicDBConfig_getDbInst__SWIG_0_swsscommon_2432462d295473d6(swig_type_68 arg1, swig_type_69 arg2, swig_type_70 arg3);
extern swig_type_71 _wrap_SonicDBConfig_getDbInst__SWIG_1_swsscommon_2432462d295473d6(swig_type_72 arg1, swig_type_73 arg2);
extern swig_type_74 _wrap_SonicDBConfig_getDbInst__SWIG_2_swsscommon_2432462d295473d6(swig_type_75 arg1);
extern swig_type_76 _wrap_SonicDBConfig_getDbInst__SWIG_3_swsscommon_2432462d295473d6(swig_type_77 arg1, uintptr_t arg2);
extern swig_intgo _wrap_SonicDBConfig_getDbId__SWIG_0_swsscommon_2432462d295473d6(swig_type_78 arg1, swig_type_79 arg2, swig_type_80 arg3);
extern swig_intgo _wrap_SonicDBConfig_getDbId__SWIG_1_swsscommon_2432462d295473d6(swig_type_81 arg1, swig_type_82 arg2);
extern swig_intgo _wrap_SonicDBConfig_getDbId__SWIG_2_swsscommon_2432462d295473d6(swig_type_83 arg1);
extern swig_intgo _wrap_SonicDBConfig_getDbId__SWIG_3_swsscommon_2432462d295473d6(swig_type_84 arg1, uintptr_t arg2);
extern swig_type_85 _wrap_SonicDBConfig_getSeparator__SWIG_0_swsscommon_2432462d295473d6(swig_type_86 arg1, swig_type_87 arg2, swig_type_88 arg3);
extern swig_type_89 _wrap_SonicDBConfig_getSeparator__SWIG_1_swsscommon_2432462d295473d6(swig_type_90 arg1, swig_type_91 arg2);
extern swig_type_92 _wrap_SonicDBConfig_getSeparator__SWIG_2_swsscommon_2432462d295473d6(swig_type_93 arg1);
extern swig_type_94 _wrap_SonicDBConfig_getSeparator__SWIG_3_swsscommon_2432462d295473d6(swig_type_95 arg1, uintptr_t arg2);
extern swig_type_96 _wrap_SonicDBConfig_getSeparator__SWIG_4_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_97 arg2, swig_type_98 arg3);
extern swig_type_99 _wrap_SonicDBConfig_getSeparator__SWIG_5_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_100 arg2);
extern swig_type_101 _wrap_SonicDBConfig_getSeparator__SWIG_6_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_102 _wrap_SonicDBConfig_getSeparator__SWIG_7_swsscommon_2432462d295473d6(swig_intgo arg1, uintptr_t arg2);
extern swig_type_103 _wrap_SonicDBConfig_getSeparator__SWIG_8_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_104 _wrap_SonicDBConfig_getDbSock__SWIG_0_swsscommon_2432462d295473d6(swig_type_105 arg1, swig_type_106 arg2, swig_type_107 arg3);
extern swig_type_108 _wrap_SonicDBConfig_getDbSock__SWIG_1_swsscommon_2432462d295473d6(swig_type_109 arg1, swig_type_110 arg2);
extern swig_type_111 _wrap_SonicDBConfig_getDbSock__SWIG_2_swsscommon_2432462d295473d6(swig_type_112 arg1);
extern swig_type_113 _wrap_SonicDBConfig_getDbSock__SWIG_3_swsscommon_2432462d295473d6(swig_type_114 arg1, uintptr_t arg2);
extern swig_type_115 _wrap_SonicDBConfig_getDbHostname__SWIG_0_swsscommon_2432462d295473d6(swig_type_116 arg1, swig_type_117 arg2, swig_type_118 arg3);
extern swig_type_119 _wrap_SonicDBConfig_getDbHostname__SWIG_1_swsscommon_2432462d295473d6(swig_type_120 arg1, swig_type_121 arg2);
extern swig_type_122 _wrap_SonicDBConfig_getDbHostname__SWIG_2_swsscommon_2432462d295473d6(swig_type_123 arg1);
extern swig_type_124 _wrap_SonicDBConfig_getDbHostname__SWIG_3_swsscommon_2432462d295473d6(swig_type_125 arg1, uintptr_t arg2);
extern swig_intgo _wrap_SonicDBConfig_getDbPort__SWIG_0_swsscommon_2432462d295473d6(swig_type_126 arg1, swig_type_127 arg2, swig_type_128 arg3);
extern swig_intgo _wrap_SonicDBConfig_getDbPort__SWIG_1_swsscommon_2432462d295473d6(swig_type_129 arg1, swig_type_130 arg2);
extern swig_intgo _wrap_SonicDBConfig_getDbPort__SWIG_2_swsscommon_2432462d295473d6(swig_type_131 arg1);
extern swig_intgo _wrap_SonicDBConfig_getDbPort__SWIG_3_swsscommon_2432462d295473d6(swig_type_132 arg1, uintptr_t arg2);
extern uintptr_t _wrap_SonicDBConfig_getNamespaces_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_SonicDBConfig_getDbKeys_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_SonicDBConfig_getDbList__SWIG_0_swsscommon_2432462d295473d6(swig_type_133 arg1, swig_type_134 arg2);
extern uintptr_t _wrap_SonicDBConfig_getDbList__SWIG_1_swsscommon_2432462d295473d6(swig_type_135 arg1);
extern uintptr_t _wrap_SonicDBConfig_getDbList__SWIG_2_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_SonicDBConfig_getDbList__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_SonicDBConfig_isInit_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_SonicDBConfig_isGlobalInit_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_SonicDBConfig_getInstanceList__SWIG_0_swsscommon_2432462d295473d6(swig_type_136 arg1, swig_type_137 arg2);
extern uintptr_t _wrap_SonicDBConfig_getInstanceList__SWIG_1_swsscommon_2432462d295473d6(swig_type_138 arg1);
extern uintptr_t _wrap_SonicDBConfig_getInstanceList__SWIG_2_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_SonicDBConfig_getInstanceList__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_SonicDBConfig_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_SonicDBConfig_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_139 _wrap_RedisContext_DEFAULT_UNIXSOCKET_RedisContext_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_RedisContext_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_RedisContext_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisContext_getContext_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisContext_setClientName_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_140 arg2);
extern swig_type_141 _wrap_RedisContext_getClientName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_142 _wrap_DBConnector_DEFAULT_UNIXSOCKET_DBConnector_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_DBConnector__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_DBConnector__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_DBConnector__SWIG_2_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_143 arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_DBConnector__SWIG_3_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_144 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_DBConnector__SWIG_4_swsscommon_2432462d295473d6(swig_type_145 arg1, swig_intgo arg2, _Bool arg3);
extern uintptr_t _wrap_new_DBConnector__SWIG_5_swsscommon_2432462d295473d6(swig_type_146 arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_DBConnector__SWIG_6_swsscommon_2432462d295473d6(swig_type_147 arg1, swig_intgo arg2, _Bool arg3, swig_type_148 arg4);
extern uintptr_t _wrap_new_DBConnector__SWIG_7_swsscommon_2432462d295473d6(swig_type_149 arg1, swig_intgo arg2, _Bool arg3, uintptr_t arg4);
extern swig_intgo _wrap_DBConnector_getDbId_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_150 _wrap_DBConnector_getDbName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_151 _wrap_DBConnector_getNamespace_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_DBConnector_getDBKey_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_DBConnector_Xselect_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_DBConnector_newConnector_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DBConnector_pubsub_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_152 _wrap_DBConnector_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_153 arg2);
extern _Bool _wrap_DBConnector_exists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_154 arg2);
extern swig_type_155 _wrap_DBConnector_hdel__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_156 arg2, swig_type_157 arg3);
extern swig_type_158 _wrap_DBConnector_hdel__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_159 arg2, uintptr_t arg3);
extern void _wrap_DBConnector_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBConnector_keys_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_160 arg2);
extern uintptr_t _wrap_DBConnector_scan__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_161 arg3, swig_intgo arg4);
extern uintptr_t _wrap_DBConnector_scan__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_162 arg3);
extern uintptr_t _wrap_DBConnector_scan__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DBConnector_scan__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_DBConnector_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_163 arg2, swig_type_164 arg3);
extern _Bool _wrap_DBConnector_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_165 arg2, swig_intgo arg3);
extern void _wrap_DBConnector_hset_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_166 arg2, swig_type_167 arg3, swig_type_168 arg4);
extern void _wrap_DBConnector_hmset_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_DBConnector_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_169 arg2);
extern uintptr_t _wrap_DBConnector_hget_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_170 arg2, swig_type_171 arg3);
extern _Bool _wrap_DBConnector_hexists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_172 arg2, swig_type_173 arg3);
extern swig_type_174 _wrap_DBConnector_incr_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_175 arg2);
extern swig_type_176 _wrap_DBConnector_decr_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_177 arg2);
extern swig_type_178 _wrap_DBConnector_rpush_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_179 arg2, swig_type_180 arg3);
extern uintptr_t _wrap_DBConnector_blpop_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_181 arg2, swig_intgo arg3);
extern void _wrap_DBConnector_subscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_182 arg2);
extern void _wrap_DBConnector_psubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_183 arg2);
extern void _wrap_DBConnector_punsubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_184 arg2);
extern swig_type_185 _wrap_DBConnector_publish_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_186 arg2, swig_type_187 arg3);
extern void _wrap_DBConnector_config_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_188 arg2, swig_type_189 arg3);
extern _Bool _wrap_DBConnector_flushdb_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_DBConnector_getall_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_DBConnector_hgetall_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_190 arg2);
extern void _wrap_delete_DBConnector_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_DBConnector_getContext_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_DBConnector_setClientName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_191 arg1);
extern swig_type_192 _wrap_DBConnector_getClientName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_new_SonicV2Connector_Native__SWIG_0_swsscommon_2432462d295473d6(_Bool arg1, swig_type_193 arg2);
extern uintptr_t _wrap_new_SonicV2Connector_Native__SWIG_1_swsscommon_2432462d295473d6(_Bool arg1);
extern uintptr_t _wrap_new_SonicV2Connector_Native__SWIG_2_swsscommon_2432462d295473d6(void);
extern swig_type_194 _wrap_SonicV2Connector_Native_getNamespace_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_SonicV2Connector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_195 arg2, _Bool arg3);
extern void _wrap_SonicV2Connector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_196 arg2);
extern void _wrap_SonicV2Connector_Native_close__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_197 arg2);
extern void _wrap_SonicV2Connector_Native_close__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_SonicV2Connector_Native_get_db_list_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_SonicV2Connector_Native_get_dbid_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_198 arg2);
extern swig_type_199 _wrap_SonicV2Connector_Native_get_db_separator_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_200 arg2);
extern uintptr_t _wrap_SonicV2Connector_Native_get_redis_client_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_201 arg2);
extern swig_type_202 _wrap_SonicV2Connector_Native_publish_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_203 arg2, swig_type_204 arg3, swig_type_205 arg4);
extern _Bool _wrap_SonicV2Connector_Native_exists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_206 arg2, swig_type_207 arg3);
extern uintptr_t _wrap_SonicV2Connector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_208 arg2, swig_type_209 arg3, _Bool arg4);
extern uintptr_t _wrap_SonicV2Connector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_210 arg2, swig_type_211 arg3);
extern uintptr_t _wrap_SonicV2Connector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_212 arg2);
extern uintptr_t _wrap_SonicV2Connector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_213 arg2, swig_intgo arg3, swig_type_214 arg4, swig_intgo arg5);
extern uintptr_t _wrap_SonicV2Connector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_215 arg2, swig_intgo arg3, swig_type_216 arg4);
extern uintptr_t _wrap_SonicV2Connector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_217 arg2, swig_intgo arg3);
extern uintptr_t _wrap_SonicV2Connector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_218 arg2);
extern uintptr_t _wrap_SonicV2Connector_Native_get__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_219 arg2, swig_type_220 arg3, swig_type_221 arg4, _Bool arg5);
extern uintptr_t _wrap_SonicV2Connector_Native_get__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_222 arg2, swig_type_223 arg3, swig_type_224 arg4);
extern _Bool _wrap_SonicV2Connector_Native_hexists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_225 arg2, swig_type_226 arg3, swig_type_227 arg4);
extern uintptr_t _wrap_SonicV2Connector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_228 arg2, swig_type_229 arg3, _Bool arg4);
extern uintptr_t _wrap_SonicV2Connector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_230 arg2, swig_type_231 arg3);
extern void _wrap_SonicV2Connector_Native_hmset_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_232 arg2, swig_type_233 arg3, uintptr_t arg4);
extern swig_type_234 _wrap_SonicV2Connector_Native_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_235 arg2, swig_type_236 arg3, swig_type_237 arg4, swig_type_238 arg5, _Bool arg6);
extern swig_type_239 _wrap_SonicV2Connector_Native_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_240 arg2, swig_type_241 arg3, swig_type_242 arg4, swig_type_243 arg5);
extern swig_type_244 _wrap_SonicV2Connector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_245 arg2, swig_type_246 arg3, _Bool arg4);
extern swig_type_247 _wrap_SonicV2Connector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_248 arg2, swig_type_249 arg3);
extern void _wrap_SonicV2Connector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_250 arg2, swig_type_251 arg3);
extern void _wrap_delete_SonicV2Connector_Native_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_PubSub_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_PubSub_get_message__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, double arg2, _Bool arg3);
extern uintptr_t _wrap_PubSub_get_message__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_PubSub_get_message__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_PubSub_listen_message__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern uintptr_t _wrap_PubSub_listen_message__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_PubSub_psubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_252 arg2);
extern void _wrap_PubSub_punsubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_253 arg2);
extern swig_type_254 _wrap_PubSub_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_PubSub_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_PubSub_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_PubSub_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_255 _wrap_DELETED_KEY_SEPARATOR_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_ProfileProvider_instance_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_ProfileProvider_appendConfigs_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_256 arg2, swig_type_257 arg3, uintptr_t arg4, uintptr_t arg5);
extern uintptr_t _wrap_ProfileProvider_getConfig_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_258 arg2, swig_type_259 arg3, swig_type_260 arg4, uintptr_t arg5);
extern uintptr_t _wrap_ProfileProvider_getConfigs__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_261 arg2, swig_type_262 arg3, uintptr_t arg4);
extern uintptr_t _wrap_ProfileProvider_getConfigs__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ProfileProvider_getKeys_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_263 arg2, uintptr_t arg3);
extern _Bool _wrap_ProfileProvider_tryRevertItem_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_264 arg2, swig_type_265 arg3, uintptr_t arg4);
extern _Bool _wrap_ProfileProvider_tryDeleteItem_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_266 arg2, swig_type_267 arg3, uintptr_t arg4);
extern swig_type_268 _wrap_ProfileProvider_getDeletedKeyName_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_269 arg2, swig_type_270 arg3, uintptr_t arg4);
extern void _wrap_delete_Selectable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_Selectable_getFd_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_271 _wrap_Selectable_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_Selectable_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_Selectable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_Selectable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_Selectable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_Selectable_getPri_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_Select_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_Select_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_Select_addSelectable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Select_removeSelectable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Select_addSelectables_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_OBJECT_Select_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_ERROR_Select_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_TIMEOUT_Select_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SIGNALINT_Select_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_Select_Xselect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3, _Bool arg4);
extern swig_intgo _wrap_Select_Xselect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_intgo _wrap_Select_Xselect__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_Select_isQueueEmpty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_272 _wrap_Select_resultToString_swsscommon_2432462d295473d6(swig_intgo arg1);
extern uintptr_t _wrap_new_RedisCommand_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_RedisCommand_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisCommand_format__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_273 arg2);
extern void _wrap_RedisCommand_formatArgv_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3, swig_voidp arg4);
extern void _wrap_RedisCommand_format__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_RedisCommand_formatHSET__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_274 arg2, uintptr_t arg3);
extern void _wrap_RedisCommand_formatHSET__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_275 arg2, uintptr_t arg3);
extern void _wrap_RedisCommand_formatHSET__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_276 arg2, swig_type_277 arg3, swig_type_278 arg4);
extern void _wrap_RedisCommand_formatHGET_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_279 arg2, swig_type_280 arg3);
extern void _wrap_RedisCommand_formatHDEL__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_281 arg2, swig_type_282 arg3);
extern void _wrap_RedisCommand_formatHDEL__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_283 arg2, uintptr_t arg3);
extern void _wrap_RedisCommand_formatEXPIRE_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_284 arg2, swig_type_285 arg3);
extern void _wrap_RedisCommand_formatTTL_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_286 arg2);
extern void _wrap_RedisCommand_formatDEL_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_287 arg2);
extern swig_intgo _wrap_RedisCommand_appendTo_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_288 _wrap_RedisCommand_toPrintableString_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_289 _wrap_RedisPipeline_COMMAND_MAX_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_RedisPipeline_NEWCONNECTOR_TIMEOUT_RedisPipeline_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_RedisPipeline__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_290 arg2);
extern uintptr_t _wrap_new_RedisPipeline__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_RedisPipeline_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisPipeline_push__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_RedisPipeline_push__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_291 _wrap_RedisPipeline_loadRedisScript_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_292 arg2);
extern uintptr_t _wrap_RedisPipeline_pop_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisPipeline_flush_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_293 _wrap_RedisPipeline_size_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_RedisPipeline_getDbId_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_294 _wrap_RedisPipeline_getDbName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisPipeline_getDBConnector_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisPipeline_initializeOwnerTid_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_RedisError_swsscommon_2432462d295473d6(swig_type_295 arg1, uintptr_t arg2);
extern swig_type_296 _wrap_RedisError_what_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_RedisError_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisMessage_Xtype_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_297 arg2);
extern swig_type_298 _wrap_RedisMessage_Xtype_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisMessage_pattern_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_299 arg2);
extern swig_type_300 _wrap_RedisMessage_pattern_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisMessage_channel_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_301 arg2);
extern swig_type_302 _wrap_RedisMessage_channel_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisMessage_data_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_303 arg2);
extern swig_type_304 _wrap_RedisMessage_data_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_RedisMessage_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_RedisMessage_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_RedisReply__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_RedisReply__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_305 arg2);
extern uintptr_t _wrap_new_RedisReply__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_RedisReply__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_306 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_RedisReply__SWIG_4_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_RedisReply_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisReply_release_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisReply_getContext_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_307 _wrap_RedisReply_getChildCount_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisReply_getChild_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_308 arg2);
extern uintptr_t _wrap_RedisReply_releaseChild_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_309 arg2);
extern void _wrap_RedisReply_checkReplyType_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RedisReply_checkStatusOK_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisReply_checkStatusQueued_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_310 _wrap_RedisReply_to_string__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_311 _wrap_RedisReply_to_string__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_312 arg2);
extern swig_type_313 _wrap_RedisReply_to_string__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_RedisSelect_SUBSCRIBE_TIMEOUT_RedisSelect_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_RedisSelect__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1);
extern uintptr_t _wrap_new_RedisSelect__SWIG_1_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_RedisSelect_getFd_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_314 _wrap_RedisSelect_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RedisSelect_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RedisSelect_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RedisSelect_initializedWithData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisSelect_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_RedisSelect_getDbConnector_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisSelect_subscribe_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_315 arg3);
extern void _wrap_RedisSelect_psubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_316 arg3);
extern void _wrap_RedisSelect_punsubscribe_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_317 arg2);
extern void _wrap_RedisSelect_setQueueLength_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_318 arg2);
extern void _wrap_delete_RedisSelect_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_RedisSelect_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_new_RedisTransactioner_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_RedisTransactioner_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisTransactioner_multi_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RedisTransactioner_exec_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_RedisTransactioner_enqueue__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_319 arg2, swig_intgo arg3);
extern void _wrap_RedisTransactioner_enqueue__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_RedisTransactioner_dequeueReply_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_320 _wrap_ConfigDBConnector_Native_INIT_INDICATOR_ConfigDBConnector_Native_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_ConfigDBConnector_Native__SWIG_0_swsscommon_2432462d295473d6(_Bool arg1, swig_type_321 arg2);
extern uintptr_t _wrap_new_ConfigDBConnector_Native__SWIG_1_swsscommon_2432462d295473d6(_Bool arg1);
extern uintptr_t _wrap_new_ConfigDBConnector_Native__SWIG_2_swsscommon_2432462d295473d6(void);
extern void _wrap_ConfigDBConnector_Native_db_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_322 arg2, _Bool arg3, _Bool arg4);
extern void _wrap_ConfigDBConnector_Native_db_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_323 arg2, _Bool arg3);
extern void _wrap_ConfigDBConnector_Native_db_connect__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_324 arg2);
extern void _wrap_ConfigDBConnector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2, _Bool arg3);
extern void _wrap_ConfigDBConnector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern void _wrap_ConfigDBConnector_Native_connect__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ConfigDBConnector_Native_set_entry_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_325 arg2, swig_type_326 arg3, uintptr_t arg4);
extern void _wrap_ConfigDBConnector_Native_mod_entry_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_327 arg2, swig_type_328 arg3, uintptr_t arg4);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_entry_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_329 arg2, swig_type_330 arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_331 arg2, _Bool arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_332 arg2);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_table_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_333 arg2);
extern void _wrap_ConfigDBConnector_Native_delete_table_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_334 arg2);
extern void _wrap_ConfigDBConnector_Native_mod_config_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_config_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_335 _wrap_ConfigDBConnector_Native_getKeySeparator_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_336 _wrap_ConfigDBConnector_Native_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_337 _wrap_ConfigDBConnector_Native_getDbName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ConfigDBConnector_Native_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_338 _wrap_ConfigDBConnector_Native_getNamespace_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConfigDBConnector_Native_close__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_339 arg1);
extern void _wrap_ConfigDBConnector_Native_close__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_db_list_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_intgo _wrap_ConfigDBConnector_Native_get_dbid_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_340 arg1);
extern swig_type_341 _wrap_ConfigDBConnector_Native_get_db_separator_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_342 arg1);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_redis_client_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_343 arg1);
extern swig_type_344 _wrap_ConfigDBConnector_Native_publish_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_345 arg1, swig_type_346 arg2, swig_type_347 arg3);
extern _Bool _wrap_ConfigDBConnector_Native_exists_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_348 arg1, swig_type_349 arg2);
extern uintptr_t _wrap_ConfigDBConnector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_350 arg1, swig_type_351 arg2, _Bool arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_352 arg1, swig_type_353 arg2);
extern uintptr_t _wrap_ConfigDBConnector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_354 arg1);
extern uintptr_t _wrap_ConfigDBConnector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_355 arg1, swig_intgo arg2, swig_type_356 arg3, swig_intgo arg4);
extern uintptr_t _wrap_ConfigDBConnector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_357 arg1, swig_intgo arg2, swig_type_358 arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_359 arg1, swig_intgo arg2);
extern uintptr_t _wrap_ConfigDBConnector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_360 arg1);
extern uintptr_t _wrap_ConfigDBConnector_Native_get__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_361 arg1, swig_type_362 arg2, swig_type_363 arg3, _Bool arg4);
extern uintptr_t _wrap_ConfigDBConnector_Native_get__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_364 arg1, swig_type_365 arg2, swig_type_366 arg3);
extern _Bool _wrap_ConfigDBConnector_Native_hexists_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_367 arg1, swig_type_368 arg2, swig_type_369 arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_370 arg1, swig_type_371 arg2, _Bool arg3);
extern uintptr_t _wrap_ConfigDBConnector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_372 arg1, swig_type_373 arg2);
extern void _wrap_ConfigDBConnector_Native_hmset_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_374 arg1, swig_type_375 arg2, uintptr_t arg3);
extern swig_type_376 _wrap_ConfigDBConnector_Native_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_377 arg1, swig_type_378 arg2, swig_type_379 arg3, swig_type_380 arg4, _Bool arg5);
extern swig_type_381 _wrap_ConfigDBConnector_Native_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_382 arg1, swig_type_383 arg2, swig_type_384 arg3, swig_type_385 arg4);
extern swig_type_386 _wrap_ConfigDBConnector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_387 arg1, swig_type_388 arg2, _Bool arg3);
extern swig_type_389 _wrap_ConfigDBConnector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_390 arg1, swig_type_391 arg2);
extern void _wrap_ConfigDBConnector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_392 arg1, swig_type_393 arg2);
extern uintptr_t _wrap_new_ConfigDBPipeConnector_Native__SWIG_0_swsscommon_2432462d295473d6(_Bool arg1, swig_type_394 arg2);
extern uintptr_t _wrap_new_ConfigDBPipeConnector_Native__SWIG_1_swsscommon_2432462d295473d6(_Bool arg1);
extern uintptr_t _wrap_new_ConfigDBPipeConnector_Native__SWIG_2_swsscommon_2432462d295473d6(void);
extern void _wrap_ConfigDBPipeConnector_Native_set_entry_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_395 arg2, swig_type_396 arg3, uintptr_t arg4);
extern void _wrap_ConfigDBPipeConnector_Native_mod_config_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_config_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ConfigDBPipeConnector_Native_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_397 arg1, _Bool arg2, _Bool arg3);
extern void _wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_398 arg1, _Bool arg2);
extern void _wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_399 arg1);
extern void _wrap_ConfigDBPipeConnector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, _Bool arg1, _Bool arg2);
extern void _wrap_ConfigDBPipeConnector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, _Bool arg1);
extern void _wrap_ConfigDBPipeConnector_Native_connect__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConfigDBPipeConnector_Native_mod_entry_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_400 arg1, swig_type_401 arg2, uintptr_t arg3);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_entry_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_402 arg1, swig_type_403 arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_404 arg1, _Bool arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_405 arg1);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_table_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_406 arg1);
extern void _wrap_ConfigDBPipeConnector_Native_delete_table_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_407 arg1);
extern swig_type_408 _wrap_ConfigDBPipeConnector_Native_getKeySeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_409 _wrap_ConfigDBPipeConnector_Native_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_410 _wrap_ConfigDBPipeConnector_Native_getDbName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_411 _wrap_ConfigDBPipeConnector_Native_getNamespace_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConfigDBPipeConnector_Native_close__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_339 arg1);
extern void _wrap_ConfigDBPipeConnector_Native_close__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_db_list_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_intgo _wrap_ConfigDBPipeConnector_Native_get_dbid_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_340 arg1);
extern swig_type_412 _wrap_ConfigDBPipeConnector_Native_get_db_separator_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_342 arg1);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_redis_client_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_343 arg1);
extern swig_type_413 _wrap_ConfigDBPipeConnector_Native_publish_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_345 arg1, swig_type_346 arg2, swig_type_347 arg3);
extern _Bool _wrap_ConfigDBPipeConnector_Native_exists_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_348 arg1, swig_type_349 arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_350 arg1, swig_type_351 arg2, _Bool arg3);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_352 arg1, swig_type_353 arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_354 arg1);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_355 arg1, swig_intgo arg2, swig_type_356 arg3, swig_intgo arg4);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_357 arg1, swig_intgo arg2, swig_type_358 arg3);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_359 arg1, swig_intgo arg2);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_360 arg1);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_361 arg1, swig_type_362 arg2, swig_type_363 arg3, _Bool arg4);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_364 arg1, swig_type_365 arg2, swig_type_366 arg3);
extern _Bool _wrap_ConfigDBPipeConnector_Native_hexists_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_367 arg1, swig_type_368 arg2, swig_type_369 arg3);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_370 arg1, swig_type_371 arg2, _Bool arg3);
extern uintptr_t _wrap_ConfigDBPipeConnector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_372 arg1, swig_type_373 arg2);
extern void _wrap_ConfigDBPipeConnector_Native_hmset_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_374 arg1, swig_type_375 arg2, uintptr_t arg3);
extern swig_type_414 _wrap_ConfigDBPipeConnector_Native_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_377 arg1, swig_type_378 arg2, swig_type_379 arg3, swig_type_380 arg4, _Bool arg5);
extern swig_type_415 _wrap_ConfigDBPipeConnector_Native_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_382 arg1, swig_type_383 arg2, swig_type_384 arg3, swig_type_385 arg4);
extern swig_type_416 _wrap_ConfigDBPipeConnector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_387 arg1, swig_type_388 arg2, _Bool arg3);
extern swig_type_417 _wrap_ConfigDBPipeConnector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_390 arg1, swig_type_391 arg2);
extern void _wrap_ConfigDBPipeConnector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_392 arg1, swig_type_393 arg2);
extern swig_intgo _wrap_MQ_RESPONSE_MAX_COUNT_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_MQ_POLL_TIMEOUT_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_ORCH_ZMQ_PORT_get_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_ZmqMessageHandler_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqMessageHandler_handleReceivedData_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_ZmqServer_DEFAULT_POP_BATCH_SIZE_ZmqServer_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_ZmqServer__SWIG_0_swsscommon_2432462d295473d6(swig_type_418 arg1);
extern uintptr_t _wrap_new_ZmqServer__SWIG_1_swsscommon_2432462d295473d6(swig_type_419 arg1, swig_type_420 arg2);
extern void _wrap_delete_ZmqServer_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqServer_registerMessageHandler_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_421 arg2, swig_type_422 arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_ZmqClient__SWIG_0_swsscommon_2432462d295473d6(swig_type_423 arg1);
extern uintptr_t _wrap_new_ZmqClient__SWIG_1_swsscommon_2432462d295473d6(swig_type_424 arg1, swig_type_425 arg2);
extern void _wrap_delete_ZmqClient_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_ZmqClient_isConnected_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqClient_connect_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqClient_sendMsg_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_426 arg2, swig_type_427 arg3, uintptr_t arg4, uintptr_t arg5);
extern swig_intgo _wrap_ZmqConsumerStateTable_DEFAULT_POP_BATCH_SIZE_ZmqConsumerStateTable_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_ZmqConsumerStateTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_428 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5, _Bool arg6);
extern uintptr_t _wrap_new_ZmqConsumerStateTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_429 arg2, uintptr_t arg3, swig_intgo arg4, swig_intgo arg5);
extern uintptr_t _wrap_new_ZmqConsumerStateTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_430 arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_ZmqConsumerStateTable__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_431 arg2, uintptr_t arg3);
extern void _wrap_ZmqConsumerStateTable_pops__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_432 arg3);
extern void _wrap_ZmqConsumerStateTable_pops__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_ZmqConsumerStateTable_getFd_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_433 _wrap_ZmqConsumerStateTable_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_ZmqConsumerStateTable_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_ZmqConsumerStateTable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_ZmqConsumerStateTable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_ZmqConsumerStateTable_getDbConnector_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_434 _wrap_ZmqConsumerStateTable_dbUpdaterQueueSize_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ZmqConsumerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqConsumerStateTable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_intgo _wrap_ZmqConsumerStateTable_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ZmqConsumerStateTable_handleReceivedData_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_ZmqConsumerStateTable_SwigGetZmqMessageHandler_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_TableBase__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_435 arg2);
extern uintptr_t _wrap_new_TableBase__SWIG_1_swsscommon_2432462d295473d6(swig_type_436 arg1, swig_type_437 arg2);
extern swig_type_438 _wrap_TableBase_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_439 _wrap_TableBase_getTableName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_440 _wrap_TableBase_getKeyName_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_441 arg2);
extern swig_type_442 _wrap_TableBase_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_443 _wrap_TableBase_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_444 _wrap_TableBase_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_445 arg2);
extern swig_type_446 _wrap_TableBase_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_delete_TableBase_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_TableEntryWritable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_TableEntryWritable_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_447 arg2, uintptr_t arg3, swig_type_448 arg4, swig_type_449 arg5);
extern void _wrap_TableEntryWritable_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_450 arg2, uintptr_t arg3, swig_type_451 arg4);
extern void _wrap_TableEntryWritable_set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_452 arg2, uintptr_t arg3);
extern void _wrap_TableEntryWritable_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_453 arg2, swig_type_454 arg3, swig_type_455 arg4);
extern void _wrap_TableEntryWritable_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_456 arg2, swig_type_457 arg3);
extern void _wrap_TableEntryWritable_delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_458 arg2);
extern void _wrap_delete_TableEntryPoppable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_TableEntryPoppable_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_459 arg3);
extern void _wrap_TableEntryPoppable_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_TableEntryPoppable_pops__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_TableEntryPoppable_pops__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4, swig_type_460 arg5);
extern void _wrap_TableEntryPoppable_pops__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern swig_intgo _wrap_TableConsumable_DEFAULT_POP_BATCH_SIZE_TableConsumable_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_TableConsumable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_461 _wrap_TableConsumable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_462 _wrap_TableConsumable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_463 _wrap_TableConsumable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_465 _wrap_TableConsumable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_466 _wrap_TableConsumable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_467 _wrap_TableConsumable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_469 _wrap_TableConsumable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern void _wrap_TableConsumable_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_470 arg2);
extern void _wrap_TableConsumable_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_TableConsumable_pops__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_TableConsumable_pops__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_471 arg4);
extern void _wrap_TableConsumable_pops__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_TableConsumable_getFd_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_472 _wrap_TableConsumable_readData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_TableConsumable_hasData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_TableConsumable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_TableConsumable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_TableConsumable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_TableConsumable_getDbConnector_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_TableConsumable_subscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_473 arg2);
extern void _wrap_TableConsumable_psubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_474 arg2);
extern void _wrap_TableConsumable_punsubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_475 arg1);
extern void _wrap_TableConsumable_setQueueLength_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_476 arg1);
extern swig_intgo _wrap_TableConsumable_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_TableConsumable_SwigGetTableEntryPoppable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_TableConsumable_SwigGetRedisSelect_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_TableEntryEnumerable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_TableEntryEnumerable_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_477 arg2, uintptr_t arg3);
extern _Bool _wrap_TableEntryEnumerable_hget_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_478 arg2, swig_type_479 arg3, swig_voidp arg4);
extern void _wrap_TableEntryEnumerable_getKeys_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_TableEntryEnumerable_getContent_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_480 _wrap_DEFAULT_DB_TTL_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_Table__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_481 arg2);
extern uintptr_t _wrap_new_Table__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_482 arg2, _Bool arg3);
extern void _wrap_delete_Table_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_Table_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_483 arg2, uintptr_t arg3, swig_type_484 arg4, swig_type_485 arg5);
extern void _wrap_Table_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_486 arg2, uintptr_t arg3, swig_type_487 arg4);
extern void _wrap_Table_set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_488 arg2, uintptr_t arg3);
extern void _wrap_Table_set__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_489 arg2, uintptr_t arg3, swig_type_490 arg4, swig_type_491 arg5, swig_type_492 arg6);
extern void _wrap_Table_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_493 arg2, swig_type_494 arg3, swig_type_495 arg4);
extern void _wrap_Table_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_496 arg2, swig_type_497 arg3);
extern void _wrap_Table_delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_498 arg2);
extern _Bool _wrap_Table_ttl_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_499 arg2, swig_voidp arg3);
extern void _wrap_Table_hdel__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_500 arg2, swig_type_501 arg3, swig_type_502 arg4, swig_type_503 arg5);
extern void _wrap_Table_hdel__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_504 arg2, swig_type_505 arg3, swig_type_506 arg4);
extern void _wrap_Table_hdel__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_507 arg2, swig_type_508 arg3);
extern _Bool _wrap_Table_get_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_509 arg2, uintptr_t arg3);
extern _Bool _wrap_Table_hget_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_510 arg2, swig_type_511 arg3, swig_voidp arg4);
extern void _wrap_Table_hset__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_512 arg2, swig_type_513 arg3, swig_type_514 arg4, swig_type_515 arg5, swig_type_516 arg6);
extern void _wrap_Table_hset__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_517 arg2, swig_type_518 arg3, swig_type_519 arg4, swig_type_520 arg5);
extern void _wrap_Table_hset__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_521 arg2, swig_type_522 arg3, swig_type_523 arg4);
extern void _wrap_Table_getKeys_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Table_setBuffered_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern void _wrap_Table_flush_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_Table_dump_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_524 _wrap_Table_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_525 _wrap_Table_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_526 _wrap_Table_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_527 _wrap_Table_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_528 _wrap_Table_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_529 _wrap_Table_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_530 _wrap_Table_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern void _wrap_Table_getContent_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern uintptr_t _wrap_Table_SwigGetTableEntryEnumerable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_TableName_KeyValueOpQueues_swsscommon_2432462d295473d6(swig_type_531 arg1);
extern swig_type_532 _wrap_TableName_KeyValueOpQueues_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_TableName_KeyValueOpQueues_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_TableName_KeySet_swsscommon_2432462d295473d6(swig_type_533 arg1);
extern swig_type_534 _wrap_TableName_KeySet_getKeySetName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_535 _wrap_TableName_KeySet_getDelKeySetName_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_536 _wrap_TableName_KeySet_getStateHashPrefix_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_TableName_KeySet_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_LuaTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_537 arg2, swig_type_538 arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_LuaTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_539 arg2, swig_type_540 arg3);
extern void _wrap_delete_LuaTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_LuaTable_get_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern _Bool _wrap_LuaTable_hget_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_541 arg3, swig_voidp arg4);
extern swig_type_542 _wrap_LuaTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_543 _wrap_LuaTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_544 _wrap_LuaTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_545 _wrap_LuaTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_546 _wrap_LuaTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_547 _wrap_LuaTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_548 _wrap_LuaTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern uintptr_t _wrap_new_CounterTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_549 arg2);
extern uintptr_t _wrap_new_CounterTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_CounterTable_get_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_550 arg3, uintptr_t arg4);
extern _Bool _wrap_CounterTable_hget_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_551 arg3, swig_type_552 arg4, swig_voidp arg5);
extern uintptr_t _wrap_CounterTable_getCountersDB_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_CounterTable_getGbcountersDB_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_CounterTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_553 _wrap_CounterTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_554 _wrap_CounterTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_555 _wrap_CounterTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_556 _wrap_CounterTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_557 _wrap_CounterTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_558 _wrap_CounterTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_559 _wrap_CounterTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern uintptr_t _wrap__swig_NewDirectorCounterCounter_swsscommon_2432462d295473d6(int);
extern swig_type_560 _wrap__swig_DirectorCounter_upcall_GetLuaScript_swsscommon_2432462d295473d6(uintptr_t);
extern uintptr_t _wrap__swig_DirectorCounter_upcall_GetLuaArgv_swsscommon_2432462d295473d6(uintptr_t);
extern _Bool _wrap__swig_DirectorCounter_upcall_UsingLuaTable_swsscommon_2432462d295473d6(uintptr_t, uintptr_t arg0, swig_type_561 name);
extern uintptr_t _wrap__swig_DirectorCounter_upcall_GetLuaKeys_swsscommon_2432462d295473d6(uintptr_t, uintptr_t arg0, swig_type_562 name);
extern void _wrap_DeleteDirectorCounter_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_563 _wrap_Counter_getLuaScript_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_Counter_getLuaArgv_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_Counter_usingLuaTable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_561 arg3);
extern uintptr_t _wrap_Counter_getLuaKeys_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_562 arg3);
extern uintptr_t _wrap_Counter_getKey_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_564 arg3);
extern void _wrap_delete_Counter_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_Mode_UNION_PortCounter_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_Mode_ASIC_PortCounter_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_Mode_SYSTEMSIDE_PortCounter_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_Mode_LINESIDE_PortCounter_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_PortCounter__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1);
extern uintptr_t _wrap_new_PortCounter__SWIG_1_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_PortCounter_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_565 _wrap_PortCounter_getLuaScript_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_PortCounter_usingLuaTable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_566 arg3);
extern uintptr_t _wrap_PortCounter_getLuaKeys_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_567 arg3);
extern uintptr_t _wrap_PortCounter_getKey_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_568 arg3);
extern uintptr_t _wrap_PortCounter_keyCacheInstance_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_PortCounter_getLuaArgv_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_new_MacsecCounter_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_MacsecCounter_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_MacsecCounter_getKey_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_569 arg3);
extern uintptr_t _wrap_MacsecCounter_keyCacheInstance_swsscommon_2432462d295473d6(void);
extern swig_type_570 _wrap_MacsecCounter_getLuaScript_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_MacsecCounter_getLuaArgv_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_MacsecCounter_usingLuaTable_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_561 arg2);
extern uintptr_t _wrap_MacsecCounter_getLuaKeys_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_562 arg2);
extern uintptr_t _wrap_new_CounterKeyPair__SWIG_0_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_CounterKeyPair__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, swig_type_571 arg2);
extern uintptr_t _wrap_new_CounterKeyPair__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_CounterKeyPair_first_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_CounterKeyPair_first_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_CounterKeyPair_second_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_572 arg2);
extern swig_type_573 _wrap_CounterKeyPair_second_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_CounterKeyPair_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_KeyStringCache_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_KeyStringCache_enabled_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyStringCache_enable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_KeyStringCache_disable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_KeyStringCache_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyStringCache_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_574 _wrap_KeyStringCache_at_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_575 arg2);
extern void _wrap_KeyStringCache_insert_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_576 arg2, swig_type_577 arg3);
extern void _wrap_KeyStringCache_refresh_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_KeyStringCache_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_KeyPairCache_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_KeyPairCache_enabled_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyPairCache_enable_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_KeyPairCache_disable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_KeyPairCache_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_KeyPairCache_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_KeyPairCache_at_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_578 arg2);
extern void _wrap_KeyPairCache_insert_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_579 arg2, uintptr_t arg3);
extern void _wrap_KeyPairCache_refresh_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_KeyPairCache_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_ProducerTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_580 arg2);
extern uintptr_t _wrap_new_ProducerTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_581 arg2, _Bool arg3);
extern uintptr_t _wrap_new_ProducerTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_582 arg2);
extern uintptr_t _wrap_new_ProducerTable__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_583 arg2, swig_type_584 arg3);
extern void _wrap_delete_ProducerTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ProducerTable_setBuffered_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern void _wrap_ProducerTable_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_585 arg2, uintptr_t arg3, swig_type_586 arg4, swig_type_587 arg5);
extern void _wrap_ProducerTable_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_588 arg2, uintptr_t arg3, swig_type_589 arg4);
extern void _wrap_ProducerTable_set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_590 arg2, uintptr_t arg3);
extern void _wrap_ProducerTable_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_591 arg2, swig_type_592 arg3, swig_type_593 arg4);
extern void _wrap_ProducerTable_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_594 arg2, swig_type_595 arg3);
extern void _wrap_ProducerTable_delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_596 arg2);
extern void _wrap_ProducerTable_flush_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_597 _wrap_ProducerTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_598 _wrap_ProducerTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_599 _wrap_ProducerTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_600 _wrap_ProducerTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_601 _wrap_ProducerTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_602 _wrap_ProducerTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_603 _wrap_ProducerTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_604 _wrap_ProducerTable_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ProducerTable_SwigGetTableName_KeyValueOpQueues_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_605 arg2);
extern uintptr_t _wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_606 arg2, _Bool arg3);
extern uintptr_t _wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_607 arg2);
extern void _wrap_DeleteDirectorProducerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t, swig_type_608 key, uintptr_t values, swig_type_609 op, swig_type_610 prefix);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t, swig_type_611 key, uintptr_t values, swig_type_612 op);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t, swig_type_613 key, uintptr_t values);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t, swig_type_614 key, swig_type_615 op, swig_type_616 prefix);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t, swig_type_617 key, swig_type_618 op);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t, swig_type_619 key);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(uintptr_t, uintptr_t values);
extern void _wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(uintptr_t, uintptr_t keys);
extern uintptr_t _wrap_new_ProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_605 arg2);
extern uintptr_t _wrap_new_ProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_606 arg2, _Bool arg3);
extern uintptr_t _wrap_new_ProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_607 arg2);
extern void _wrap_delete_ProducerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ProducerStateTable_setBuffered_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern void _wrap_ProducerStateTable_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_608 arg2, uintptr_t arg3, swig_type_609 arg4, swig_type_610 arg5);
extern void _wrap_ProducerStateTable_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_611 arg2, uintptr_t arg3, swig_type_612 arg4);
extern void _wrap_ProducerStateTable_set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_613 arg2, uintptr_t arg3);
extern void _wrap_ProducerStateTable_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_614 arg2, swig_type_615 arg3, swig_type_616 arg4);
extern void _wrap_ProducerStateTable_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_617 arg2, swig_type_618 arg3);
extern void _wrap_ProducerStateTable_delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_619 arg2);
extern void _wrap_ProducerStateTable_set__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ProducerStateTable_delete__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ProducerStateTable_flush_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_620 _wrap_ProducerStateTable_count_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ProducerStateTable_clear_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ProducerStateTable_create_temp_view_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ProducerStateTable_apply_temp_view_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_621 _wrap_ProducerStateTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_622 _wrap_ProducerStateTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_623 _wrap_ProducerStateTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_624 _wrap_ProducerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_625 _wrap_ProducerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_626 _wrap_ProducerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_627 _wrap_ProducerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_628 _wrap_ProducerStateTable_getKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_629 _wrap_ProducerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_630 _wrap_ProducerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ProducerStateTable_SwigGetTableName_KeySet_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_631 arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_632 arg2, uintptr_t arg3);
extern uintptr_t _wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_633 arg2, uintptr_t arg3, _Bool arg4, _Bool arg5);
extern uintptr_t _wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_3_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_634 arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_4_swsscommon_2432462d295473d6(int, uintptr_t arg1, swig_type_635 arg2, uintptr_t arg3);
extern void _wrap_DeleteDirectorZmqProducerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t, swig_type_636 key, uintptr_t values, swig_type_637 op, swig_type_638 prefix);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t, swig_type_639 key, uintptr_t values, swig_type_640 op);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t, swig_type_641 key, uintptr_t values);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t, swig_type_642 key, swig_type_643 op, swig_type_644 prefix);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t, swig_type_645 key, swig_type_646 op);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t, swig_type_647 key);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(uintptr_t, uintptr_t values);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(uintptr_t, uintptr_t keys);
extern void _wrap__swig_DirectorZmqProducerStateTable_upcall_Send_swsscommon_2432462d295473d6(uintptr_t, uintptr_t kcos);
extern uintptr_t _wrap_new_ZmqProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_631 arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_new_ZmqProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_632 arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_ZmqProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_633 arg2, uintptr_t arg3, _Bool arg4, _Bool arg5);
extern uintptr_t _wrap_new_ZmqProducerStateTable__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_634 arg2, uintptr_t arg3, _Bool arg4);
extern uintptr_t _wrap_new_ZmqProducerStateTable__SWIG_4_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_635 arg2, uintptr_t arg3);
extern void _wrap_ZmqProducerStateTable_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_636 arg2, uintptr_t arg3, swig_type_637 arg4, swig_type_638 arg5);
extern void _wrap_ZmqProducerStateTable_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_639 arg2, uintptr_t arg3, swig_type_640 arg4);
extern void _wrap_ZmqProducerStateTable_set__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_641 arg2, uintptr_t arg3);
extern void _wrap_ZmqProducerStateTable_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_642 arg2, swig_type_643 arg3, swig_type_644 arg4);
extern void _wrap_ZmqProducerStateTable_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_645 arg2, swig_type_646 arg3);
extern void _wrap_ZmqProducerStateTable_delete__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_647 arg2);
extern void _wrap_ZmqProducerStateTable_set__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ZmqProducerStateTable_delete__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ZmqProducerStateTable_send_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_648 _wrap_ZmqProducerStateTable_dbUpdaterQueueSize_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ZmqProducerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ZmqProducerStateTable_setBuffered_swsscommon_2432462d295473d6(uintptr_t _swig_base, _Bool arg1);
extern void _wrap_ZmqProducerStateTable_flush_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_649 _wrap_ZmqProducerStateTable_count_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ZmqProducerStateTable_clear_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ZmqProducerStateTable_create_temp_view_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ZmqProducerStateTable_apply_temp_view_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_650 _wrap_ZmqProducerStateTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_651 _wrap_ZmqProducerStateTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_652 _wrap_ZmqProducerStateTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_653 _wrap_ZmqProducerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_654 _wrap_ZmqProducerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_655 _wrap_ZmqProducerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_656 _wrap_ZmqProducerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_type_657 _wrap_ZmqProducerStateTable_getKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_658 _wrap_ZmqProducerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_659 _wrap_ZmqProducerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_intgo _wrap_ConsumerTableBase_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_ConsumerTableBase_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_ConsumerTableBase_getDbConnector_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_ConsumerTableBase_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2, swig_type_660 arg3);
extern void _wrap_ConsumerTableBase_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ConsumerTableBase_pop__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, uintptr_t arg4, swig_type_661 arg5);
extern void _wrap_ConsumerTableBase_pop__SWIG_3_swsscommon_2432462d295473d6(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, uintptr_t arg4);
extern _Bool _wrap_ConsumerTableBase_empty_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_662 _wrap_ConsumerTableBase_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_663 _wrap_ConsumerTableBase_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_664 _wrap_ConsumerTableBase_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_665 _wrap_ConsumerTableBase_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_666 _wrap_ConsumerTableBase_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_667 _wrap_ConsumerTableBase_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_668 _wrap_ConsumerTableBase_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern void _wrap_ConsumerTableBase_pops__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ConsumerTableBase_pops__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_471 arg4);
extern void _wrap_ConsumerTableBase_pops__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_ConsumerTableBase_getFd_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_669 _wrap_ConsumerTableBase_readData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTableBase_hasData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTableBase_hasCachedData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTableBase_initializedWithData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTableBase_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTableBase_subscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_473 arg2);
extern void _wrap_ConsumerTableBase_psubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_474 arg2);
extern void _wrap_ConsumerTableBase_punsubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_475 arg1);
extern void _wrap_ConsumerTableBase_setQueueLength_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_476 arg1);
extern swig_intgo _wrap_ConsumerTableBase_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTableBase_multi_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTableBase_exec_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTableBase_enqueue__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_670 arg1, swig_intgo arg2);
extern void _wrap_ConsumerTableBase_enqueue__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_ConsumerTableBase_dequeueReply_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConsumerTableBase_SwigGetRedisTransactioner_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_ConsumerTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_671 arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_ConsumerTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_672 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_ConsumerTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_673 arg2);
extern void _wrap_ConsumerTable_pops_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_ConsumerTable_setModifyRedis_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern void _wrap_delete_ConsumerTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetConsumerTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConsumerTable_getDbConnector_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTable_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_674 arg2);
extern void _wrap_ConsumerTable_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ConsumerTable_pop__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3, swig_type_675 arg4);
extern void _wrap_ConsumerTable_pop__SWIG_3_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3);
extern _Bool _wrap_ConsumerTable_empty_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_676 _wrap_ConsumerTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_677 _wrap_ConsumerTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_678 _wrap_ConsumerTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_679 _wrap_ConsumerTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_680 _wrap_ConsumerTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_681 _wrap_ConsumerTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_682 _wrap_ConsumerTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_ConsumerTable_getFd_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_683 _wrap_ConsumerTable_readData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTable_hasData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTable_subscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_473 arg2);
extern void _wrap_ConsumerTable_psubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_474 arg2);
extern void _wrap_ConsumerTable_punsubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_475 arg1);
extern void _wrap_ConsumerTable_setQueueLength_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_476 arg1);
extern swig_intgo _wrap_ConsumerTable_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTable_multi_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerTable_exec_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_670 arg1, swig_intgo arg2);
extern void _wrap_ConsumerTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_ConsumerTable_dequeueReply_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_684 _wrap_ConsumerTable_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConsumerTable_SwigGetTableName_KeyValueOpQueues_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_ConsumerStateTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_685 arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_ConsumerStateTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_686 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_ConsumerStateTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_687 arg2);
extern void _wrap_ConsumerStateTable_pops_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_ConsumerStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetConsumerStateTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConsumerStateTable_getDbConnector_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerStateTable_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_674 arg2);
extern void _wrap_ConsumerStateTable_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_ConsumerStateTable_pop__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3, swig_type_675 arg4);
extern void _wrap_ConsumerStateTable_pop__SWIG_3_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3);
extern _Bool _wrap_ConsumerStateTable_empty_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_688 _wrap_ConsumerStateTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_689 _wrap_ConsumerStateTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_690 _wrap_ConsumerStateTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_691 _wrap_ConsumerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_692 _wrap_ConsumerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_693 _wrap_ConsumerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_694 _wrap_ConsumerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_ConsumerStateTable_getFd_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_695 _wrap_ConsumerStateTable_readData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerStateTable_hasData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerStateTable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerStateTable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerStateTable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerStateTable_subscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_473 arg2);
extern void _wrap_ConsumerStateTable_psubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_474 arg2);
extern void _wrap_ConsumerStateTable_punsubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_475 arg1);
extern void _wrap_ConsumerStateTable_setQueueLength_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_476 arg1);
extern swig_intgo _wrap_ConsumerStateTable_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerStateTable_multi_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_ConsumerStateTable_exec_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_ConsumerStateTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_670 arg1, swig_intgo arg2);
extern void _wrap_ConsumerStateTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_ConsumerStateTable_dequeueReply_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_696 _wrap_ConsumerStateTable_getKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_697 _wrap_ConsumerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_698 _wrap_ConsumerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_ConsumerStateTable_SwigGetTableName_KeySet_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_SubscriberStateTable__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_699 arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_SubscriberStateTable__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_700 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_SubscriberStateTable__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_701 arg2);
extern void _wrap_SubscriberStateTable_pops_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_type_702 _wrap_SubscriberStateTable_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_SubscriberStateTable_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_SubscriberStateTable_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_SubscriberStateTable_initializedWithData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_SubscriberStateTable_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_GetSubscriberStateTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_SubscriberStateTable_getDbConnector_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_SubscriberStateTable_pop__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_674 arg2);
extern void _wrap_SubscriberStateTable_pop__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1);
extern void _wrap_SubscriberStateTable_pop__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3, swig_type_675 arg4);
extern void _wrap_SubscriberStateTable_pop__SWIG_3_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_voidp arg1, swig_voidp arg2, uintptr_t arg3);
extern _Bool _wrap_SubscriberStateTable_empty_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_703 _wrap_SubscriberStateTable_getTableSeparator_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_704 _wrap_SubscriberStateTable_getTableName_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_705 _wrap_SubscriberStateTable_getKeyName_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_464 arg1);
extern swig_type_706 _wrap_SubscriberStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_707 _wrap_SubscriberStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_708 _wrap_SubscriberStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_468 arg1);
extern swig_type_709 _wrap_SubscriberStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_intgo arg1);
extern swig_intgo _wrap_SubscriberStateTable_getFd_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_SubscriberStateTable_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_SubscriberStateTable_subscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_473 arg2);
extern void _wrap_SubscriberStateTable_psubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_type_474 arg2);
extern void _wrap_SubscriberStateTable_punsubscribe_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_475 arg1);
extern void _wrap_SubscriberStateTable_setQueueLength_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_476 arg1);
extern swig_intgo _wrap_SubscriberStateTable_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_SubscriberStateTable_multi_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern _Bool _wrap_SubscriberStateTable_exec_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_SubscriberStateTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(uintptr_t _swig_base, swig_type_670 arg1, swig_intgo arg2);
extern void _wrap_SubscriberStateTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(uintptr_t _swig_base, uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_SubscriberStateTable_dequeueReply_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_type_710 _wrap_DEFAULT_NC_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_NotificationConsumer__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_711 arg2, swig_intgo arg3, swig_type_712 arg4);
extern uintptr_t _wrap_new_NotificationConsumer__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_713 arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_NotificationConsumer__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_714 arg2);
extern void _wrap_NotificationConsumer_pop_swsscommon_2432462d295473d6(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, uintptr_t arg4);
extern void _wrap_NotificationConsumer_pops_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_NotificationConsumer_peek_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_NotificationConsumer_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_NotificationConsumer_getFd_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_715 _wrap_NotificationConsumer_readData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_NotificationConsumer_hasData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_NotificationConsumer_hasCachedData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_716 _wrap_NotificationConsumer_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_NotificationConsumer_initializedWithData_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern void _wrap_NotificationConsumer_updateAfterRead_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern swig_intgo _wrap_NotificationConsumer_getPri_swsscommon_2432462d295473d6(uintptr_t _swig_base);
extern uintptr_t _wrap_new_NotificationProducer__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_717 arg2);
extern uintptr_t _wrap_new_NotificationProducer__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_718 arg2, _Bool arg3);
extern uintptr_t _wrap_new_NotificationProducer__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_719 arg2);
extern swig_type_720 _wrap_NotificationProducer_send_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_721 arg2, swig_type_722 arg3, uintptr_t arg4);
extern void _wrap_delete_NotificationProducer_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_INITIALIZED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_RESTORED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_REPLAYED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_RECONCILED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_WSDISABLED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_WSUNKNOWN_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_CHECK_IGNORED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_CHECK_PASSED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_CHECK_FAILED_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_STAGE_SHUTDOWN_WarmStart_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_STAGE_RESTORE_WarmStart_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_WarmStart_warmStartStateNameMap_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_WarmStart_dataCheckStateNameMap_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_WarmStart_getInstance_swsscommon_2432462d295473d6(void);
extern void _wrap_WarmStart_initialize__SWIG_0_swsscommon_2432462d295473d6(swig_type_723 arg1, swig_type_724 arg2, swig_intgo arg3, _Bool arg4);
extern void _wrap_WarmStart_initialize__SWIG_1_swsscommon_2432462d295473d6(swig_type_725 arg1, swig_type_726 arg2, swig_intgo arg3);
extern void _wrap_WarmStart_initialize__SWIG_2_swsscommon_2432462d295473d6(swig_type_727 arg1, swig_type_728 arg2);
extern _Bool _wrap_WarmStart_checkWarmStart__SWIG_0_swsscommon_2432462d295473d6(swig_type_729 arg1, swig_type_730 arg2, _Bool arg3);
extern _Bool _wrap_WarmStart_checkWarmStart__SWIG_1_swsscommon_2432462d295473d6(swig_type_731 arg1, swig_type_732 arg2);
extern _Bool _wrap_WarmStart_isWarmStart_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_WarmStart_isSystemWarmRebootEnabled_swsscommon_2432462d295473d6(void);
extern void _wrap_WarmStart_getWarmStartState_swsscommon_2432462d295473d6(swig_type_733 arg1, swig_voidp arg2);
extern void _wrap_WarmStart_setWarmStartState_swsscommon_2432462d295473d6(swig_type_734 arg1, swig_intgo arg2);
extern swig_intgo _wrap_WarmStart_getWarmStartTimer_swsscommon_2432462d295473d6(swig_type_735 arg1, swig_type_736 arg2);
extern void _wrap_WarmStart_setDataCheckState_swsscommon_2432462d295473d6(swig_type_737 arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_intgo _wrap_WarmStart_getDataCheckState_swsscommon_2432462d295473d6(swig_type_738 arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_WarmStart_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_WarmStart_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_UnavailableDataError_swsscommon_2432462d295473d6(swig_type_739 arg1, swig_type_740 arg2);
extern swig_type_741 _wrap_UnavailableDataError_getData_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_delete_UnavailableDataError_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_DBInterface_connect__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_742 arg3, _Bool arg4);
extern void _wrap_DBInterface_connect__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_743 arg3);
extern void _wrap_DBInterface_close__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_744 arg2);
extern void _wrap_DBInterface_close__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_745 _wrap_DBInterface_delete__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_746 arg2, swig_type_747 arg3, _Bool arg4);
extern swig_type_748 _wrap_DBInterface_delete__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_749 arg2, swig_type_750 arg3);
extern void _wrap_DBInterface_delete_all_by_pattern_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_751 arg2, swig_type_752 arg3);
extern _Bool _wrap_DBInterface_exists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_753 arg2, swig_type_754 arg3);
extern uintptr_t _wrap_DBInterface_get__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_755 arg2, swig_type_756 arg3, swig_type_757 arg4, _Bool arg5);
extern uintptr_t _wrap_DBInterface_get__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_758 arg2, swig_type_759 arg3, swig_type_760 arg4);
extern _Bool _wrap_DBInterface_hexists_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_761 arg2, swig_type_762 arg3, swig_type_763 arg4);
extern uintptr_t _wrap_DBInterface_get_all__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_764 arg2, swig_type_765 arg3, _Bool arg4);
extern uintptr_t _wrap_DBInterface_get_all__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_766 arg2, swig_type_767 arg3);
extern uintptr_t _wrap_DBInterface_keys__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_768 arg2, swig_type_769 arg3, _Bool arg4);
extern uintptr_t _wrap_DBInterface_keys__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_770 arg2, swig_type_771 arg3);
extern uintptr_t _wrap_DBInterface_keys__SWIG_2_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_772 arg2);
extern uintptr_t _wrap_DBInterface_scan_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_773 arg2, swig_intgo arg3, swig_type_774 arg4, swig_intgo arg5);
extern swig_type_775 _wrap_DBInterface_publish_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_776 arg2, swig_type_777 arg3, swig_type_778 arg4);
extern void _wrap_DBInterface_hmset_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_779 arg2, swig_type_780 arg3, uintptr_t arg4);
extern swig_type_781 _wrap_DBInterface_set__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_782 arg2, swig_type_783 arg3, swig_type_784 arg4, swig_type_785 arg5, _Bool arg6);
extern swig_type_786 _wrap_DBInterface_set__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_787 arg2, swig_type_788 arg3, swig_type_789 arg4, swig_type_790 arg5);
extern uintptr_t _wrap_DBInterface_get_redis_client_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_791 arg2);
extern void _wrap_DBInterface_set_redis_kwargs_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_792 arg2, swig_type_793 arg3, swig_intgo arg4);
extern swig_intgo _wrap_DBInterface_BLOCKING_ATTEMPT_ERROR_THRESHOLD_DBInterface_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_DBInterface_BLOCKING_ATTEMPT_SUPPRESSION_DBInterface_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_DBInterface_CONNECT_RETRY_WAIT_TIME_DBInterface_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_DBInterface_DATA_RETRIEVAL_WAIT_TIME_DBInterface_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_DBInterface_PUB_SUB_NOTIFICATION_TIMEOUT_DBInterface_swsscommon_2432462d295473d6(void);
extern double _wrap_DBInterface_PUB_SUB_MAXIMUM_DATA_WAIT_DBInterface_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_new_DBInterface_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_DBInterface_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_type_794 _wrap_DAEMON_LOGLEVEL_get_swsscommon_2432462d295473d6(void);
extern swig_type_795 _wrap_DAEMON_LOGOUTPUT_get_swsscommon_2432462d295473d6(void);
extern void _wrap_err_exit_swsscommon_2432462d295473d6(swig_type_796 arg1, swig_intgo arg2, swig_intgo arg3, swig_type_797 arg4);
extern swig_intgo _wrap_SWSS_EMERG_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_ALERT_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_CRIT_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_ERROR_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_WARN_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_NOTICE_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_INFO_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_DEBUG_Logger_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_Logger_priorityStringMap_get_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_SYSLOG_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_STDOUT_Logger_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_SWSS_STDERR_Logger_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_Logger_outputStringMap_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_Logger_getInstance_swsscommon_2432462d295473d6(void);
extern void _wrap_Logger_setMinPrio_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_intgo _wrap_Logger_getMinPrio_swsscommon_2432462d295473d6(void);
extern void _wrap_Logger_linkToDbWithOutput_swsscommon_2432462d295473d6(swig_type_798 arg1, uintptr_t arg2, swig_type_799 arg3, uintptr_t arg4, swig_type_800 arg5);
extern void _wrap_Logger_linkToDb_swsscommon_2432462d295473d6(swig_type_801 arg1, uintptr_t arg2, swig_type_802 arg3);
extern void _wrap_Logger_linkToDbNative__SWIG_0_swsscommon_2432462d295473d6(swig_type_803 arg1, swig_type_804 arg2);
extern void _wrap_Logger_linkToDbNative__SWIG_1_swsscommon_2432462d295473d6(swig_type_805 arg1);
extern void _wrap_Logger_restartLogger_swsscommon_2432462d295473d6(void);
extern void _wrap_Logger_write_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_806 arg3);
extern void _wrap_Logger_wthrow_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2, swig_type_807 arg3);
extern swig_type_808 _wrap_Logger_priorityToString_swsscommon_2432462d295473d6(swig_intgo arg1);
extern swig_type_809 _wrap_Logger_outputToString_swsscommon_2432462d295473d6(swig_intgo arg1);
extern void _wrap_Logger_swssOutputNotify_swsscommon_2432462d295473d6(swig_type_810 arg1, swig_type_811 arg2);
extern uintptr_t _wrap_events_init_publisher_swsscommon_2432462d295473d6(swig_type_812 arg1);
extern void _wrap_events_deinit_publisher_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_event_publish__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_813 arg2, uintptr_t arg3);
extern swig_intgo _wrap_event_publish__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_814 arg2);
extern uintptr_t _wrap_events_init_subscriber__SWIG_0_swsscommon_2432462d295473d6(_Bool arg1, swig_intgo arg2, uintptr_t arg3);
extern uintptr_t _wrap_events_init_subscriber__SWIG_1_swsscommon_2432462d295473d6(_Bool arg1, swig_intgo arg2);
extern uintptr_t _wrap_events_init_subscriber__SWIG_2_swsscommon_2432462d295473d6(_Bool arg1);
extern uintptr_t _wrap_events_init_subscriber__SWIG_3_swsscommon_2432462d295473d6(void);
extern void _wrap_events_deinit_subscriber_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_event_receive_op_t_key_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_815 arg2);
extern swig_type_816 _wrap_event_receive_op_t_key_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_event_receive_op_t_params_set_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_event_receive_op_t_params_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_event_receive_op_t_missed_cnt_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_event_receive_op_t_missed_cnt_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern void _wrap_event_receive_op_t_publish_epoch_ms_set_swsscommon_2432462d295473d6(uintptr_t arg1, swig_type_817 arg2);
extern swig_type_818 _wrap_event_receive_op_t_publish_epoch_ms_get_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_event_receive_op_t_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_event_receive_op_t_swsscommon_2432462d295473d6(uintptr_t arg1);
extern swig_intgo _wrap_event_receive_swsscommon_2432462d295473d6(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_event_receive_json_swsscommon_2432462d295473d6(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3, swig_voidp arg4);
extern swig_intgo _wrap_StatusCode_SWSS_RC_SUCCESS_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_INVALID_PARAM_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_DEADLINE_EXCEEDED_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_UNAVAIL_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_NOT_FOUND_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_NO_MEMORY_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_EXISTS_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_PERMISSION_DENIED_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_FULL_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_IN_USE_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_INTERNAL_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_UNIMPLEMENTED_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_NOT_EXECUTED_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_FAILED_PRECONDITION_swsscommon_2432462d295473d6(void);
extern swig_intgo _wrap_StatusCode_SWSS_RC_UNKNOWN_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_statusCodeMapping_get_swsscommon_2432462d295473d6(void);
extern uintptr_t _wrap_StatusCodeLookup_get_swsscommon_2432462d295473d6(void);
extern swig_type_819 _wrap_statusCodeToStr_swsscommon_2432462d295473d6(swig_voidp arg1);
extern swig_intgo _wrap_strToStatusCode_swsscommon_2432462d295473d6(swig_type_820 arg1);
extern _Bool _wrap_RestartWaiter_waitAdvancedBootDone__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2, _Bool arg3);
extern _Bool _wrap_RestartWaiter_waitAdvancedBootDone__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2);
extern _Bool _wrap_RestartWaiter_waitAdvancedBootDone__SWIG_2_swsscommon_2432462d295473d6(swig_intgo arg1);
extern _Bool _wrap_RestartWaiter_waitAdvancedBootDone__SWIG_3_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_RestartWaiter_waitWarmBootDone__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2, _Bool arg3);
extern _Bool _wrap_RestartWaiter_waitWarmBootDone__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2);
extern _Bool _wrap_RestartWaiter_waitWarmBootDone__SWIG_2_swsscommon_2432462d295473d6(swig_intgo arg1);
extern _Bool _wrap_RestartWaiter_waitWarmBootDone__SWIG_3_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_RestartWaiter_waitFastBootDone__SWIG_0_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2, _Bool arg3);
extern _Bool _wrap_RestartWaiter_waitFastBootDone__SWIG_1_swsscommon_2432462d295473d6(swig_intgo arg1, swig_intgo arg2);
extern _Bool _wrap_RestartWaiter_waitFastBootDone__SWIG_2_swsscommon_2432462d295473d6(swig_intgo arg1);
extern _Bool _wrap_RestartWaiter_waitFastBootDone__SWIG_3_swsscommon_2432462d295473d6(void);
extern _Bool _wrap_RestartWaiter_isAdvancedBootInProgressHelper__SWIG_0_swsscommon_2432462d295473d6(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_RestartWaiter_isAdvancedBootInProgressHelper__SWIG_1_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RestartWaiter_isAdvancedBootInProgress_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RestartWaiter_isFastBootInProgress_swsscommon_2432462d295473d6(uintptr_t arg1);
extern _Bool _wrap_RestartWaiter_isWarmBootInProgress_swsscommon_2432462d295473d6(uintptr_t arg1);
extern uintptr_t _wrap_new_RestartWaiter_swsscommon_2432462d295473d6(void);
extern void _wrap_delete_RestartWaiter_swsscommon_2432462d295473d6(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

func getSwigcptr(v interface{ Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}

type _ sync.Mutex

//export cgo_panic__swsscommon_2432462d295473d6
func cgo_panic__swsscommon_2432462d295473d6(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrFieldValuePair uintptr

func (p SwigcptrFieldValuePair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFieldValuePair) SwigIsFieldValuePair() {
}

func NewFieldValuePair__SWIG_0() (_swig_ret FieldValuePair) {
	var swig_r FieldValuePair
	swig_r = (FieldValuePair)(SwigcptrFieldValuePair(C._wrap_new_FieldValuePair__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewFieldValuePair__SWIG_1(arg1 string, arg2 string) (_swig_ret FieldValuePair) {
	var swig_r FieldValuePair
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValuePair)(SwigcptrFieldValuePair(C._wrap_new_FieldValuePair__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewFieldValuePair__SWIG_2(arg1 FieldValuePair) (_swig_ret FieldValuePair) {
	var swig_r FieldValuePair
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (FieldValuePair)(SwigcptrFieldValuePair(C._wrap_new_FieldValuePair__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFieldValuePair(a ...interface{}) FieldValuePair {
	argc := len(a)
	if argc == 0 {
		return NewFieldValuePair__SWIG_0()
	}
	if argc == 1 {
		return NewFieldValuePair__SWIG_2(a[0].(FieldValuePair))
	}
	if argc == 2 {
		return NewFieldValuePair__SWIG_1(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFieldValuePair) SetFirst(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldValuePair_first_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrFieldValuePair) GetFirst() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldValuePair_first_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFieldValuePair) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldValuePair_second_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrFieldValuePair) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FieldValuePair_second_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteFieldValuePair(arg1 FieldValuePair) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_FieldValuePair_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type FieldValuePair interface {
	Swigcptr() uintptr
	SwigIsFieldValuePair()
	SetFirst(arg2 string)
	GetFirst() (_swig_ret string)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrFieldValuePairs uintptr

func (p SwigcptrFieldValuePairs) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFieldValuePairs) SwigIsFieldValuePairs() {
}

func NewFieldValuePairs__SWIG_0() (_swig_ret FieldValuePairs) {
	var swig_r FieldValuePairs
	swig_r = (FieldValuePairs)(SwigcptrFieldValuePairs(C._wrap_new_FieldValuePairs__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewFieldValuePairs__SWIG_1(arg1 int64) (_swig_ret FieldValuePairs) {
	var swig_r FieldValuePairs
	_swig_i_0 := arg1
	swig_r = (FieldValuePairs)(SwigcptrFieldValuePairs(C._wrap_new_FieldValuePairs__SWIG_1_swsscommon_2432462d295473d6(C.swig_type_7(_swig_i_0))))
	return swig_r
}

func NewFieldValuePairs__SWIG_2(arg1 FieldValuePairs) (_swig_ret FieldValuePairs) {
	var swig_r FieldValuePairs
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (FieldValuePairs)(SwigcptrFieldValuePairs(C._wrap_new_FieldValuePairs__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFieldValuePairs(a ...interface{}) FieldValuePairs {
	argc := len(a)
	if argc == 0 {
		return NewFieldValuePairs__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewFieldValuePairs__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewFieldValuePairs__SWIG_2(a[0].(FieldValuePairs))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFieldValuePairs) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FieldValuePairs_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairs) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FieldValuePairs_capacity_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairs) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldValuePairs_reserve_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_10(_swig_i_1))
}

func (arg1 SwigcptrFieldValuePairs) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FieldValuePairs_isEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairs) Clear() {
	_swig_i_0 := arg1
	C._wrap_FieldValuePairs_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFieldValuePairs) Add(arg2 FieldValuePair) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_FieldValuePairs_add_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFieldValuePairs) Get(arg2 int) (_swig_ret FieldValuePair) {
	var swig_r FieldValuePair
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValuePair)(SwigcptrFieldValuePair(C._wrap_FieldValuePairs_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairs) Set(arg2 int, arg3 FieldValuePair) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_FieldValuePairs_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteFieldValuePairs(arg1 FieldValuePairs) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_FieldValuePairs_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type FieldValuePairs interface {
	Swigcptr() uintptr
	SwigIsFieldValuePairs()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 FieldValuePair)
	Get(arg2 int) (_swig_ret FieldValuePair)
	Set(arg2 int, arg3 FieldValuePair)
}

type SwigcptrFieldValuePairsList uintptr

func (p SwigcptrFieldValuePairsList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFieldValuePairsList) SwigIsFieldValuePairsList() {
}

func NewFieldValuePairsList__SWIG_0() (_swig_ret FieldValuePairsList) {
	var swig_r FieldValuePairsList
	swig_r = (FieldValuePairsList)(SwigcptrFieldValuePairsList(C._wrap_new_FieldValuePairsList__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewFieldValuePairsList__SWIG_1(arg1 int64) (_swig_ret FieldValuePairsList) {
	var swig_r FieldValuePairsList
	_swig_i_0 := arg1
	swig_r = (FieldValuePairsList)(SwigcptrFieldValuePairsList(C._wrap_new_FieldValuePairsList__SWIG_1_swsscommon_2432462d295473d6(C.swig_type_11(_swig_i_0))))
	return swig_r
}

func NewFieldValuePairsList__SWIG_2(arg1 FieldValuePairsList) (_swig_ret FieldValuePairsList) {
	var swig_r FieldValuePairsList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (FieldValuePairsList)(SwigcptrFieldValuePairsList(C._wrap_new_FieldValuePairsList__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFieldValuePairsList(a ...interface{}) FieldValuePairsList {
	argc := len(a)
	if argc == 0 {
		return NewFieldValuePairsList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewFieldValuePairsList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewFieldValuePairsList__SWIG_2(a[0].(FieldValuePairsList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFieldValuePairsList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FieldValuePairsList_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairsList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_FieldValuePairsList_capacity_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairsList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldValuePairsList_reserve_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_14(_swig_i_1))
}

func (arg1 SwigcptrFieldValuePairsList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FieldValuePairsList_isEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairsList) Clear() {
	_swig_i_0 := arg1
	C._wrap_FieldValuePairsList_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFieldValuePairsList) Add(arg2 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_FieldValuePairsList_add_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrFieldValuePairsList) Get(arg2 int) (_swig_ret FieldValuePairs) {
	var swig_r FieldValuePairs
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValuePairs)(SwigcptrFieldValuePairs(C._wrap_FieldValuePairsList_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFieldValuePairsList) Set(arg2 int, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_FieldValuePairsList_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteFieldValuePairsList(arg1 FieldValuePairsList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_FieldValuePairsList_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type FieldValuePairsList interface {
	Swigcptr() uintptr
	SwigIsFieldValuePairsList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 FieldValuePairs)
	Get(arg2 int) (_swig_ret FieldValuePairs)
	Set(arg2 int, arg3 FieldValuePairs)
}

type SwigcptrFieldValueMap uintptr

func (p SwigcptrFieldValueMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFieldValueMap) SwigIsFieldValueMap() {
}

func NewFieldValueMap__SWIG_0() (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_new_FieldValueMap__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewFieldValueMap__SWIG_1(arg1 FieldValueMap) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_new_FieldValueMap__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFieldValueMap(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 0 {
		return NewFieldValueMap__SWIG_0()
	}
	if argc == 1 {
		return NewFieldValueMap__SWIG_1(a[0].(FieldValueMap))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrFieldValueMap) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_FieldValueMap_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValueMap) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_FieldValueMap_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFieldValueMap) Clear() {
	_swig_i_0 := arg1
	C._wrap_FieldValueMap_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFieldValueMap) Get(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_FieldValueMap_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_16)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrFieldValueMap) Set(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_FieldValueMap_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrFieldValueMap) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_FieldValueMap_delete_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrFieldValueMap) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_FieldValueMap_has_key_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteFieldValueMap(arg1 FieldValueMap) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_FieldValueMap_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type FieldValueMap interface {
	Swigcptr() uintptr
	SwigIsFieldValueMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret string)
	Set(arg2 string, arg3 string)
	Delete(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrVectorString uintptr

func (p SwigcptrVectorString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorString) SwigIsVectorString() {
}

func NewVectorString__SWIG_0() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewVectorString__SWIG_1(arg1 int64) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_1_swsscommon_2432462d295473d6(C.swig_type_21(_swig_i_0))))
	return swig_r
}

func NewVectorString__SWIG_2(arg1 VectorString) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVectorString(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 0 {
		return NewVectorString__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVectorString__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVectorString__SWIG_2(a[0].(VectorString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVectorString) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorString_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorString_capacity_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorString_reserve_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_24(_swig_i_1))
}

func (arg1 SwigcptrVectorString) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VectorString_isEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Clear() {
	_swig_i_0 := arg1
	C._wrap_VectorString_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVectorString) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorString_add_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrVectorString) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_VectorString_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrVectorString) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_VectorString_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteVectorString(arg1 VectorString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_VectorString_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type VectorString interface {
	Swigcptr() uintptr
	SwigIsVectorString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrScanResult uintptr

func (p SwigcptrScanResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrScanResult) SwigIsScanResult() {
}

func NewScanResult__SWIG_0() (_swig_ret ScanResult) {
	var swig_r ScanResult
	swig_r = (ScanResult)(SwigcptrScanResult(C._wrap_new_ScanResult__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewScanResult__SWIG_1(arg1 int64, arg2 VectorString) (_swig_ret ScanResult) {
	var swig_r ScanResult
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (ScanResult)(SwigcptrScanResult(C._wrap_new_ScanResult__SWIG_1_swsscommon_2432462d295473d6(C.swig_type_28(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewScanResult__SWIG_2(arg1 ScanResult) (_swig_ret ScanResult) {
	var swig_r ScanResult
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (ScanResult)(SwigcptrScanResult(C._wrap_new_ScanResult__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewScanResult(a ...interface{}) ScanResult {
	argc := len(a)
	if argc == 0 {
		return NewScanResult__SWIG_0()
	}
	if argc == 1 {
		return NewScanResult__SWIG_2(a[0].(ScanResult))
	}
	if argc == 2 {
		return NewScanResult__SWIG_1(a[0].(int64), a[1].(VectorString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrScanResult) SetFirst(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ScanResult_first_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_29(_swig_i_1))
}

func (arg1 SwigcptrScanResult) GetFirst() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ScanResult_first_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrScanResult) SetSecond(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ScanResult_second_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrScanResult) GetSecond() (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ScanResult_second_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteScanResult(arg1 ScanResult) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ScanResult_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type ScanResult interface {
	Swigcptr() uintptr
	SwigIsScanResult()
	SetFirst(arg2 int64)
	GetFirst() (_swig_ret int64)
	SetSecond(arg2 VectorString)
	GetSecond() (_swig_ret VectorString)
}

type SwigcptrGetTableResult uintptr

func (p SwigcptrGetTableResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGetTableResult) SwigIsGetTableResult() {
}

func NewGetTableResult__SWIG_0() (_swig_ret GetTableResult) {
	var swig_r GetTableResult
	swig_r = (GetTableResult)(SwigcptrGetTableResult(C._wrap_new_GetTableResult__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewGetTableResult__SWIG_1(arg1 GetTableResult) (_swig_ret GetTableResult) {
	var swig_r GetTableResult
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (GetTableResult)(SwigcptrGetTableResult(C._wrap_new_GetTableResult__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewGetTableResult(a ...interface{}) GetTableResult {
	argc := len(a)
	if argc == 0 {
		return NewGetTableResult__SWIG_0()
	}
	if argc == 1 {
		return NewGetTableResult__SWIG_1(a[0].(GetTableResult))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGetTableResult) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetTableResult_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetTableResult) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_GetTableResult_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetTableResult) Clear() {
	_swig_i_0 := arg1
	C._wrap_GetTableResult_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGetTableResult) Get(arg2 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_GetTableResult_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_31)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrGetTableResult) Set(arg2 string, arg3 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_GetTableResult_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetTableResult) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GetTableResult_delete_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetTableResult) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_GetTableResult_has_key_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteGetTableResult(arg1 GetTableResult) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_GetTableResult_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type GetTableResult interface {
	Swigcptr() uintptr
	SwigIsGetTableResult()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret FieldValueMap)
	Set(arg2 string, arg3 FieldValueMap)
	Delete(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrGetConfigResult uintptr

func (p SwigcptrGetConfigResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGetConfigResult) SwigIsGetConfigResult() {
}

func NewGetConfigResult__SWIG_0() (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_new_GetConfigResult__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewGetConfigResult__SWIG_1(arg1 GetConfigResult) (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_new_GetConfigResult__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewGetConfigResult(a ...interface{}) GetConfigResult {
	argc := len(a)
	if argc == 0 {
		return NewGetConfigResult__SWIG_0()
	}
	if argc == 1 {
		return NewGetConfigResult__SWIG_1(a[0].(GetConfigResult))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGetConfigResult) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetConfigResult_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetConfigResult) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_GetConfigResult_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetConfigResult) Clear() {
	_swig_i_0 := arg1
	C._wrap_GetConfigResult_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGetConfigResult) Get(arg2 string) (_swig_ret GetTableResult) {
	var swig_r GetTableResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GetTableResult)(SwigcptrGetTableResult(C._wrap_GetConfigResult_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrGetConfigResult) Set(arg2 string, arg3 GetTableResult) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_GetConfigResult_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_36)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetConfigResult) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GetConfigResult_delete_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetConfigResult) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_GetConfigResult_has_key_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_38)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteGetConfigResult(arg1 GetConfigResult) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_GetConfigResult_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type GetConfigResult interface {
	Swigcptr() uintptr
	SwigIsGetConfigResult()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret GetTableResult)
	Set(arg2 string, arg3 GetTableResult)
	Delete(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrGetInstanceListResult uintptr

func (p SwigcptrGetInstanceListResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGetInstanceListResult) SwigIsGetInstanceListResult() {
}

func NewGetInstanceListResult__SWIG_0() (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_new_GetInstanceListResult__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewGetInstanceListResult__SWIG_1(arg1 GetInstanceListResult) (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_new_GetInstanceListResult__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewGetInstanceListResult(a ...interface{}) GetInstanceListResult {
	argc := len(a)
	if argc == 0 {
		return NewGetInstanceListResult__SWIG_0()
	}
	if argc == 1 {
		return NewGetInstanceListResult__SWIG_1(a[0].(GetInstanceListResult))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrGetInstanceListResult) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_GetInstanceListResult_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetInstanceListResult) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_GetInstanceListResult_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrGetInstanceListResult) Clear() {
	_swig_i_0 := arg1
	C._wrap_GetInstanceListResult_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrGetInstanceListResult) Get(arg2 string) (_swig_ret RedisInstInfo) {
	var swig_r RedisInstInfo
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RedisInstInfo)(SwigcptrRedisInstInfo(C._wrap_GetInstanceListResult_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_39)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrGetInstanceListResult) Set(arg2 string, arg3 RedisInstInfo) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_GetInstanceListResult_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetInstanceListResult) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_GetInstanceListResult_delete_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_41)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrGetInstanceListResult) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_GetInstanceListResult_has_key_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_42)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteGetInstanceListResult(arg1 GetInstanceListResult) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_GetInstanceListResult_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type GetInstanceListResult interface {
	Swigcptr() uintptr
	SwigIsGetInstanceListResult()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret RedisInstInfo)
	Set(arg2 string, arg3 RedisInstInfo)
	Delete(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrKeyOpFieldsValuesQueue uintptr

func (p SwigcptrKeyOpFieldsValuesQueue) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKeyOpFieldsValuesQueue) SwigIsKeyOpFieldsValuesQueue() {
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_KeyOpFieldsValuesQueue_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewKeyOpFieldsValuesQueue__SWIG_0() (_swig_ret KeyOpFieldsValuesQueue) {
	var swig_r KeyOpFieldsValuesQueue
	swig_r = (KeyOpFieldsValuesQueue)(SwigcptrKeyOpFieldsValuesQueue(C._wrap_new_KeyOpFieldsValuesQueue__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewKeyOpFieldsValuesQueue__SWIG_1(arg1 uint, arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) (_swig_ret KeyOpFieldsValuesQueue) {
	var swig_r KeyOpFieldsValuesQueue
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (KeyOpFieldsValuesQueue)(SwigcptrKeyOpFieldsValuesQueue(C._wrap_new_KeyOpFieldsValuesQueue__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewKeyOpFieldsValuesQueue__SWIG_2(arg1 uint) (_swig_ret KeyOpFieldsValuesQueue) {
	var swig_r KeyOpFieldsValuesQueue
	_swig_i_0 := arg1
	swig_r = (KeyOpFieldsValuesQueue)(SwigcptrKeyOpFieldsValuesQueue(C._wrap_new_KeyOpFieldsValuesQueue__SWIG_2_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewKeyOpFieldsValuesQueue__SWIG_3(arg1 KeyOpFieldsValuesQueue) (_swig_ret KeyOpFieldsValuesQueue) {
	var swig_r KeyOpFieldsValuesQueue
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (KeyOpFieldsValuesQueue)(SwigcptrKeyOpFieldsValuesQueue(C._wrap_new_KeyOpFieldsValuesQueue__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewKeyOpFieldsValuesQueue(a ...interface{}) KeyOpFieldsValuesQueue {
	argc := len(a)
	if argc == 0 {
		return NewKeyOpFieldsValuesQueue__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(KeyOpFieldsValuesQueue); !ok {
			goto check_2
		}
		return NewKeyOpFieldsValuesQueue__SWIG_3(a[0].(KeyOpFieldsValuesQueue))
	}
check_2:
	if argc == 1 {
		return NewKeyOpFieldsValuesQueue__SWIG_2(a[0].(uint))
	}
	if argc == 2 {
		return NewKeyOpFieldsValuesQueue__SWIG_1(a[0].(uint), a[1].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

func DeleteKeyOpFieldsValuesQueue(arg1 KeyOpFieldsValuesQueue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_KeyOpFieldsValuesQueue_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Assign(arg2 uint, arg3 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_KeyOpFieldsValuesQueue_assign_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Swap(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyOpFieldsValuesQueue_swap_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_KeyOpFieldsValuesQueue_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Max_size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_KeyOpFieldsValuesQueue_max_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Resize__SWIG_0(arg2 uint, arg3 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_KeyOpFieldsValuesQueue_resize__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Resize__SWIG_1(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOpFieldsValuesQueue_resize__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrKeyOpFieldsValuesQueue) Resize(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Resize__SWIG_1(a[0].(uint))
		return
	}
	if argc == 2 {
		p.Resize__SWIG_0(a[0].(uint), a[1].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Front() (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	var swig_r Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)(SwigcptrStd_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_(C._wrap_KeyOpFieldsValuesQueue_front_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Back() (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	var swig_r Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)(SwigcptrStd_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_(C._wrap_KeyOpFieldsValuesQueue_back_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Push_front(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyOpFieldsValuesQueue_push_front_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Push_back(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyOpFieldsValuesQueue_push_back_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Pop_front() {
	_swig_i_0 := arg1
	C._wrap_KeyOpFieldsValuesQueue_pop_front_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Pop_back() {
	_swig_i_0 := arg1
	C._wrap_KeyOpFieldsValuesQueue_pop_back_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Clear() {
	_swig_i_0 := arg1
	C._wrap_KeyOpFieldsValuesQueue_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Getitem(arg2 int) (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	var swig_r Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)(SwigcptrStd_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_(C._wrap_KeyOpFieldsValuesQueue_getitem_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Setitem(arg2 int, arg3 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_KeyOpFieldsValuesQueue_setitem_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Delitem(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_KeyOpFieldsValuesQueue_delitem_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Getslice(arg2 int, arg3 int) (_swig_ret KeyOpFieldsValuesQueue) {
	var swig_r KeyOpFieldsValuesQueue
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (KeyOpFieldsValuesQueue)(SwigcptrKeyOpFieldsValuesQueue(C._wrap_KeyOpFieldsValuesQueue_getslice_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Setslice(arg2 int, arg3 int, arg4 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_KeyOpFieldsValuesQueue_setslice_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrKeyOpFieldsValuesQueue) Delslice(arg2 int, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_KeyOpFieldsValuesQueue_delslice_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
}

type KeyOpFieldsValuesQueue interface {
	Swigcptr() uintptr
	SwigIsKeyOpFieldsValuesQueue()
	Empty() (_swig_ret bool)
	Assign(arg2 uint, arg3 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Swap(arg2 KeyOpFieldsValuesQueue)
	Size() (_swig_ret uint)
	Max_size() (_swig_ret uint)
	Resize(a ...interface{})
	Front() (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Back() (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Push_front(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Push_back(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Pop_front()
	Pop_back()
	Clear()
	Getitem(arg2 int) (_swig_ret Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Setitem(arg2 int, arg3 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Delitem(arg2 int)
	Getslice(arg2 int, arg3 int) (_swig_ret KeyOpFieldsValuesQueue)
	Setslice(arg2 int, arg3 int, arg4 KeyOpFieldsValuesQueue)
	Delslice(arg2 int, arg3 int)
}

type SwigcptrVectorSonicDbKey uintptr

func (p SwigcptrVectorSonicDbKey) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorSonicDbKey) SwigIsVectorSonicDbKey() {
}

func NewVectorSonicDbKey__SWIG_0() (_swig_ret VectorSonicDbKey) {
	var swig_r VectorSonicDbKey
	swig_r = (VectorSonicDbKey)(SwigcptrVectorSonicDbKey(C._wrap_new_VectorSonicDbKey__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewVectorSonicDbKey__SWIG_1(arg1 int64) (_swig_ret VectorSonicDbKey) {
	var swig_r VectorSonicDbKey
	_swig_i_0 := arg1
	swig_r = (VectorSonicDbKey)(SwigcptrVectorSonicDbKey(C._wrap_new_VectorSonicDbKey__SWIG_1_swsscommon_2432462d295473d6(C.swig_type_43(_swig_i_0))))
	return swig_r
}

func NewVectorSonicDbKey__SWIG_2(arg1 VectorSonicDbKey) (_swig_ret VectorSonicDbKey) {
	var swig_r VectorSonicDbKey
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (VectorSonicDbKey)(SwigcptrVectorSonicDbKey(C._wrap_new_VectorSonicDbKey__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVectorSonicDbKey(a ...interface{}) VectorSonicDbKey {
	argc := len(a)
	if argc == 0 {
		return NewVectorSonicDbKey__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVectorSonicDbKey__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVectorSonicDbKey__SWIG_2(a[0].(VectorSonicDbKey))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVectorSonicDbKey) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorSonicDbKey_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorSonicDbKey) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorSonicDbKey_capacity_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorSonicDbKey) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorSonicDbKey_reserve_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_46(_swig_i_1))
}

func (arg1 SwigcptrVectorSonicDbKey) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VectorSonicDbKey_isEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorSonicDbKey) Clear() {
	_swig_i_0 := arg1
	C._wrap_VectorSonicDbKey_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVectorSonicDbKey) Add(arg2 SonicDBKey) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_VectorSonicDbKey_add_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVectorSonicDbKey) Get(arg2 int) (_swig_ret SonicDBKey) {
	var swig_r SonicDBKey
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SonicDBKey)(SwigcptrSonicDBKey(C._wrap_VectorSonicDbKey_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVectorSonicDbKey) Set(arg2 int, arg3 SonicDBKey) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_VectorSonicDbKey_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteVectorSonicDbKey(arg1 VectorSonicDbKey) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_VectorSonicDbKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type VectorSonicDbKey interface {
	Swigcptr() uintptr
	SwigIsVectorSonicDbKey()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 SonicDBKey)
	Get(arg2 int) (_swig_ret SonicDBKey)
	Set(arg2 int, arg3 SonicDBKey)
}

func CastSelectableToRedisSelectObj(arg1 Selectable) (_swig_ret RedisSelect) {
	var swig_r RedisSelect
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RedisSelect)(SwigcptrRedisSelect(C._wrap_CastSelectableToRedisSelectObj_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func CastSelectableToSubscriberTableObj(arg1 Selectable) (_swig_ret SubscriberStateTable) {
	var swig_r SubscriberStateTable
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SubscriberStateTable)(SwigcptrSubscriberStateTable(C._wrap_CastSelectableToSubscriberTableObj_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

const APPL_DB int = 0
const ASIC_DB int = 1
const COUNTERS_DB int = 2
const LOGLEVEL_DB int = 3
const CONFIG_DB int = 4
const PFC_WD_DB int = 5
const FLEX_COUNTER_DB int = 5
const STATE_DB int = 6
const SNMP_OVERLAY_DB int = 7
const RESTAPI_DB int = 8
const GB_ASIC_DB int = 9
const GB_COUNTERS_DB int = 10
const GB_FLEX_COUNTER_DB int = 11
const CHASSIS_APP_DB int = 12
const CHASSIS_STATE_DB int = 13
const APPL_STATE_DB int = 14
const DPU_APPL_DB int = 15
const DPU_APPL_STATE_DB int = 16
const DPU_STATE_DB int = 17
const DPU_COUNTERS_DB int = 18
const EVENT_DB int = 19
const BMP_STATE_DB int = 20
const APP_PORT_TABLE_NAME string = "PORT_TABLE"
const APP_SEND_TO_INGRESS_PORT_TABLE_NAME string = "SEND_TO_INGRESS_PORT_TABLE"
const APP_GEARBOX_TABLE_NAME string = "GEARBOX_TABLE"
const APP_FABRIC_PORT_TABLE_NAME string = "FABRIC_PORT_TABLE"
const APP_VLAN_TABLE_NAME string = "VLAN_TABLE"
const APP_VLAN_MEMBER_TABLE_NAME string = "VLAN_MEMBER_TABLE"
const APP_LAG_TABLE_NAME string = "LAG_TABLE"
const APP_LAG_MEMBER_TABLE_NAME string = "LAG_MEMBER_TABLE"
const APP_INTF_TABLE_NAME string = "INTF_TABLE"
const APP_NEIGH_TABLE_NAME string = "NEIGH_TABLE"
const APP_ROUTE_TABLE_NAME string = "ROUTE_TABLE"
const APP_LABEL_ROUTE_TABLE_NAME string = "LABEL_ROUTE_TABLE"
const APP_TUNNEL_DECAP_TABLE_NAME string = "TUNNEL_DECAP_TABLE"
const APP_TUNNEL_DECAP_TERM_TABLE_NAME string = "TUNNEL_DECAP_TERM_TABLE"
const APP_TUNNEL_ROUTE_TABLE_NAME string = "TUNNEL_ROUTE_TABLE"
const APP_FDB_TABLE_NAME string = "FDB_TABLE"
const APP_PFC_WD_TABLE_NAME string = "PFC_WD_TABLE"
const APP_SWITCH_TABLE_NAME string = "SWITCH_TABLE"
const APP_NEXTHOP_GROUP_TABLE_NAME string = "NEXTHOP_GROUP_TABLE"
const APP_CLASS_BASED_NEXT_HOP_GROUP_TABLE_NAME string = "CLASS_BASED_NEXT_HOP_GROUP_TABLE"
const APP_P4RT_TABLE_NAME string = "P4RT_TABLE"
const APP_P4RT_TABLES_DEFINITION_TABLE_NAME string = "TABLES_DEFINITION_TABLE"
const APP_P4RT_ROUTER_INTERFACE_TABLE_NAME string = "FIXED_ROUTER_INTERFACE_TABLE"
const APP_P4RT_NEIGHBOR_TABLE_NAME string = "FIXED_NEIGHBOR_TABLE"
const APP_P4RT_NEXTHOP_TABLE_NAME string = "FIXED_NEXTHOP_TABLE"
const APP_P4RT_WCMP_GROUP_TABLE_NAME string = "FIXED_WCMP_GROUP_TABLE"
const APP_P4RT_IPV4_TABLE_NAME string = "FIXED_IPV4_TABLE"
const APP_P4RT_IPV6_TABLE_NAME string = "FIXED_IPV6_TABLE"
const APP_P4RT_IPV4_MULTICAST_TABLE_NAME string = "FIXED_IPV4_MULTICAST_TABLE"
const APP_P4RT_IPV6_MULTICAST_TABLE_NAME string = "FIXED_IPV6_MULTICAST_TABLE"
const APP_P4RT_ACL_TABLE_DEFINITION_NAME string = "ACL_TABLE_DEFINITION_TABLE"
const APP_P4RT_MIRROR_SESSION_TABLE_NAME string = "FIXED_MIRROR_SESSION_TABLE"
const APP_P4RT_L3_ADMIT_TABLE_NAME string = "FIXED_L3_ADMIT_TABLE"
const APP_P4RT_TUNNEL_TABLE_NAME string = "FIXED_TUNNEL_TABLE"
const APP_P4RT_MULTICAST_ROUTER_INTERFACE_TABLE_NAME string = "FIXED_MULTICAST_ROUTER_INTERFACE_TABLE"
const APP_P4RT_REPLICATION_IP_MULTICAST_TABLE_NAME string = "REPLICATION_IP_MULTICAST_TABLE"
const APP_P4RT_REPLICATION_L2_MULTICAST_TABLE_NAME string = "REPLICATION_L2_MULTICAST_TABLE"
const APP_P4RT_IPV6_TUNNEL_TERMINATION_TABLE_NAME string = "FIXED_IPV6_TUNNEL_TERMINATION_TABLE"
const APP_P4RT_DISABLE_VLAN_CHECKS_TABLE_NAME string = "FIXED_DISABLE_VLAN_CHECKS_TABLE"
const APP_COPP_TABLE_NAME string = "COPP_TABLE"
const APP_VRF_TABLE_NAME string = "VRF_TABLE"
const APP_VNET_TABLE_NAME string = "VNET_TABLE"
const APP_VNET_RT_TABLE_NAME string = "VNET_ROUTE_TABLE"
const APP_VNET_RT_TUNNEL_TABLE_NAME string = "VNET_ROUTE_TUNNEL_TABLE"
const APP_VXLAN_VRF_TABLE_NAME string = "VXLAN_VRF_TABLE"
const APP_VXLAN_TUNNEL_MAP_TABLE_NAME string = "VXLAN_TUNNEL_MAP_TABLE"
const APP_VXLAN_TUNNEL_TABLE_NAME string = "VXLAN_TUNNEL_TABLE"
const APP_VXLAN_FDB_TABLE_NAME string = "VXLAN_FDB_TABLE"
const APP_VXLAN_REMOTE_VNI_TABLE_NAME string = "VXLAN_REMOTE_VNI_TABLE"
const APP_VXLAN_EVPN_NVO_TABLE_NAME string = "VXLAN_EVPN_NVO_TABLE"
const APP_NEIGH_SUPPRESS_VLAN_TABLE_NAME string = "SUPPRESS_VLAN_NEIGH_TABLE"
const APP_VLAN_STACKING_TABLE_NAME string = "VLAN_STACKING_TABLE"
const APP_VLAN_TRANSLATION_TABLE_NAME string = "VLAN_TRANSLATION_TABLE"
const APP_PASS_THROUGH_ROUTE_TABLE_NAME string = "PASS_THROUGH_ROUTE_TABLE"
const APP_ACL_TABLE_TABLE_NAME string = "ACL_TABLE_TABLE"
const APP_ACL_TABLE_TYPE_TABLE_NAME string = "ACL_TABLE_TYPE_TABLE"
const APP_ACL_RULE_TABLE_NAME string = "ACL_RULE_TABLE"
const APP_SFLOW_TABLE_NAME string = "SFLOW_TABLE"
const APP_SFLOW_SESSION_TABLE_NAME string = "SFLOW_SESSION_TABLE"
const APP_SFLOW_SAMPLE_RATE_TABLE_NAME string = "SFLOW_SAMPLE_RATE_TABLE"
const APP_NAT_TABLE_NAME string = "NAT_TABLE"
const APP_NAPT_TABLE_NAME string = "NAPT_TABLE"
const APP_NAT_TWICE_TABLE_NAME string = "NAT_TWICE_TABLE"
const APP_NAPT_TWICE_TABLE_NAME string = "NAPT_TWICE_TABLE"
const APP_NAT_GLOBAL_TABLE_NAME string = "NAT_GLOBAL_TABLE"
const APP_NAPT_POOL_IP_TABLE_NAME string = "NAPT_POOL_IP_TABLE"
const APP_NAT_DNAT_POOL_TABLE_NAME string = "NAT_DNAT_POOL_TABLE"
const APP_STP_VLAN_TABLE_NAME string = "STP_VLAN_TABLE"
const APP_STP_VLAN_PORT_TABLE_NAME string = "STP_VLAN_PORT_TABLE"
const APP_STP_VLAN_INSTANCE_TABLE_NAME string = "STP_VLAN_INSTANCE_TABLE"
const APP_STP_PORT_TABLE_NAME string = "STP_PORT_TABLE"
const APP_STP_PORT_STATE_TABLE_NAME string = "STP_PORT_STATE_TABLE"
const APP_STP_FASTAGEING_FLUSH_TABLE_NAME string = "STP_FASTAGEING_FLUSH_TABLE"
const APP_STP_BPDU_GUARD_TABLE_NAME string = "STP_BPDU_GUARD_TABLE"
const APP_MCLAG_FDB_TABLE_NAME string = "MCLAG_FDB_TABLE"
const APP_ISOLATION_GROUP_TABLE_NAME string = "ISOLATION_GROUP_TABLE"
const APP_BFD_SESSION_TABLE_NAME string = "BFD_SESSION_TABLE"
const APP_SAG_TABLE_NAME string = "SAG_TABLE"
const APP_FC_TO_NHG_INDEX_MAP_TABLE_NAME string = "FC_TO_NHG_INDEX_MAP_TABLE"
const APP_BGP_PROFILE_TABLE_NAME string = "BGP_PROFILE_TABLE"
const APP_VNET_MONITOR_TABLE_NAME string = "VNET_MONITOR_TABLE"
const ASIC_TEMPERATURE_INFO_TABLE_NAME string = "ASIC_TEMPERATURE_INFO"
const APP_MUX_CABLE_TABLE_NAME string = "MUX_CABLE_TABLE"
const APP_HW_MUX_CABLE_TABLE_NAME string = "HW_MUX_CABLE_TABLE"
const APP_MUX_CABLE_COMMAND_TABLE_NAME string = "MUX_CABLE_COMMAND_TABLE"
const APP_MUX_CABLE_RESPONSE_TABLE_NAME string = "MUX_CABLE_RESPONSE_TABLE"
const APP_FORWARDING_STATE_COMMAND_TABLE_NAME string = "FORWARDING_STATE_COMMAND"
const APP_FORWARDING_STATE_RESPONSE_TABLE_NAME string = "FORWARDING_STATE_RESPONSE"
const APP_PEER_PORT_TABLE_NAME string = "PORT_TABLE_PEER"
const APP_PEER_HW_FORWARDING_STATE_TABLE_NAME string = "HW_FORWARDING_STATE_PEER"
const APP_SYSTEM_PORT_TABLE_NAME string = "SYSTEM_PORT_TABLE"
const APP_MACSEC_PORT_TABLE_NAME string = "MACSEC_PORT_TABLE"
const APP_MACSEC_EGRESS_SC_TABLE_NAME string = "MACSEC_EGRESS_SC_TABLE"
const APP_MACSEC_INGRESS_SC_TABLE_NAME string = "MACSEC_INGRESS_SC_TABLE"
const APP_MACSEC_EGRESS_SA_TABLE_NAME string = "MACSEC_EGRESS_SA_TABLE"
const APP_MACSEC_INGRESS_SA_TABLE_NAME string = "MACSEC_INGRESS_SA_TABLE"
const APP_BUFFER_POOL_TABLE_NAME string = "BUFFER_POOL_TABLE"
const APP_BUFFER_PROFILE_TABLE_NAME string = "BUFFER_PROFILE_TABLE"
const APP_BUFFER_PG_TABLE_NAME string = "BUFFER_PG_TABLE"
const APP_BUFFER_QUEUE_TABLE_NAME string = "BUFFER_QUEUE_TABLE"
const APP_BUFFER_PORT_INGRESS_PROFILE_LIST_NAME string = "BUFFER_PORT_INGRESS_PROFILE_LIST_TABLE"
const APP_BUFFER_PORT_EGRESS_PROFILE_LIST_NAME string = "BUFFER_PORT_EGRESS_PROFILE_LIST_TABLE"
const APP_NEIGH_RESOLVE_TABLE_NAME string = "NEIGH_RESOLVE_TABLE"
const APP_SRV6_SID_LIST_TABLE_NAME string = "SRV6_SID_LIST_TABLE"
const APP_SRV6_MY_SID_TABLE_NAME string = "SRV6_MY_SID_TABLE"
const APP_DASH_VNET_TABLE_NAME string = "DASH_VNET_TABLE"
const APP_DASH_QOS_TABLE_NAME string = "DASH_QOS_TABLE"
const APP_DASH_ENI_TABLE_NAME string = "DASH_ENI_TABLE"
const APP_DASH_ACL_IN_TABLE_NAME string = "DASH_ACL_IN_TABLE"
const APP_DASH_ACL_OUT_TABLE_NAME string = "DASH_ACL_OUT_TABLE"
const APP_DASH_ACL_GROUP_TABLE_NAME string = "DASH_ACL_GROUP_TABLE"
const APP_DASH_ACL_RULE_TABLE_NAME string = "DASH_ACL_RULE_TABLE"
const APP_DASH_PREFIX_TAG_TABLE_NAME string = "DASH_PREFIX_TAG_TABLE"
const APP_DASH_ROUTING_TYPE_TABLE_NAME string = "DASH_ROUTING_TYPE_TABLE"
const APP_DASH_APPLIANCE_TABLE_NAME string = "DASH_APPLIANCE_TABLE"
const APP_DASH_ROUTE_TABLE_NAME string = "DASH_ROUTE_TABLE"
const APP_DASH_ROUTE_RULE_TABLE_NAME string = "DASH_ROUTE_RULE_TABLE"
const APP_DASH_VNET_MAPPING_TABLE_NAME string = "DASH_VNET_MAPPING_TABLE"
const APP_DASH_ENI_ROUTE_TABLE_NAME string = "DASH_ENI_ROUTE_TABLE"
const APP_DASH_ROUTE_GROUP_TABLE_NAME string = "DASH_ROUTE_GROUP_TABLE"
const APP_DASH_TUNNEL_TABLE_NAME string = "DASH_TUNNEL_TABLE"
const APP_DASH_PA_VALIDATION_TABLE_NAME string = "DASH_PA_VALIDATION_TABLE"
const APP_DASH_ROUTING_APPLIANCE_TABLE_NAME string = "DASH_ROUTING_APPLIANCE_TABLE"
const APP_PAC_PORT_TABLE_NAME string = "PAC_PORT_TABLE"
const APP_TC_TO_QUEUE_MAP_TABLE_NAME string = "TC_TO_QUEUE_MAP_TABLE"
const APP_SCHEDULER_TABLE_NAME string = "SCHEDULER_TABLE"
const APP_DSCP_TO_TC_MAP_TABLE_NAME string = "DSCP_TO_TC_MAP_TABLE"
const APP_QUEUE_TABLE_NAME string = "QUEUE_TABLE"
const APP_PORT_QOS_MAP_TABLE_NAME string = "PORT_QOS_MAP_TABLE"
const APP_WRED_PROFILE_TABLE_NAME string = "WRED_PROFILE_TABLE"
const APP_TC_TO_PRIORITY_GROUP_MAP_NAME string = "TC_TO_PRIORITY_GROUP_MAP_TABLE"
const APP_PFC_PRIORITY_TO_PRIORITY_GROUP_MAP_NAME string = "PFC_PRIORITY_TO_PRIORITY_GROUP_MAP_TABLE"
const APP_PFC_PRIORITY_TO_QUEUE_MAP_NAME string = "MAP_PFC_PRIORITY_TO_QUEUE"
const COUNTERS_PORT_NAME_MAP string = "COUNTERS_PORT_NAME_MAP"
const COUNTERS_SYSTEM_PORT_NAME_MAP string = "COUNTERS_SYSTEM_PORT_NAME_MAP"
const COUNTERS_LAG_NAME_MAP string = "COUNTERS_LAG_NAME_MAP"
const COUNTERS_TABLE string = "COUNTERS"
const COUNTERS_QUEUE_NAME_MAP string = "COUNTERS_QUEUE_NAME_MAP"
const COUNTERS_VOQ_NAME_MAP string = "COUNTERS_VOQ_NAME_MAP"
const COUNTERS_QUEUE_PORT_MAP string = "COUNTERS_QUEUE_PORT_MAP"
const COUNTERS_QUEUE_INDEX_MAP string = "COUNTERS_QUEUE_INDEX_MAP"
const COUNTERS_QUEUE_TYPE_MAP string = "COUNTERS_QUEUE_TYPE_MAP"
const COUNTERS_PG_NAME_MAP string = "COUNTERS_PG_NAME_MAP"
const COUNTERS_PG_PORT_MAP string = "COUNTERS_PG_PORT_MAP"
const COUNTERS_PG_INDEX_MAP string = "COUNTERS_PG_INDEX_MAP"
const COUNTERS_RIF_TYPE_MAP string = "COUNTERS_RIF_TYPE_MAP"
const COUNTERS_RIF_NAME_MAP string = "COUNTERS_RIF_NAME_MAP"
const COUNTERS_TRAP_NAME_MAP string = "COUNTERS_TRAP_NAME_MAP"
const COUNTERS_CRM_TABLE string = "CRM"
const COUNTERS_BUFFER_POOL_NAME_MAP string = "COUNTERS_BUFFER_POOL_NAME_MAP"
const COUNTERS_SWITCH_NAME_MAP string = "COUNTERS_SWITCH_NAME_MAP"
const COUNTERS_MACSEC_NAME_MAP string = "COUNTERS_MACSEC_NAME_MAP"
const COUNTERS_MACSEC_FLOW_TX_NAME_MAP string = "COUNTERS_MACSEC_FLOW_TX_NAME_MAP"
const COUNTERS_MACSEC_FLOW_RX_NAME_MAP string = "COUNTERS_MACSEC_FLOW_RX_NAME_MAP"
const COUNTERS_MACSEC_SA_TX_NAME_MAP string = "COUNTERS_MACSEC_SA_TX_NAME_MAP"
const COUNTERS_MACSEC_SA_RX_NAME_MAP string = "COUNTERS_MACSEC_SA_RX_NAME_MAP"
const COUNTERS_DEBUG_NAME_PORT_STAT_MAP string = "COUNTERS_DEBUG_NAME_PORT_STAT_MAP"
const COUNTERS_DEBUG_NAME_SWITCH_STAT_MAP string = "COUNTERS_DEBUG_NAME_SWITCH_STAT_MAP"
const COUNTERS_TUNNEL_TYPE_MAP string = "COUNTERS_TUNNEL_TYPE_MAP"
const COUNTERS_TUNNEL_NAME_MAP string = "COUNTERS_TUNNEL_NAME_MAP"
const COUNTERS_ENI_NAME_MAP string = "COUNTERS_ENI_NAME_MAP"
const COUNTERS_ROUTE_NAME_MAP string = "COUNTERS_ROUTE_NAME_MAP"
const COUNTERS_ROUTE_TO_PATTERN_MAP string = "COUNTERS_ROUTE_TO_PATTERN_MAP"
const COUNTERS_FABRIC_QUEUE_NAME_MAP string = "COUNTERS_FABRIC_QUEUE_NAME_MAP"
const COUNTERS_FABRIC_PORT_NAME_MAP string = "COUNTERS_FABRIC_PORT_NAME_MAP"
const COUNTERS_TWAMP_SESSION_NAME_MAP string = "COUNTERS_TWAMP_SESSION_NAME_MAP"
const COUNTERS_NAT_TABLE string = "COUNTERS_NAT"
const COUNTERS_NAPT_TABLE string = "COUNTERS_NAPT"
const COUNTERS_TWICE_NAT_TABLE string = "COUNTERS_TWICE_NAT"
const COUNTERS_TWICE_NAPT_TABLE string = "COUNTERS_TWICE_NAPT"
const COUNTERS_GLOBAL_NAT_TABLE string = "COUNTERS_GLOBAL_NAT"
const COUNTERS_EVENTS_TABLE string = "COUNTERS_EVENTS"
const PERIODIC_WATERMARKS_TABLE string = "PERIODIC_WATERMARKS"
const PERSISTENT_WATERMARKS_TABLE string = "PERSISTENT_WATERMARKS"
const USER_WATERMARKS_TABLE string = "USER_WATERMARKS"
const RATES_TABLE string = "RATES"
const COUNTERS_EVENTS_PUBLISHED string = "published"
const COUNTERS_EVENTS_MISSED_SLOW_RCVR string = "missed_by_slow_receiver"
const COUNTERS_EVENTS_MISSED_INTERNAL string = "missed_internal"
const COUNTERS_EVENTS_MISSED_CACHE string = "missed_to_cache"
const COUNTERS_EVENTS_LATENCY string = "latency_in_ms"
const PFC_WD_POLL_MSECS int = 100
const FLEX_COUNTER_TABLE string = "FLEX_COUNTER_TABLE"
const PORT_COUNTER_ID_LIST string = "PORT_COUNTER_ID_LIST"
const PORT_DEBUG_COUNTER_ID_LIST string = "PORT_DEBUG_COUNTER_ID_LIST"
const QUEUE_COUNTER_ID_LIST string = "QUEUE_COUNTER_ID_LIST"
const QUEUE_ATTR_ID_LIST string = "QUEUE_ATTR_ID_LIST"
const BUFFER_POOL_COUNTER_ID_LIST string = "BUFFER_POOL_COUNTER_ID_LIST"
const ENI_COUNTER_ID_LIST string = "ENI_COUNTER_ID_LIST"
const PFC_WD_STATE_TABLE string = "PFC_WD_STATE_TABLE"
const PFC_WD_PORT_COUNTER_ID_LIST string = "PORT_COUNTER_ID_LIST"
const PFC_WD_QUEUE_COUNTER_ID_LIST string = "QUEUE_COUNTER_ID_LIST"
const PFC_WD_QUEUE_ATTR_ID_LIST string = "QUEUE_ATTR_ID_LIST"
const PG_COUNTER_ID_LIST string = "PG_COUNTER_ID_LIST"
const PG_ATTR_ID_LIST string = "PG_ATTR_ID_LIST"
const RIF_COUNTER_ID_LIST string = "RIF_COUNTER_ID_LIST"
const TUNNEL_COUNTER_ID_LIST string = "TUNNEL_COUNTER_ID_LIST"
const SWITCH_DEBUG_COUNTER_ID_LIST string = "SWITCH_DEBUG_COUNTER_ID_LIST"
const MACSEC_FLOW_COUNTER_ID_LIST string = "MACSEC_FLOW_COUNTER_ID_LIST"
const MACSEC_SA_COUNTER_ID_LIST string = "MACSEC_SA_COUNTER_ID_LIST"
const MACSEC_SA_ATTR_ID_LIST string = "MACSEC_SA_ATTR_ID_LIST"
const TUNNEL_ATTR_ID_LIST string = "TUNNEL_ATTR_ID_LIST"
const ACL_COUNTER_ATTR_ID_LIST string = "ACL_COUNTER_ATTR_ID_LIST"
const FLOW_COUNTER_ID_LIST string = "FLOW_COUNTER_ID_LIST"
const PLUGIN_TABLE string = "PLUGIN_TABLE"
const LUA_PLUGIN_TYPE string = "LUA_PLUGIN_TYPE"
const SAI_OBJECT_TYPE string = "SAI_OBJECT_TYPE"
const POLL_INTERVAL_FIELD string = "POLL_INTERVAL"
const STATS_MODE_FIELD string = "STATS_MODE"
const STATS_MODE_READ string = "STATS_MODE_READ"
const STATS_MODE_READ_AND_CLEAR string = "STATS_MODE_READ_AND_CLEAR"
const QUEUE_PLUGIN_FIELD string = "QUEUE_PLUGIN_LIST"
const PORT_PLUGIN_FIELD string = "PORT_PLUGIN_LIST"
const WRED_QUEUE_PLUGIN_FIELD string = "WRED_QUEUE_PLUGIN_LIST"
const WRED_PORT_PLUGIN_FIELD string = "WRED_PORT_PLUGIN_LIST"
const MACSEC_SA_PLUGIN_FIELD string = "MACSEC_SA_PLUGIN_LIST"
const RIF_PLUGIN_FIELD string = "RIF_PLUGIN_LIST"
const PG_PLUGIN_FIELD string = "PG_PLUGIN_LIST"
const TUNNEL_PLUGIN_FIELD string = "TUNNEL_PLUGIN_LIST"
const BUFFER_POOL_PLUGIN_FIELD string = "BUFFER_POOL_PLUGIN_LIST"
const FLOW_COUNTER_PLUGIN_FIELD string = "FLOW_COUNTER_PLUGIN_FIELD"
const FLEX_COUNTER_STATUS_FIELD string = "FLEX_COUNTER_STATUS"
const FLEX_COUNTER_GROUP_TABLE string = "FLEX_COUNTER_GROUP_TABLE"
const FLEX_COUNTER_DELAY_STATUS_FIELD string = "FLEX_COUNTER_DELAY_STATUS"
const CFG_PORT_TABLE_NAME string = "PORT"
const CFG_PORT_CABLE_LEN_TABLE_NAME string = "CABLE_LENGTH"
const CFG_SEND_TO_INGRESS_PORT_TABLE_NAME string = "SEND_TO_INGRESS_PORT"
const CFG_GEARBOX_TABLE_NAME string = "GEARBOX"
const CFG_INTF_TABLE_NAME string = "INTERFACE"
const CFG_LOOPBACK_INTERFACE_TABLE_NAME string = "LOOPBACK_INTERFACE"
const CFG_MGMT_INTERFACE_TABLE_NAME string = "MGMT_INTERFACE"
const CFG_LAG_INTF_TABLE_NAME string = "PORTCHANNEL_INTERFACE"
const CFG_VLAN_INTF_TABLE_NAME string = "VLAN_INTERFACE"
const CFG_VLAN_SUB_INTF_TABLE_NAME string = "VLAN_SUB_INTERFACE"
const CFG_ASIC_SENSORS_TABLE_NAME string = "ASIC_SENSORS"
const CFG_LAG_TABLE_NAME string = "PORTCHANNEL"
const CFG_LAG_MEMBER_TABLE_NAME string = "PORTCHANNEL_MEMBER"
const CFG_VLAN_TABLE_NAME string = "VLAN"
const CFG_VLAN_MEMBER_TABLE_NAME string = "VLAN_MEMBER"
const CFG_VLAN_STACKING_TABLE_NAME string = "VLAN_STACKING"
const CFG_VLAN_TRANSLATION_TABLE_NAME string = "VLAN_TRANSLATION"
const CFG_FDB_TABLE_NAME string = "FDB"
const CFG_SWITCH_TABLE_NAME string = "SWITCH"
const CFG_VRF_TABLE_NAME string = "VRF"
const CFG_CRM_TABLE_NAME string = "CRM"
const CFG_MGMT_VRF_CONFIG_TABLE_NAME string = "MGMT_VRF_CONFIG"
const CFG_DHCP_SERVER_TABLE_NAME string = "DHCP_SERVER"
const CFG_NTP_GLOBAL_TABLE_NAME string = "NTP"
const CFG_NTP_SERVER_TABLE_NAME string = "NTP_SERVER"
const CFG_NTP_KEY_TABLE_NAME string = "NTP_KEY"
const CFG_SYSLOG_SERVER_TABLE_NAME string = "SYSLOG_SERVER"
const CFG_SYSLOG_CONFIG_TABLE_NAME string = "SYSLOG_CONFIG"
const CFG_BGP_NEIGHBOR_TABLE_NAME string = "BGP_NEIGHBOR"
const CFG_BGP_INTERNAL_NEIGHBOR_TABLE_NAME string = "BGP_INTERNAL_NEIGHBOR"
const CFG_BGP_MONITORS_TABLE_NAME string = "BGP_MONITORS"
const CFG_BGP_PEER_RANGE_TABLE_NAME string = "BGP_PEER_RANGE"
const CFG_BGP_DEVICE_GLOBAL_TABLE_NAME string = "BGP_DEVICE_GLOBAL"
const CFG_BMP_TABLE_NAME string = "BMP"
const CFG_SWITCH_HASH_TABLE_NAME string = "SWITCH_HASH"
const CFG_DEVICE_METADATA_TABLE_NAME string = "DEVICE_METADATA"
const CFG_DEVICE_NEIGHBOR_TABLE_NAME string = "DEVICE_NEIGHBOR"
const CFG_DEVICE_NEIGHBOR_METADATA_TABLE_NAME string = "DEVICE_NEIGHBOR_METADATA"
const CFG_MIRROR_SESSION_TABLE_NAME string = "MIRROR_SESSION"
const CFG_ACL_TABLE_TABLE_NAME string = "ACL_TABLE"
const CFG_ACL_TABLE_TYPE_TABLE_NAME string = "ACL_TABLE_TYPE"
const CFG_ACL_RULE_TABLE_NAME string = "ACL_RULE"
const CFG_PFC_WD_TABLE_NAME string = "PFC_WD"
const CFG_FLEX_COUNTER_TABLE_NAME string = "FLEX_COUNTER_TABLE"
const CFG_WATERMARK_TABLE_NAME string = "WATERMARK_TABLE"
const CFG_PBH_TABLE_TABLE_NAME string = "PBH_TABLE"
const CFG_PBH_RULE_TABLE_NAME string = "PBH_RULE"
const CFG_PBH_HASH_TABLE_NAME string = "PBH_HASH"
const CFG_PBH_HASH_FIELD_TABLE_NAME string = "PBH_HASH_FIELD"
const CFG_PFC_PRIORITY_TO_PRIORITY_GROUP_MAP_TABLE_NAME string = "PFC_PRIORITY_TO_PRIORITY_GROUP_MAP"
const CFG_TC_TO_PRIORITY_GROUP_MAP_TABLE_NAME string = "TC_TO_PRIORITY_GROUP_MAP"
const CFG_PFC_PRIORITY_TO_QUEUE_MAP_TABLE_NAME string = "MAP_PFC_PRIORITY_TO_QUEUE"
const CFG_TC_TO_QUEUE_MAP_TABLE_NAME string = "TC_TO_QUEUE_MAP"
const CFG_DSCP_TO_TC_MAP_TABLE_NAME string = "DSCP_TO_TC_MAP"
const CFG_MPLS_TC_TO_TC_MAP_TABLE_NAME string = "MPLS_TC_TO_TC_MAP"
const CFG_SCHEDULER_TABLE_NAME string = "SCHEDULER"
const CFG_PORT_QOS_MAP_TABLE_NAME string = "PORT_QOS_MAP"
const CFG_WRED_PROFILE_TABLE_NAME string = "WRED_PROFILE"
const CFG_QUEUE_TABLE_NAME string = "QUEUE"
const CFG_DOT1P_TO_TC_MAP_TABLE_NAME string = "DOT1P_TO_TC_MAP"
const CFG_DSCP_TO_FC_MAP_TABLE_NAME string = "DSCP_TO_FC_MAP"
const CFG_EXP_TO_FC_MAP_TABLE_NAME string = "EXP_TO_FC_MAP"
const CFG_TC_TO_DSCP_MAP_TABLE_NAME string = "TC_TO_DSCP_MAP"
const CFG_TC_TO_DOT1P_MAP_TABLE_NAME string = "TC_TO_DOT1P_MAP"
const CFG_BUFFER_POOL_TABLE_NAME string = "BUFFER_POOL"
const CFG_BUFFER_PROFILE_TABLE_NAME string = "BUFFER_PROFILE"
const CFG_BUFFER_QUEUE_TABLE_NAME string = "BUFFER_QUEUE"
const CFG_BUFFER_PG_TABLE_NAME string = "BUFFER_PG"
const CFG_BUFFER_PORT_INGRESS_PROFILE_LIST_NAME string = "BUFFER_PORT_INGRESS_PROFILE_LIST"
const CFG_BUFFER_PORT_EGRESS_PROFILE_LIST_NAME string = "BUFFER_PORT_EGRESS_PROFILE_LIST"
const CFG_DEFAULT_LOSSLESS_BUFFER_PARAMETER string = "DEFAULT_LOSSLESS_BUFFER_PARAMETER"
const CFG_POLICER_TABLE_NAME string = "POLICER"
const CFG_WARM_RESTART_TABLE_NAME string = "WARM_RESTART"
const CFG_VXLAN_TUNNEL_TABLE_NAME string = "VXLAN_TUNNEL"
const CFG_VXLAN_TUNNEL_MAP_TABLE_NAME string = "VXLAN_TUNNEL_MAP"
const CFG_VXLAN_EVPN_NVO_TABLE_NAME string = "VXLAN_EVPN_NVO"
const CFG_VNET_TABLE_NAME string = "VNET"
const CFG_NEIGH_TABLE_NAME string = "NEIGH"
const CFG_NEIGH_SUPPRESS_VLAN_TABLE_NAME string = "SUPPRESS_VLAN_NEIGH"
const CFG_VNET_RT_TABLE_NAME string = "VNET_ROUTE"
const CFG_VNET_RT_TUNNEL_TABLE_NAME string = "VNET_ROUTE_TUNNEL"
const CFG_NVGRE_TUNNEL_TABLE_NAME string = "NVGRE_TUNNEL"
const CFG_NVGRE_TUNNEL_MAP_TABLE_NAME string = "NVGRE_TUNNEL_MAP"
const CFG_PASS_THROUGH_ROUTE_TABLE_NAME string = "PASS_THROUGH_ROUTE_TABLE"
const CFG_SFLOW_TABLE_NAME string = "SFLOW"
const CFG_SFLOW_SESSION_TABLE_NAME string = "SFLOW_SESSION"
const CFG_DEBUG_COUNTER_TABLE_NAME string = "DEBUG_COUNTER"
const CFG_DEBUG_COUNTER_DROP_REASON_TABLE_NAME string = "DEBUG_COUNTER_DROP_REASON"
const CFG_STATIC_NAT_TABLE_NAME string = "STATIC_NAT"
const CFG_STATIC_NAPT_TABLE_NAME string = "STATIC_NAPT"
const CFG_NAT_POOL_TABLE_NAME string = "NAT_POOL"
const CFG_NAT_BINDINGS_TABLE_NAME string = "NAT_BINDINGS"
const CFG_NAT_GLOBAL_TABLE_NAME string = "NAT_GLOBAL"
const CFG_STP_GLOBAL_TABLE_NAME string = "STP"
const CFG_STP_VLAN_TABLE_NAME string = "STP_VLAN"
const CFG_STP_VLAN_PORT_TABLE_NAME string = "STP_VLAN_PORT"
const CFG_STP_PORT_TABLE_NAME string = "STP_PORT"
const CFG_MCLAG_TABLE_NAME string = "MCLAG_DOMAIN"
const CFG_MCLAG_INTF_TABLE_NAME string = "MCLAG_INTERFACE"
const CFG_MCLAG_UNIQUE_IP_TABLE_NAME string = "MCLAG_UNIQUE_IP"
const CFG_PORT_STORM_CONTROL_TABLE_NAME string = "PORT_STORM_CONTROL"
const CFG_RATES_TABLE_NAME string = "RATES"
const CFG_FEATURE_TABLE_NAME string = "FEATURE"
const CFG_COPP_TRAP_TABLE_NAME string = "COPP_TRAP"
const CFG_COPP_GROUP_TABLE_NAME string = "COPP_GROUP"
const CFG_FG_NHG string = "FG_NHG"
const CFG_FG_NHG_PREFIX string = "FG_NHG_PREFIX"
const CFG_FG_NHG_MEMBER string = "FG_NHG_MEMBER"
const CFG_MUX_CABLE_TABLE_NAME string = "MUX_CABLE"
const CFG_MUX_LINKMGR_TABLE_NAME string = "MUX_LINKMGR"
const CFG_PEER_SWITCH_TABLE_NAME string = "PEER_SWITCH"
const CFG_TUNNEL_TABLE_NAME string = "TUNNEL"
const CFG_SUBNET_DECAP_TABLE_NAME string = "SUBNET_DECAP"
const CFG_SYSTEM_PORT_TABLE_NAME string = "SYSTEM_PORT"
const CFG_VOQ_INBAND_INTERFACE_TABLE_NAME string = "VOQ_INBAND_INTERFACE"
const CFG_MACSEC_PROFILE_TABLE_NAME string = "MACSEC_PROFILE"
const CHASSIS_APP_SYSTEM_INTERFACE_TABLE_NAME string = "SYSTEM_INTERFACE"
const CHASSIS_APP_SYSTEM_NEIGH_TABLE_NAME string = "SYSTEM_NEIGH"
const CHASSIS_APP_LAG_TABLE_NAME string = "SYSTEM_LAG_TABLE"
const CHASSIS_APP_LAG_MEMBER_TABLE_NAME string = "SYSTEM_LAG_MEMBER_TABLE"
const CFG_CHASSIS_MODULE_TABLE string = "CHASSIS_MODULE"
const CFG_TWAMP_SESSION_TABLE_NAME string = "TWAMP_SESSION"
const CFG_BANNER_MESSAGE_TABLE_NAME string = "BANNER_MESSAGE"
const CFG_DHCP_TABLE string = "DHCP_RELAY"
const CFG_FLOW_COUNTER_ROUTE_PATTERN_TABLE_NAME string = "FLOW_COUNTER_ROUTE_PATTERN"
const CFG_LOGGER_TABLE_NAME string = "LOGGER"
const CFG_SAG_TABLE_NAME string = "SAG"
const CFG_SUPPRESS_ASIC_SDK_HEALTH_EVENT_NAME string = "SUPPRESS_ASIC_SDK_HEALTH_EVENT"
const CFG_PAC_PORT_CONFIG_TABLE string = "PAC_PORT_CONFIG_TABLE"
const CFG_PAC_GLOBAL_CONFIG_TABLE string = "PAC_GLOBAL_CONFIG_TABLE"
const CFG_PAC_HOSTAPD_GLOBAL_CONFIG_TABLE string = "HOSTAPD_GLOBAL_CONFIG_TABLE"
const STATE_SWITCH_CAPABILITY_TABLE_NAME string = "SWITCH_CAPABILITY"
const STATE_ACL_STAGE_CAPABILITY_TABLE_NAME string = "ACL_STAGE_CAPABILITY_TABLE"
const STATE_PBH_CAPABILITIES_TABLE_NAME string = "PBH_CAPABILITIES"
const STATE_PORT_TABLE_NAME string = "PORT_TABLE"
const STATE_LAG_TABLE_NAME string = "LAG_TABLE"
const STATE_VLAN_TABLE_NAME string = "VLAN_TABLE"
const STATE_VLAN_MEMBER_TABLE_NAME string = "VLAN_MEMBER_TABLE"
const STATE_INTERFACE_TABLE_NAME string = "INTERFACE_TABLE"
const STATE_FDB_TABLE_NAME string = "FDB_TABLE"
const STATE_WARM_RESTART_TABLE_NAME string = "WARM_RESTART_TABLE"
const STATE_WARM_RESTART_ENABLE_TABLE_NAME string = "WARM_RESTART_ENABLE_TABLE"
const STATE_VRF_TABLE_NAME string = "VRF_TABLE"
const STATE_VRF_OBJECT_TABLE_NAME string = "VRF_OBJECT_TABLE"
const STATE_MGMT_PORT_TABLE_NAME string = "MGMT_PORT_TABLE"
const STATE_NEIGH_RESTORE_TABLE_NAME string = "NEIGH_RESTORE_TABLE"
const STATE_MIRROR_SESSION_TABLE_NAME string = "MIRROR_SESSION_TABLE"
const STATE_VXLAN_TABLE_NAME string = "VXLAN_TABLE"
const STATE_VXLAN_TUNNEL_TABLE_NAME string = "VXLAN_TUNNEL_TABLE"
const STATE_NEIGH_SUPPRESS_VLAN_TABLE_NAME string = "SUPPRESS_VLAN_NEIGH_TABLE"
const STATE_BGP_TABLE_NAME string = "BGP_STATE_TABLE"
const STATE_DEBUG_COUNTER_CAPABILITIES_NAME string = "DEBUG_COUNTER_CAPABILITIES"
const STATE_NAT_RESTORE_TABLE_NAME string = "NAT_RESTORE_TABLE"
const STATE_MCLAG_TABLE_NAME string = "MCLAG_TABLE"
const STATE_MCLAG_LOCAL_INTF_TABLE_NAME string = "MCLAG_LOCAL_INTF_TABLE"
const STATE_MCLAG_REMOTE_INTF_TABLE_NAME string = "MCLAG_REMOTE_INTF_TABLE"
const STATE_MCLAG_REMOTE_FDB_TABLE_NAME string = "MCLAG_REMOTE_FDB_TABLE"
const STATE_STP_TABLE_NAME string = "STP_TABLE"
const STATE_BUM_STORM_CAPABILITY_TABLE_NAME string = "BUM_STORM_CAPABILITY_TABLE"
const STATE_COPP_GROUP_TABLE_NAME string = "COPP_GROUP_TABLE"
const STATE_COPP_TRAP_TABLE_NAME string = "COPP_TRAP_TABLE"
const STATE_FG_ROUTE_TABLE_NAME string = "FG_ROUTE_TABLE"
const STATE_MUX_CABLE_TABLE_NAME string = "MUX_CABLE_TABLE"
const STATE_HW_MUX_CABLE_TABLE_NAME string = "HW_MUX_CABLE_TABLE"
const STATE_MUX_LINKMGR_TABLE_NAME string = "MUX_LINKMGR_TABLE"
const STATE_MUX_METRICS_TABLE_NAME string = "MUX_METRICS_TABLE"
const STATE_MUX_CABLE_INFO_TABLE_NAME string = "MUX_CABLE_INFO"
const STATE_LINK_PROBE_STATS_TABLE_NAME string = "LINK_PROBE_STATS"
const STATE_PEER_MUX_METRICS_TABLE_NAME string = "MUX_METRICS_TABLE_PEER"
const STATE_PEER_HW_FORWARDING_STATE_TABLE_NAME string = "HW_MUX_CABLE_TABLE_PEER"
const STATE_SYSTEM_NEIGH_TABLE_NAME string = "SYSTEM_NEIGH_TABLE"
const STATE_TWAMP_SESSION_TABLE_NAME string = "TWAMP_SESSION_TABLE"
const STATE_MACSEC_PORT_TABLE_NAME string = "MACSEC_PORT_TABLE"
const STATE_MACSEC_INGRESS_SC_TABLE_NAME string = "MACSEC_INGRESS_SC_TABLE"
const STATE_MACSEC_INGRESS_SA_TABLE_NAME string = "MACSEC_INGRESS_SA_TABLE"
const STATE_MACSEC_EGRESS_SC_TABLE_NAME string = "MACSEC_EGRESS_SC_TABLE"
const STATE_MACSEC_EGRESS_SA_TABLE_NAME string = "MACSEC_EGRESS_SA_TABLE"
const STATE_ASIC_TABLE string = "ASIC_TABLE"
const STATE_BUFFER_MAXIMUM_VALUE_TABLE string = "BUFFER_MAX_PARAM_TABLE"
const STATE_PERIPHERAL_TABLE string = "PERIPHERAL_TABLE"
const STATE_PORT_PERIPHERAL_TABLE string = "PORT_PERIPHERAL_TABLE"
const STATE_BUFFER_POOL_TABLE_NAME string = "BUFFER_POOL_TABLE"
const STATE_BUFFER_PROFILE_TABLE_NAME string = "BUFFER_PROFILE_TABLE"
const STATE_DHCPv6_COUNTER_TABLE_NAME string = "DHCPv6_COUNTER_TABLE"
const STATE_TUNNEL_DECAP_TABLE_NAME string = "TUNNEL_DECAP_TABLE"
const STATE_TUNNEL_DECAP_TERM_TABLE_NAME string = "TUNNEL_DECAP_TERM_TABLE"
const STATE_BFD_SESSION_TABLE_NAME string = "BFD_SESSION_TABLE"
const STATE_ROUTE_TABLE_NAME string = "ROUTE_TABLE"
const STATE_VNET_RT_TUNNEL_TABLE_NAME string = "VNET_ROUTE_TUNNEL_TABLE"
const STATE_ADVERTISE_NETWORK_TABLE_NAME string = "ADVERTISE_NETWORK_TABLE"
const STATE_FLOW_COUNTER_CAPABILITY_TABLE_NAME string = "FLOW_COUNTER_CAPABILITY_TABLE"
const STATE_VNET_MONITOR_TABLE_NAME string = "VNET_MONITOR_TABLE"
const STATE_TRANSCEIVER_INFO_TABLE_NAME string = "TRANSCEIVER_INFO"
const STATE_ASIC_SDK_HEALTH_EVENT_TABLE_NAME string = "ASIC_SDK_HEALTH_EVENT_TABLE"
const STATE_ACL_TABLE_TABLE_NAME string = "ACL_TABLE_TABLE"
const STATE_ACL_RULE_TABLE_NAME string = "ACL_RULE_TABLE"
const STATE_PAC_GLOBAL_OPER_TABLE string = "PAC_GLOBAL_OPER_TABLE"
const STATE_PAC_PORT_OPER_TABLE string = "PAC_PORT_OPER_TABLE"
const STATE_PAC_AUTHENTICATED_CLIENT_OPER_TABLE string = "PAC_AUTHENTICATED_CLIENT_OPER_TABLE"
const STATE_OPER_VLAN_TABLE_NAME string = "OPER_VLAN"
const STATE_OPER_VLAN_MEMBER_TABLE_NAME string = "OPER_VLAN_MEMBER"
const STATE_OPER_FDB_TABLE_NAME string = "OPER_FDB"
const STATE_OPER_PORT_TABLE_NAME string = "OPER_PORT"
const STATE_QUEUE_COUNTER_CAPABILITIES_NAME string = "QUEUE_COUNTER_CAPABILITIES"
const STATE_PORT_COUNTER_CAPABILITIES_NAME string = "PORT_COUNTER_CAPABILITIES"
const PROFILE_DELETE_TABLE string = "PROFILE_DELETE"
const IPV4_NAME string = "IPv4"
const IPV6_NAME string = "IPv6"
const FRONT_PANEL_PORT_PREFIX string = "Ethernet"
const PORTCHANNEL_PREFIX string = "PortChannel"
const VLAN_PREFIX string = "Vlan"
const SET_COMMAND string = "SET"
const DEL_COMMAND string = "DEL"

func _swig_getEMPTY_PREFIX() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_EMPTY_PREFIX_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var EMPTY_PREFIX string = _swig_getEMPTY_PREFIX()

const CFG_DTEL_TABLE_NAME string = "DTEL"
const CFG_DTEL_REPORT_SESSION_TABLE_NAME string = "DTEL_REPORT_SESSION"
const CFG_DTEL_INT_SESSION_TABLE_NAME string = "DTEL_INT_SESSION"
const CFG_DTEL_QUEUE_REPORT_TABLE_NAME string = "DTEL_QUEUE_REPORT"
const CFG_DTEL_EVENT_TABLE_NAME string = "DTEL_EVENT"
const CFG_FABRIC_MONITOR_DATA_TABLE_NAME string = "FABRIC_MONITOR"
const CFG_FABRIC_MONITOR_PORT_TABLE_NAME string = "FABRIC_PORT"
const APP_FABRIC_MONITOR_DATA_TABLE_NAME string = "FABRIC_MONITOR_TABLE"
const APP_FABRIC_MONITOR_PORT_TABLE_NAME string = "FABRIC_PORT_TABLE"
const EVENT_HISTORY_TABLE_NAME string = "EVENT"
const EVENT_CURRENT_ALARM_TABLE_NAME string = "ALARM"
const EVENT_STATS_TABLE_NAME string = "EVENT_STATS"
const EVENT_ALARM_STATS_TABLE_NAME string = "ALARM_STATS"
const BMP_STATE_BGP_NEIGHBOR_TABLE string = "BGP_NEIGHBOR_TABLE"
const BMP_STATE_BGP_RIB_IN_TABLE string = "BGP_RIB_IN_TABLE"
const BMP_STATE_BGP_RIB_OUT_TABLE string = "BGP_RIB_OUT_TABLE"

type SwigcptrRedisInstInfo uintptr

func (p SwigcptrRedisInstInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisInstInfo) SwigIsRedisInstInfo() {
}

func (arg1 SwigcptrRedisInstInfo) SetUnixSocketPath(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisInstInfo_unixSocketPath_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_48)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisInstInfo) GetUnixSocketPath() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisInstInfo_unixSocketPath_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisInstInfo) SetHostname(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisInstInfo_hostname_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_50)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisInstInfo) GetHostname() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisInstInfo_hostname_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisInstInfo) SetPort(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisInstInfo_port_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRedisInstInfo) GetPort() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RedisInstInfo_port_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRedisInstInfo() (_swig_ret RedisInstInfo) {
	var swig_r RedisInstInfo
	swig_r = (RedisInstInfo)(SwigcptrRedisInstInfo(C._wrap_new_RedisInstInfo_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteRedisInstInfo(arg1 RedisInstInfo) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisInstInfo_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type RedisInstInfo interface {
	Swigcptr() uintptr
	SwigIsRedisInstInfo()
	SetUnixSocketPath(arg2 string)
	GetUnixSocketPath() (_swig_ret string)
	SetHostname(arg2 string)
	GetHostname() (_swig_ret string)
	SetPort(arg2 int)
	GetPort() (_swig_ret int)
}

type SwigcptrSonicDBInfo uintptr

func (p SwigcptrSonicDBInfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSonicDBInfo) SwigIsSonicDBInfo() {
}

func (arg1 SwigcptrSonicDBInfo) SetInstName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicDBInfo_instName_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_52)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicDBInfo) GetInstName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBInfo_instName_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSonicDBInfo) SetDbId(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicDBInfo_dbId_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSonicDBInfo) GetDbId() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SonicDBInfo_dbId_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSonicDBInfo) SetSeparator(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicDBInfo_separator_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicDBInfo) GetSeparator() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBInfo_separator_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewSonicDBInfo() (_swig_ret SonicDBInfo) {
	var swig_r SonicDBInfo
	swig_r = (SonicDBInfo)(SwigcptrSonicDBInfo(C._wrap_new_SonicDBInfo_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteSonicDBInfo(arg1 SonicDBInfo) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SonicDBInfo_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SonicDBInfo interface {
	Swigcptr() uintptr
	SwigIsSonicDBInfo()
	SetInstName(arg2 string)
	GetInstName() (_swig_ret string)
	SetDbId(arg2 int)
	GetDbId() (_swig_ret int)
	SetSeparator(arg2 string)
	GetSeparator() (_swig_ret string)
}

type SwigcptrSonicDBKey uintptr

func (p SwigcptrSonicDBKey) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSonicDBKey) SwigIsSonicDBKey() {
}

func (arg1 SwigcptrSonicDBKey) SetContainerName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicDBKey_containerName_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicDBKey) GetContainerName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBKey_containerName_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSonicDBKey) SetNetns(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicDBKey_netns_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicDBKey) GetNetns() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBKey_netns_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewSonicDBKey__SWIG_0() (_swig_ret SonicDBKey) {
	var swig_r SonicDBKey
	swig_r = (SonicDBKey)(SwigcptrSonicDBKey(C._wrap_new_SonicDBKey__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewSonicDBKey__SWIG_1(arg1 string) (_swig_ret SonicDBKey) {
	var swig_r SonicDBKey
	_swig_i_0 := arg1
	swig_r = (SonicDBKey)(SwigcptrSonicDBKey(C._wrap_new_SonicDBKey__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_60)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewSonicDBKey(a ...interface{}) SonicDBKey {
	argc := len(a)
	if argc == 0 {
		return NewSonicDBKey__SWIG_0()
	}
	if argc == 1 {
		return NewSonicDBKey__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicDBKey) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SonicDBKey_isEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSonicDBKey) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBKey_toString_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteSonicDBKey(arg1 SonicDBKey) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SonicDBKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SonicDBKey interface {
	Swigcptr() uintptr
	SwigIsSonicDBKey()
	SetContainerName(arg2 string)
	GetContainerName() (_swig_ret string)
	SetNetns(arg2 string)
	GetNetns() (_swig_ret string)
	IsEmpty() (_swig_ret bool)
	ToString() (_swig_ret string)
}

type SwigcptrSonicDBKeyHash uintptr

func (p SwigcptrSonicDBKeyHash) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSonicDBKeyHash) SwigIsSonicDBKeyHash() {
}

func NewSonicDBKeyHash() (_swig_ret SonicDBKeyHash) {
	var swig_r SonicDBKeyHash
	swig_r = (SonicDBKeyHash)(SwigcptrSonicDBKeyHash(C._wrap_new_SonicDBKeyHash_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteSonicDBKeyHash(arg1 SonicDBKeyHash) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SonicDBKeyHash_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SonicDBKeyHash interface {
	Swigcptr() uintptr
	SwigIsSonicDBKeyHash()
}

type SwigcptrSonicDBConfig uintptr

func (p SwigcptrSonicDBConfig) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSonicDBConfig) SwigIsSonicDBConfig() {
}

func _swig_getSonicDBConfig_SonicDBConfig_DEFAULT_SONIC_DB_CONFIG_FILE_SonicDBConfig() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SonicDBConfig_DEFAULT_SONIC_DB_CONFIG_FILE_SonicDBConfig_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var SonicDBConfigDEFAULT_SONIC_DB_CONFIG_FILE string = _swig_getSonicDBConfig_SonicDBConfig_DEFAULT_SONIC_DB_CONFIG_FILE_SonicDBConfig()

func _swig_getSonicDBConfig_SonicDBConfig_DEFAULT_SONIC_DB_GLOBAL_CONFIG_FILE_SonicDBConfig() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SonicDBConfig_DEFAULT_SONIC_DB_GLOBAL_CONFIG_FILE_SonicDBConfig_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var SonicDBConfigDEFAULT_SONIC_DB_GLOBAL_CONFIG_FILE string = _swig_getSonicDBConfig_SonicDBConfig_DEFAULT_SONIC_DB_GLOBAL_CONFIG_FILE_SonicDBConfig()

func SonicDBConfigInitialize__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SonicDBConfig_initialize__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_64)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SonicDBConfigInitialize__SWIG_1() {
	C._wrap_SonicDBConfig_initialize__SWIG_1_swsscommon_2432462d295473d6()
}

func SonicDBConfigInitialize(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SonicDBConfigInitialize__SWIG_1()
		return
	}
	if argc == 1 {
		SonicDBConfigInitialize__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigInitializeGlobalConfig__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SonicDBConfig_initializeGlobalConfig__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_65)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SonicDBConfigInitializeGlobalConfig__SWIG_1() {
	C._wrap_SonicDBConfig_initializeGlobalConfig__SWIG_1_swsscommon_2432462d295473d6()
}

func SonicDBConfigInitializeGlobalConfig(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		SonicDBConfigInitializeGlobalConfig__SWIG_1()
		return
	}
	if argc == 1 {
		SonicDBConfigInitializeGlobalConfig__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigReset() {
	C._wrap_SonicDBConfig_reset_swsscommon_2432462d295473d6()
}

func SonicDBConfigValidateNamespace(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SonicDBConfig_validateNamespace_swsscommon_2432462d295473d6(*(*C.swig_type_66)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func SonicDBConfigGetDbInst__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_SonicDBConfig_getDbInst__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_68)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_69)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_70)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbInst__SWIG_1(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicDBConfig_getDbInst__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_72)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_73)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbInst__SWIG_2(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBConfig_getDbInst__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_75)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbInst__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_SonicDBConfig_getDbInst__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_77)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbInst(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return SonicDBConfigGetDbInst__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbInst__SWIG_1(a[0].(string), a[1].(string))
	}
check_2:
	if argc == 2 {
		return SonicDBConfigGetDbInst__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
	if argc == 3 {
		return SonicDBConfigGetDbInst__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetDbId__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SonicDBConfig_getDbId__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_78)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_79)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_80)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func SonicDBConfigGetDbId__SWIG_1(arg1 string, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SonicDBConfig_getDbId__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_81)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_82)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SonicDBConfigGetDbId__SWIG_2(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SonicDBConfig_getDbId__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_83)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetDbId__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_SonicDBConfig_getDbId__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_84)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetDbId(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return SonicDBConfigGetDbId__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbId__SWIG_1(a[0].(string), a[1].(string))
	}
check_2:
	if argc == 2 {
		return SonicDBConfigGetDbId__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
	if argc == 3 {
		return SonicDBConfigGetDbId__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetSeparator__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_86)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_87)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_88)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_1(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_90)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_91)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_2(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_93)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_95)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_4(arg1 int, arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_4_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_97)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_98)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_5(arg1 int, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_5_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_100)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_6(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_6_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_7(arg1 int, arg2 SonicDBKey) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_7_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator__SWIG_8(arg1 DBConnector) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := getSwigcptr(arg1)
	swig_r_p := C._wrap_SonicDBConfig_getSeparator__SWIG_8_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetSeparator(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return SonicDBConfigGetSeparator__SWIG_2(a[0].(string))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(SwigcptrDBConnector); !ok {
			goto check_2
		}
		return SonicDBConfigGetSeparator__SWIG_8(a[0].(DBConnector))
	}
check_2:
	if argc == 1 {
		return SonicDBConfigGetSeparator__SWIG_6(a[0].(int))
	}
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_4
		}
		if _, ok := a[1].(string); !ok {
			goto check_4
		}
		return SonicDBConfigGetSeparator__SWIG_1(a[0].(string), a[1].(string))
	}
check_4:
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_5
		}
		if _, ok := a[1].(SonicDBKey); !ok {
			goto check_5
		}
		return SonicDBConfigGetSeparator__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
check_5:
	if argc == 2 {
		if _, ok := a[1].(SonicDBKey); !ok {
			goto check_6
		}
		return SonicDBConfigGetSeparator__SWIG_7(a[0].(int), a[1].(SonicDBKey))
	}
check_6:
	if argc == 2 {
		return SonicDBConfigGetSeparator__SWIG_5(a[0].(int), a[1].(string))
	}
	if argc == 3 {
		if _, ok := a[0].(string); !ok {
			goto check_8
		}
		return SonicDBConfigGetSeparator__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
check_8:
	if argc == 3 {
		return SonicDBConfigGetSeparator__SWIG_4(a[0].(int), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetDbSock__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_SonicDBConfig_getDbSock__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_105)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_106)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_107)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbSock__SWIG_1(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicDBConfig_getDbSock__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_109)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_110)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbSock__SWIG_2(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBConfig_getDbSock__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_112)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbSock__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_SonicDBConfig_getDbSock__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_114)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbSock(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return SonicDBConfigGetDbSock__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbSock__SWIG_1(a[0].(string), a[1].(string))
	}
check_2:
	if argc == 2 {
		return SonicDBConfigGetDbSock__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
	if argc == 3 {
		return SonicDBConfigGetDbSock__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetDbHostname__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_SonicDBConfig_getDbHostname__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_116)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_117)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_118)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbHostname__SWIG_1(arg1 string, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicDBConfig_getDbHostname__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_120)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_121)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbHostname__SWIG_2(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicDBConfig_getDbHostname__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_123)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbHostname__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r_p := C._wrap_SonicDBConfig_getDbHostname__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_125)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func SonicDBConfigGetDbHostname(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return SonicDBConfigGetDbHostname__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbHostname__SWIG_1(a[0].(string), a[1].(string))
	}
check_2:
	if argc == 2 {
		return SonicDBConfigGetDbHostname__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
	if argc == 3 {
		return SonicDBConfigGetDbHostname__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetDbPort__SWIG_0(arg1 string, arg2 string, arg3 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_SonicDBConfig_getDbPort__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_126)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_127)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_128)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func SonicDBConfigGetDbPort__SWIG_1(arg1 string, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SonicDBConfig_getDbPort__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_129)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_130)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SonicDBConfigGetDbPort__SWIG_2(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SonicDBConfig_getDbPort__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_131)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetDbPort__SWIG_3(arg1 string, arg2 SonicDBKey) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_SonicDBConfig_getDbPort__SWIG_3_swsscommon_2432462d295473d6(*(*C.swig_type_132)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetDbPort(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return SonicDBConfigGetDbPort__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbPort__SWIG_1(a[0].(string), a[1].(string))
	}
check_2:
	if argc == 2 {
		return SonicDBConfigGetDbPort__SWIG_3(a[0].(string), a[1].(SonicDBKey))
	}
	if argc == 3 {
		return SonicDBConfigGetDbPort__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigGetNamespaces() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicDBConfig_getNamespaces_swsscommon_2432462d295473d6()))
	return swig_r
}

func SonicDBConfigGetDbKeys() (_swig_ret VectorSonicDbKey) {
	var swig_r VectorSonicDbKey
	swig_r = (VectorSonicDbKey)(SwigcptrVectorSonicDbKey(C._wrap_SonicDBConfig_getDbKeys_swsscommon_2432462d295473d6()))
	return swig_r
}

func SonicDBConfigGetDbList__SWIG_0(arg1 string, arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicDBConfig_getDbList__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_133)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_134)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SonicDBConfigGetDbList__SWIG_1(arg1 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicDBConfig_getDbList__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_135)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetDbList__SWIG_2() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicDBConfig_getDbList__SWIG_2_swsscommon_2432462d295473d6()))
	return swig_r
}

func SonicDBConfigGetDbList__SWIG_3(arg1 SonicDBKey) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicDBConfig_getDbList__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SonicDBConfigGetDbList(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 0 {
		return SonicDBConfigGetDbList__SWIG_2()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetDbList__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return SonicDBConfigGetDbList__SWIG_3(a[0].(SonicDBKey))
	}
	if argc == 2 {
		return SonicDBConfigGetDbList__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func SonicDBConfigIsInit() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SonicDBConfig_isInit_swsscommon_2432462d295473d6())
	return swig_r
}

func SonicDBConfigIsGlobalInit() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SonicDBConfig_isGlobalInit_swsscommon_2432462d295473d6())
	return swig_r
}

func SonicDBConfigGetInstanceList__SWIG_0(arg1 string, arg2 string) (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_SonicDBConfig_getInstanceList__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_136)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_137)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func SonicDBConfigGetInstanceList__SWIG_1(arg1 string) (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	_swig_i_0 := arg1
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_SonicDBConfig_getInstanceList__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_138)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func SonicDBConfigGetInstanceList__SWIG_2() (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_SonicDBConfig_getInstanceList__SWIG_2_swsscommon_2432462d295473d6()))
	return swig_r
}

func SonicDBConfigGetInstanceList__SWIG_3(arg1 SonicDBKey) (_swig_ret GetInstanceListResult) {
	var swig_r GetInstanceListResult
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (GetInstanceListResult)(SwigcptrGetInstanceListResult(C._wrap_SonicDBConfig_getInstanceList__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func SonicDBConfigGetInstanceList(a ...interface{}) GetInstanceListResult {
	argc := len(a)
	if argc == 0 {
		return SonicDBConfigGetInstanceList__SWIG_2()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return SonicDBConfigGetInstanceList__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return SonicDBConfigGetInstanceList__SWIG_3(a[0].(SonicDBKey))
	}
	if argc == 2 {
		return SonicDBConfigGetInstanceList__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func NewSonicDBConfig() (_swig_ret SonicDBConfig) {
	var swig_r SonicDBConfig
	swig_r = (SonicDBConfig)(SwigcptrSonicDBConfig(C._wrap_new_SonicDBConfig_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteSonicDBConfig(arg1 SonicDBConfig) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SonicDBConfig_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SonicDBConfig interface {
	Swigcptr() uintptr
	SwigIsSonicDBConfig()
}

type SwigcptrRedisContext uintptr

func (p SwigcptrRedisContext) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisContext) SwigIsRedisContext() {
}

func _swig_getRedisContext_RedisContext_DEFAULT_UNIXSOCKET_RedisContext() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_RedisContext_DEFAULT_UNIXSOCKET_RedisContext_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var RedisContextDEFAULT_UNIXSOCKET string = _swig_getRedisContext_RedisContext_DEFAULT_UNIXSOCKET_RedisContext()

func NewRedisContext(arg1 RedisContext) (_swig_ret RedisContext) {
	var swig_r RedisContext
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RedisContext)(SwigcptrRedisContext(C._wrap_new_RedisContext_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteRedisContext(arg1 RedisContext) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisContext_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisContext) GetContext() (_swig_ret RedisContext) {
	var swig_r RedisContext
	_swig_i_0 := arg1
	swig_r = (RedisContext)(SwigcptrRedisContext(C._wrap_RedisContext_getContext_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisContext) SetClientName(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisContext_setClientName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_140)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisContext) GetClientName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisContext_getClientName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type RedisContext interface {
	Swigcptr() uintptr
	SwigIsRedisContext()
	GetContext() (_swig_ret RedisContext)
	SetClientName(arg2 string)
	GetClientName() (_swig_ret string)
}

type SwigcptrDBConnector uintptr

func (p SwigcptrDBConnector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDBConnector) SwigIsDBConnector() {
}

func _swig_getDBConnector_DBConnector_DEFAULT_UNIXSOCKET_DBConnector() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DBConnector_DEFAULT_UNIXSOCKET_DBConnector_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var DBConnectorDEFAULT_UNIXSOCKET string = _swig_getDBConnector_DBConnector_DEFAULT_UNIXSOCKET_DBConnector()

func NewDBConnector__SWIG_0(arg1 DBConnector) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewDBConnector__SWIG_1(arg1 int, arg2 RedisContext) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewDBConnector__SWIG_2(arg1 int, arg2 string, arg3 int, arg4 uint) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_2_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_143)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewDBConnector__SWIG_3(arg1 int, arg2 string, arg3 uint) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_3_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_144)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewDBConnector__SWIG_4(arg1 string, arg2 uint, arg3 bool) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_4_swsscommon_2432462d295473d6(*(*C.swig_type_145)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewDBConnector__SWIG_5(arg1 string, arg2 uint) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_5_swsscommon_2432462d295473d6(*(*C.swig_type_146)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewDBConnector__SWIG_6(arg1 string, arg2 uint, arg3 bool, arg4 string) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_6_swsscommon_2432462d295473d6(*(*C.swig_type_147)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2), *(*C.swig_type_148)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func NewDBConnector__SWIG_7(arg1 string, arg2 uint, arg3 bool, arg4 SonicDBKey) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_new_DBConnector__SWIG_7_swsscommon_2432462d295473d6(*(*C.swig_type_149)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewDBConnector(a ...interface{}) DBConnector {
	argc := len(a)
	if argc == 1 {
		return NewDBConnector__SWIG_0(a[0].(DBConnector))
	}
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		if _, ok := a[1].(uint); !ok {
			goto check_2
		}
		return NewDBConnector__SWIG_5(a[0].(string), a[1].(uint))
	}
check_2:
	if argc == 2 {
		return NewDBConnector__SWIG_1(a[0].(int), a[1].(RedisContext))
	}
	if argc == 3 {
		if _, ok := a[0].(string); !ok {
			goto check_4
		}
		if _, ok := a[1].(uint); !ok {
			goto check_4
		}
		if _, ok := a[2].(bool); !ok {
			goto check_4
		}
		return NewDBConnector__SWIG_4(a[0].(string), a[1].(uint), a[2].(bool))
	}
check_4:
	if argc == 3 {
		return NewDBConnector__SWIG_3(a[0].(int), a[1].(string), a[2].(uint))
	}
	if argc == 4 {
		if _, ok := a[0].(string); !ok {
			goto check_6
		}
		if _, ok := a[1].(uint); !ok {
			goto check_6
		}
		if _, ok := a[2].(bool); !ok {
			goto check_6
		}
		if _, ok := a[3].(string); !ok {
			goto check_6
		}
		return NewDBConnector__SWIG_6(a[0].(string), a[1].(uint), a[2].(bool), a[3].(string))
	}
check_6:
	if argc == 4 {
		if _, ok := a[0].(string); !ok {
			goto check_7
		}
		if _, ok := a[1].(uint); !ok {
			goto check_7
		}
		if _, ok := a[2].(bool); !ok {
			goto check_7
		}
		if _, ok := a[3].(SonicDBKey); !ok {
			goto check_7
		}
		return NewDBConnector__SWIG_7(a[0].(string), a[1].(uint), a[2].(bool), a[3].(SonicDBKey))
	}
check_7:
	if argc == 4 {
		return NewDBConnector__SWIG_2(a[0].(int), a[1].(string), a[2].(int), a[3].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBConnector) GetDbId() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DBConnector_getDbId_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBConnector) GetDbName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DBConnector_getDbName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrDBConnector) GetNamespace() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DBConnector_getNamespace_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrDBConnector) GetDBKey() (_swig_ret SonicDBKey) {
	var swig_r SonicDBKey
	_swig_i_0 := arg1
	swig_r = (SonicDBKey)(SwigcptrSonicDBKey(C._wrap_DBConnector_getDBKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DBConnectorXselect(arg1 DBConnector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DBConnector_Xselect_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDBConnector) NewConnector(arg2 uint) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_DBConnector_newConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDBConnector) Pubsub() (_swig_ret PubSub) {
	var swig_r PubSub
	_swig_i_0 := arg1
	swig_r = (PubSub)(SwigcptrPubSub(C._wrap_DBConnector_pubsub_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBConnector) Delete__SWIG_0(arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_DBConnector_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_153)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Exists(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_DBConnector_exists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_154)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Hdel__SWIG_0(arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_DBConnector_hdel__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_156)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_157)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Hdel__SWIG_1(arg2 string, arg3 VectorString) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int64)(C._wrap_DBConnector_hdel__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_159)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrDBConnector) Hdel(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		return p.Hdel__SWIG_0(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return p.Hdel__SWIG_1(a[0].(string), a[1].(VectorString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBConnector) Delete__SWIG_1(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DBConnector_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrDBConnector) Delete(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return p.Delete__SWIG_0(a[0].(string))
	}
check_1:
	if argc == 1 {
		p.Delete__SWIG_1(a[0].(VectorString))
		return 0
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBConnector) Keys(arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_DBConnector_keys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_160)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Scan__SWIG_0(arg2 int, arg3 string, arg4 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_DBConnector_scan__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_161)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Scan__SWIG_1(arg2 int, arg3 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_DBConnector_scan__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_162)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Scan__SWIG_2(arg2 int) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_DBConnector_scan__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDBConnector) Scan__SWIG_3() (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_DBConnector_scan__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDBConnector) Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ {
	argc := len(a)
	if argc == 0 {
		return p.Scan__SWIG_3()
	}
	if argc == 1 {
		return p.Scan__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return p.Scan__SWIG_1(a[0].(int), a[1].(string))
	}
	if argc == 3 {
		return p.Scan__SWIG_0(a[0].(int), a[1].(string), a[2].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBConnector) Set__SWIG_0(arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DBConnector_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_163)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_164)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Set__SWIG_1(arg2 string, arg3 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DBConnector_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_165)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrDBConnector) Set(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		return p.Set__SWIG_0(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return p.Set__SWIG_1(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBConnector) Hset(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DBConnector_hset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_166)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_167)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_168)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrDBConnector) Hmset(arg2 Std_unordered_map_Sl_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_DBConnector_hmset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrDBConnector) Get(arg2 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_DBConnector_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_169)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Hget(arg2 string, arg3 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_DBConnector_hget_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_170)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_171)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Hexists(arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DBConnector_hexists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_173)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Incr(arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_DBConnector_incr_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_175)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Decr(arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_DBConnector_decr_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_177)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Rpush(arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_DBConnector_rpush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_179)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_180)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Blpop(arg2 string, arg3 int) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_DBConnector_blpop_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_181)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Subscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBConnector_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_182)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBConnector) Psubscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBConnector_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_183)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBConnector) Punsubscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBConnector_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_184)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBConnector) Publish(arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_DBConnector_publish_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_186)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_187)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBConnector) Config_set(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DBConnector_config_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_188)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_189)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrDBConnector) Flushdb() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_DBConnector_flushdb_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDBConnector) Getall() (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	_swig_i_0 := arg1
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_DBConnector_getall_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrDBConnector) Hgetall(arg2 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_DBConnector_hgetall_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_190)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteDBConnector(arg1 DBConnector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DBConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrDBConnector) GetContext() (_swig_ret RedisContext) {
	var swig_r RedisContext
	swig_r = (RedisContext)(SwigcptrRedisContext(C._wrap_DBConnector_getContext_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrDBConnector) SetClientName(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_DBConnector_setClientName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_191)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrDBConnector) GetClientName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DBConnector_getClientName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrDBConnector) SwigIsRedisContext() {
}

func (p SwigcptrDBConnector) SwigGetRedisContext() RedisContext {
	return SwigcptrRedisContext(getSwigcptr(p))
}

type DBConnector interface {
	Swigcptr() uintptr
	SwigIsDBConnector()
	GetDbId() (_swig_ret int)
	GetDbName() (_swig_ret string)
	GetNamespace() (_swig_ret string)
	GetDBKey() (_swig_ret SonicDBKey)
	NewConnector(arg2 uint) (_swig_ret DBConnector)
	Pubsub() (_swig_ret PubSub)
	Exists(arg2 string) (_swig_ret bool)
	Hdel(a ...interface{}) int64
	Delete(a ...interface{}) interface{}
	Keys(arg2 string) (_swig_ret VectorString)
	Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	Set(a ...interface{}) bool
	Hset(arg2 string, arg3 string, arg4 string)
	Hmset(arg2 Std_unordered_map_Sl_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_)
	Get(arg2 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_)
	Hget(arg2 string, arg3 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_)
	Hexists(arg2 string, arg3 string) (_swig_ret bool)
	Incr(arg2 string) (_swig_ret int64)
	Decr(arg2 string) (_swig_ret int64)
	Rpush(arg2 string, arg3 string) (_swig_ret int64)
	Blpop(arg2 string, arg3 int) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_)
	Subscribe(arg2 string)
	Psubscribe(arg2 string)
	Punsubscribe(arg2 string)
	Publish(arg2 string, arg3 string) (_swig_ret int64)
	Config_set(arg2 string, arg3 string)
	Flushdb() (_swig_ret bool)
	Getall() (_swig_ret GetConfigResult)
	Hgetall(arg2 string) (_swig_ret FieldValueMap)
	GetContext() (_swig_ret RedisContext)
	SetClientName(arg1 string)
	GetClientName() (_swig_ret string)
	SwigIsRedisContext()
	SwigGetRedisContext() RedisContext
}

type SwigcptrSonicV2Connector_Native uintptr

func (p SwigcptrSonicV2Connector_Native) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSonicV2Connector_Native) SwigIsSonicV2Connector_Native() {
}

func NewSonicV2Connector_Native__SWIG_0(arg1 bool, arg2 string) (_swig_ret SonicV2Connector_Native) {
	var swig_r SonicV2Connector_Native
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SonicV2Connector_Native)(SwigcptrSonicV2Connector_Native(C._wrap_new_SonicV2Connector_Native__SWIG_0_swsscommon_2432462d295473d6(C._Bool(_swig_i_0), *(*C.swig_type_193)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewSonicV2Connector_Native__SWIG_1(arg1 bool) (_swig_ret SonicV2Connector_Native) {
	var swig_r SonicV2Connector_Native
	_swig_i_0 := arg1
	swig_r = (SonicV2Connector_Native)(SwigcptrSonicV2Connector_Native(C._wrap_new_SonicV2Connector_Native__SWIG_1_swsscommon_2432462d295473d6(C._Bool(_swig_i_0))))
	return swig_r
}

func NewSonicV2Connector_Native__SWIG_2() (_swig_ret SonicV2Connector_Native) {
	var swig_r SonicV2Connector_Native
	swig_r = (SonicV2Connector_Native)(SwigcptrSonicV2Connector_Native(C._wrap_new_SonicV2Connector_Native__SWIG_2_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewSonicV2Connector_Native(a ...interface{}) SonicV2Connector_Native {
	argc := len(a)
	if argc == 0 {
		return NewSonicV2Connector_Native__SWIG_2()
	}
	if argc == 1 {
		return NewSonicV2Connector_Native__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return NewSonicV2Connector_Native__SWIG_0(a[0].(bool), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) GetNamespace() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SonicV2Connector_Native_getNamespace_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSonicV2Connector_Native) Connect__SWIG_0(arg2 string, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SonicV2Connector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_195)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicV2Connector_Native) Connect__SWIG_1(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicV2Connector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_196)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrSonicV2Connector_Native) Connect(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Connect__SWIG_1(a[0].(string))
		return
	}
	if argc == 2 {
		p.Connect__SWIG_0(a[0].(string), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Close__SWIG_0(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SonicV2Connector_Native_close__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_197)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSonicV2Connector_Native) Close__SWIG_1() {
	_swig_i_0 := arg1
	C._wrap_SonicV2Connector_Native_close__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrSonicV2Connector_Native) Close(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Close__SWIG_1()
		return
	}
	if argc == 1 {
		p.Close__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_db_list() (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicV2Connector_Native_get_db_list_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_dbid(arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_SonicV2Connector_Native_get_dbid_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_198)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_db_separator(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_SonicV2Connector_Native_get_db_separator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_200)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_redis_client(arg2 string) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_SonicV2Connector_Native_get_redis_client_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_201)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Publish(arg2 string, arg3 string, arg4 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_SonicV2Connector_Native_publish_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_203)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_204)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_205)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Exists(arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_SonicV2Connector_Native_exists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_206)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_207)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Keys__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicV2Connector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_208)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_209)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Keys__SWIG_1(arg2 string, arg3 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicV2Connector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_210)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_211)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Keys__SWIG_2(arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_SonicV2Connector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_212)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Keys__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return p.Keys__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Keys__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Scan__SWIG_0(arg2 string, arg3 int, arg4 string, arg5 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_SonicV2Connector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_213)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), *(*C.swig_type_214)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Scan__SWIG_1(arg2 string, arg3 int, arg4 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_SonicV2Connector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_215)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), *(*C.swig_type_216)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Scan__SWIG_2(arg2 string, arg3 int) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_SonicV2Connector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_217)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Scan__SWIG_3(arg2 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_SonicV2Connector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_218)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ {
	argc := len(a)
	if argc == 1 {
		return p.Scan__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.Scan__SWIG_2(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return p.Scan__SWIG_1(a[0].(string), a[1].(int), a[2].(string))
	}
	if argc == 4 {
		return p.Scan__SWIG_0(a[0].(string), a[1].(int), a[2].(string), a[3].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Get__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 bool) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_SonicV2Connector_Native_get__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_219)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_220)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_221)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Get__SWIG_1(arg2 string, arg3 string, arg4 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_SonicV2Connector_Native_get__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_222)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_223)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_224)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_ {
	argc := len(a)
	if argc == 3 {
		return p.Get__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Get__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Hexists(arg2 string, arg3 string, arg4 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_SonicV2Connector_Native_hexists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_225)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_226)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_227)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_all__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_SonicV2Connector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_228)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_229)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Get_all__SWIG_1(arg2 string, arg3 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_SonicV2Connector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_230)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_231)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Get_all(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 2 {
		return p.Get_all__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Get_all__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Hmset(arg2 string, arg3 string, arg4 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_SonicV2Connector_Native_hmset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_232)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_233)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrSonicV2Connector_Native) Set__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string, arg6 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int64)(C._wrap_SonicV2Connector_Native_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_235)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_236)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_237)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_238)(unsafe.Pointer(&_swig_i_4)), C._Bool(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Set__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int64)(C._wrap_SonicV2Connector_Native_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_240)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_241)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_242)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_243)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Set(a ...interface{}) int64 {
	argc := len(a)
	if argc == 4 {
		return p.Set__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.Set__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Delete__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_SonicV2Connector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_245)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_246)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrSonicV2Connector_Native) Delete__SWIG_1(arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_SonicV2Connector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_248)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_249)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrSonicV2Connector_Native) Delete(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return p.Delete__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSonicV2Connector_Native) Delete_all_by_pattern(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_SonicV2Connector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_250)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_251)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteSonicV2Connector_Native(arg1 SonicV2Connector_Native) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SonicV2Connector_Native_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SonicV2Connector_Native interface {
	Swigcptr() uintptr
	SwigIsSonicV2Connector_Native()
	GetNamespace() (_swig_ret string)
	Connect(a ...interface{})
	Close(a ...interface{})
	Get_db_list() (_swig_ret VectorString)
	Get_dbid(arg2 string) (_swig_ret int)
	Get_db_separator(arg2 string) (_swig_ret string)
	Get_redis_client(arg2 string) (_swig_ret DBConnector)
	Publish(arg2 string, arg3 string, arg4 string) (_swig_ret int64)
	Exists(arg2 string, arg3 string) (_swig_ret bool)
	Keys(a ...interface{}) VectorString
	Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_
	Hexists(arg2 string, arg3 string, arg4 string) (_swig_ret bool)
	Get_all(a ...interface{}) FieldValueMap
	Hmset(arg2 string, arg3 string, arg4 FieldValueMap)
	Set(a ...interface{}) int64
	Delete(a ...interface{}) int64
	Delete_all_by_pattern(arg2 string, arg3 string)
}

type SwigcptrPubSub uintptr

func (p SwigcptrPubSub) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPubSub) SwigIsPubSub() {
}

func NewPubSub(arg1 DBConnector) (_swig_ret PubSub) {
	var swig_r PubSub
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (PubSub)(SwigcptrPubSub(C._wrap_new_PubSub_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPubSub) Get_message__SWIG_0(arg2 float64, arg3 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_PubSub_get_message__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C._Bool(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrPubSub) Get_message__SWIG_1(arg2 float64) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_PubSub_get_message__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrPubSub) Get_message__SWIG_2() (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_PubSub_get_message__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrPubSub) Get_message(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 0 {
		return p.Get_message__SWIG_2()
	}
	if argc == 1 {
		return p.Get_message__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Get_message__SWIG_0(a[0].(float64), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPubSub) Listen_message__SWIG_0(arg2 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_PubSub_listen_message__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrPubSub) Listen_message__SWIG_1() (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_PubSub_listen_message__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrPubSub) Listen_message(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 0 {
		return p.Listen_message__SWIG_1()
	}
	if argc == 1 {
		return p.Listen_message__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPubSub) Psubscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PubSub_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_252)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPubSub) Punsubscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PubSub_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_253)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPubSub) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_PubSub_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPubSub) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PubSub_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPubSub) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_PubSub_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeletePubSub(arg1 PubSub) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PubSub_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type PubSub interface {
	Swigcptr() uintptr
	SwigIsPubSub()
	Get_message(a ...interface{}) FieldValueMap
	Listen_message(a ...interface{}) FieldValueMap
	Psubscribe(arg2 string)
	Punsubscribe(arg2 string)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
}

func GetDELETED_KEY_SEPARATOR() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DELETED_KEY_SEPARATOR_get_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type SwigcptrProfileProvider uintptr

func (p SwigcptrProfileProvider) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrProfileProvider) SwigIsProfileProvider() {
}

func ProfileProviderInstance() (_swig_ret ProfileProvider) {
	var swig_r ProfileProvider
	swig_r = (ProfileProvider)(SwigcptrProfileProvider(C._wrap_ProfileProvider_instance_swsscommon_2432462d295473d6()))
	return swig_r
}

func (arg1 SwigcptrProfileProvider) AppendConfigs(arg2 string, arg3 string, arg4 FieldValuePairs, arg5 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (bool)(C._wrap_ProfileProvider_appendConfigs_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_256)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_257)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) GetConfig(arg2 string, arg3 string, arg4 string, arg5 DBConnector) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_ProfileProvider_getConfig_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_258)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_259)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_260)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) GetConfigs__SWIG_0(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ProfileProvider_getConfigs__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_261)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_262)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) GetConfigs__SWIG_1(arg2 DBConnector) (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_ProfileProvider_getConfigs__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrProfileProvider) GetConfigs(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		return p.GetConfigs__SWIG_1(a[0].(DBConnector))
	}
	if argc == 3 {
		return p.GetConfigs__SWIG_0(a[0].(string), a[1].(string), a[2].(DBConnector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProfileProvider) GetKeys(arg2 string, arg3 DBConnector) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ProfileProvider_getKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_263)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) TryRevertItem(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_ProfileProvider_tryRevertItem_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_264)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_265)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) TryDeleteItem(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_ProfileProvider_tryDeleteItem_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_266)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_267)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrProfileProvider) GetDeletedKeyName(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r_p := C._wrap_ProfileProvider_getDeletedKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_269)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_270)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type ProfileProvider interface {
	Swigcptr() uintptr
	SwigIsProfileProvider()
	AppendConfigs(arg2 string, arg3 string, arg4 FieldValuePairs, arg5 DBConnector) (_swig_ret bool)
	GetConfig(arg2 string, arg3 string, arg4 string, arg5 DBConnector) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_)
	GetConfigs(a ...interface{}) interface{}
	GetKeys(arg2 string, arg3 DBConnector) (_swig_ret VectorString)
	TryRevertItem(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret bool)
	TryDeleteItem(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret bool)
	GetDeletedKeyName(arg2 string, arg3 string, arg4 DBConnector) (_swig_ret string)
}

type SwigcptrSelectable uintptr

func (p SwigcptrSelectable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSelectable) SwigIsSelectable() {
}

func DeleteSelectable(arg1 Selectable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Selectable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSelectable) GetFd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Selectable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSelectable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_Selectable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSelectable) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Selectable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSelectable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Selectable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSelectable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Selectable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSelectable) UpdateAfterRead() {
	_swig_i_0 := arg1
	C._wrap_Selectable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSelectable) GetPri() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Selectable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

type Selectable interface {
	Swigcptr() uintptr
	SwigIsSelectable()
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	GetPri() (_swig_ret int)
}

type SwigcptrSelect uintptr

func (p SwigcptrSelect) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSelect) SwigIsSelect() {
}

func NewSelect() (_swig_ret Select) {
	var swig_r Select
	swig_r = (Select)(SwigcptrSelect(C._wrap_new_Select_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteSelect(arg1 Select) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Select_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSelect) AddSelectable(arg2 Selectable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Select_addSelectable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSelect) RemoveSelectable(arg2 Selectable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Select_removeSelectable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSelect) AddSelectables(arg2 Std_vector_Sl_swss_Selectable_Sm__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Select_addSelectables_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func _swig_getSelect_OBJECT_Select() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_OBJECT_Select_swsscommon_2432462d295473d6())
	return swig_r
}

var SelectOBJECT int = _swig_getSelect_OBJECT_Select()

func _swig_getSelect_ERROR_Select() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ERROR_Select_swsscommon_2432462d295473d6())
	return swig_r
}

var SelectERROR int = _swig_getSelect_ERROR_Select()

func _swig_getSelect_TIMEOUT_Select() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_TIMEOUT_Select_swsscommon_2432462d295473d6())
	return swig_r
}

var SelectTIMEOUT int = _swig_getSelect_TIMEOUT_Select()

func _swig_getSelect_SIGNALINT_Select() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SIGNALINT_Select_swsscommon_2432462d295473d6())
	return swig_r
}

var SelectSIGNALINT int = _swig_getSelect_SIGNALINT_Select()

func (arg1 SwigcptrSelect) Xselect__SWIG_0(arg2 Selectable, arg3 int, arg4 bool) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_Select_Xselect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrSelect) Xselect__SWIG_1(arg2 Selectable, arg3 int) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_Select_Xselect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrSelect) Xselect__SWIG_2(arg2 Selectable) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_Select_Xselect__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (p SwigcptrSelect) Xselect(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return p.Xselect__SWIG_2(a[0].(Selectable))
	}
	if argc == 2 {
		return p.Xselect__SWIG_1(a[0].(Selectable), a[1].(int))
	}
	if argc == 3 {
		return p.Xselect__SWIG_0(a[0].(Selectable), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSelect) IsQueueEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Select_isQueueEmpty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func SelectResultToString(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Select_resultToString_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type Select interface {
	Swigcptr() uintptr
	SwigIsSelect()
	AddSelectable(arg2 Selectable)
	RemoveSelectable(arg2 Selectable)
	AddSelectables(arg2 Std_vector_Sl_swss_Selectable_Sm__Sg_)
	Xselect(a ...interface{}) int
	IsQueueEmpty() (_swig_ret bool)
}

type SwigcptrRedisCommand uintptr

func (p SwigcptrRedisCommand) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisCommand) SwigIsRedisCommand() {
}

func NewRedisCommand() (_swig_ret RedisCommand) {
	var swig_r RedisCommand
	swig_r = (RedisCommand)(SwigcptrRedisCommand(C._wrap_new_RedisCommand_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteRedisCommand(arg1 RedisCommand) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisCommand_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisCommand) Format__SWIG_0(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisCommand_format__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_273)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) FormatArgv(arg2 int, arg3 *string, arg4 *int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RedisCommand_formatArgv_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3))
}

func (arg1 SwigcptrRedisCommand) Format__SWIG_1(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RedisCommand_format__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrRedisCommand) Format(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(VectorString); !ok {
			goto check_1
		}
		p.Format__SWIG_1(a[0].(VectorString))
		return
	}
check_1:
	if argc == 1 {
		p.Format__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisCommand) FormatHSET__SWIG_0(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RedisCommand_formatHSET__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_274)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) FormatHSET__SWIG_1(arg2 string, arg3 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RedisCommand_formatHSET__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_275)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) FormatHSET__SWIG_3(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RedisCommand_formatHSET__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_276)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_277)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_278)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (p SwigcptrRedisCommand) FormatHSET(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(FieldValuePairs); !ok {
			goto check_1
		}
		p.FormatHSET__SWIG_0(a[0].(string), a[1].(FieldValuePairs))
		return
	}
check_1:
	if argc == 2 {
		p.FormatHSET__SWIG_1(a[0].(string), a[1].(FieldValueMap))
		return
	}
	if argc == 3 {
		p.FormatHSET__SWIG_3(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisCommand) FormatHGET(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RedisCommand_formatHGET_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_279)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_280)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRedisCommand) FormatHDEL__SWIG_0(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RedisCommand_formatHDEL__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_281)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_282)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRedisCommand) FormatHDEL__SWIG_1(arg2 string, arg3 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RedisCommand_formatHDEL__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_283)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrRedisCommand) FormatHDEL(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_1
		}
		p.FormatHDEL__SWIG_0(a[0].(string), a[1].(string))
		return
	}
check_1:
	if argc == 2 {
		p.FormatHDEL__SWIG_1(a[0].(string), a[1].(VectorString))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisCommand) FormatEXPIRE(arg2 string, arg3 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RedisCommand_formatEXPIRE_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_284)(unsafe.Pointer(&_swig_i_1)), C.swig_type_285(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) FormatTTL(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisCommand_formatTTL_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_286)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) FormatDEL(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisCommand_formatDEL_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_287)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisCommand) AppendTo(arg2 RedisContext) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_RedisCommand_appendTo_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrRedisCommand) ToPrintableString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisCommand_toPrintableString_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type RedisCommand interface {
	Swigcptr() uintptr
	SwigIsRedisCommand()
	FormatArgv(arg2 int, arg3 *string, arg4 *int64)
	Format(a ...interface{})
	FormatHSET(a ...interface{})
	FormatHGET(arg2 string, arg3 string)
	FormatHDEL(a ...interface{})
	FormatEXPIRE(arg2 string, arg3 int64)
	FormatTTL(arg2 string)
	FormatDEL(arg2 string)
	AppendTo(arg2 RedisContext) (_swig_ret int)
	ToPrintableString() (_swig_ret string)
}

type SwigcptrRedisPipeline uintptr

func (p SwigcptrRedisPipeline) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisPipeline) SwigIsRedisPipeline() {
}

func (arg1 SwigcptrRedisPipeline) GetCOMMAND_MAX() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RedisPipeline_COMMAND_MAX_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func _swig_getRedisPipeline_RedisPipeline_NEWCONNECTOR_TIMEOUT_RedisPipeline() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RedisPipeline_NEWCONNECTOR_TIMEOUT_RedisPipeline_swsscommon_2432462d295473d6())
	return swig_r
}

var RedisPipelineNEWCONNECTOR_TIMEOUT int = _swig_getRedisPipeline_RedisPipeline_NEWCONNECTOR_TIMEOUT_RedisPipeline()

func NewRedisPipeline__SWIG_0(arg1 DBConnector, arg2 int64) (_swig_ret RedisPipeline) {
	var swig_r RedisPipeline
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (RedisPipeline)(SwigcptrRedisPipeline(C._wrap_new_RedisPipeline__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_290(_swig_i_1))))
	return swig_r
}

func NewRedisPipeline__SWIG_1(arg1 DBConnector) (_swig_ret RedisPipeline) {
	var swig_r RedisPipeline
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RedisPipeline)(SwigcptrRedisPipeline(C._wrap_new_RedisPipeline__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRedisPipeline(a ...interface{}) RedisPipeline {
	argc := len(a)
	if argc == 1 {
		return NewRedisPipeline__SWIG_1(a[0].(DBConnector))
	}
	if argc == 2 {
		return NewRedisPipeline__SWIG_0(a[0].(DBConnector), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func DeleteRedisPipeline(arg1 RedisPipeline) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisPipeline_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisPipeline) Push__SWIG_0(arg2 RedisCommand, arg3 int) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisPipeline_push__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrRedisPipeline) Push__SWIG_1(arg2 RedisCommand) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisPipeline_push__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrRedisPipeline) Push(a ...interface{}) RedisReply {
	argc := len(a)
	if argc == 1 {
		return p.Push__SWIG_1(a[0].(RedisCommand))
	}
	if argc == 2 {
		return p.Push__SWIG_0(a[0].(RedisCommand), a[1].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisPipeline) LoadRedisScript(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RedisPipeline_loadRedisScript_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_292)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisPipeline) Pop() (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisPipeline_pop_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisPipeline) Flush() {
	_swig_i_0 := arg1
	C._wrap_RedisPipeline_flush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisPipeline) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RedisPipeline_size_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisPipeline) GetDbId() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RedisPipeline_getDbId_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisPipeline) GetDbName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisPipeline_getDbName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisPipeline) GetDBConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_RedisPipeline_getDBConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisPipeline) InitializeOwnerTid() {
	_swig_i_0 := arg1
	C._wrap_RedisPipeline_initializeOwnerTid_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type RedisPipeline interface {
	Swigcptr() uintptr
	SwigIsRedisPipeline()
	GetCOMMAND_MAX() (_swig_ret int64)
	Push(a ...interface{}) RedisReply
	LoadRedisScript(arg2 string) (_swig_ret string)
	Pop() (_swig_ret RedisReply)
	Flush()
	Size() (_swig_ret int64)
	GetDbId() (_swig_ret int)
	GetDbName() (_swig_ret string)
	GetDBConnector() (_swig_ret DBConnector)
	InitializeOwnerTid()
}

type SwigcptrRedisError uintptr

func (p SwigcptrRedisError) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisError) SwigIsRedisError() {
}

func NewRedisError(arg1 string, arg2 RedisContext) (_swig_ret RedisError) {
	var swig_r RedisError
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (RedisError)(SwigcptrRedisError(C._wrap_new_RedisError_swsscommon_2432462d295473d6(*(*C.swig_type_295)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrRedisError) What() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisError_what_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteRedisError(arg1 RedisError) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisError_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type RedisError interface {
	Swigcptr() uintptr
	SwigIsRedisError()
	What() (_swig_ret string)
}

type SwigcptrRedisMessage uintptr

func (p SwigcptrRedisMessage) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisMessage) SwigIsRedisMessage() {
}

func (arg1 SwigcptrRedisMessage) SetXtype(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisMessage_Xtype_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_297)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisMessage) GetXtype() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisMessage_Xtype_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisMessage) SetPattern(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisMessage_pattern_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_299)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisMessage) GetPattern() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisMessage_pattern_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisMessage) SetChannel(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisMessage_channel_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_301)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisMessage) GetChannel() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisMessage_channel_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrRedisMessage) SetData(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisMessage_data_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_303)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisMessage) GetData() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisMessage_data_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewRedisMessage() (_swig_ret RedisMessage) {
	var swig_r RedisMessage
	swig_r = (RedisMessage)(SwigcptrRedisMessage(C._wrap_new_RedisMessage_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteRedisMessage(arg1 RedisMessage) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisMessage_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type RedisMessage interface {
	Swigcptr() uintptr
	SwigIsRedisMessage()
	SetXtype(arg2 string)
	GetXtype() (_swig_ret string)
	SetPattern(arg2 string)
	GetPattern() (_swig_ret string)
	SetChannel(arg2 string)
	GetChannel() (_swig_ret string)
	SetData(arg2 string)
	GetData() (_swig_ret string)
}

type SwigcptrRedisReply uintptr

func (p SwigcptrRedisReply) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisReply) SwigIsRedisReply() {
}

func NewRedisReply__SWIG_0(arg1 RedisContext, arg2 RedisCommand) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_new_RedisReply__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewRedisReply__SWIG_1(arg1 RedisContext, arg2 string) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_new_RedisReply__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_305)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewRedisReply__SWIG_2(arg1 RedisContext, arg2 RedisCommand, arg3 int) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_new_RedisReply__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func NewRedisReply__SWIG_3(arg1 RedisContext, arg2 string, arg3 int) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_new_RedisReply__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_306)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewRedisReply__SWIG_4(arg1 RedisReply) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_new_RedisReply__SWIG_4_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRedisReply(a ...interface{}) RedisReply {
	argc := len(a)
	if argc == 1 {
		return NewRedisReply__SWIG_4(a[0].(RedisReply))
	}
	if argc == 2 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		return NewRedisReply__SWIG_1(a[0].(RedisContext), a[1].(string))
	}
check_2:
	if argc == 2 {
		return NewRedisReply__SWIG_0(a[0].(RedisContext), a[1].(RedisCommand))
	}
	if argc == 3 {
		if _, ok := a[1].(string); !ok {
			goto check_4
		}
		return NewRedisReply__SWIG_3(a[0].(RedisContext), a[1].(string), a[2].(int))
	}
check_4:
	if argc == 3 {
		return NewRedisReply__SWIG_2(a[0].(RedisContext), a[1].(RedisCommand), a[2].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteRedisReply(arg1 RedisReply) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisReply) Release() (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisReply_release_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisReply) GetContext() (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisReply_getContext_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisReply) GetChildCount() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RedisReply_getChildCount_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisReply) GetChild(arg2 int64) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisReply_getChild_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_308(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRedisReply) ReleaseChild(arg2 int64) (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisReply_releaseChild_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_309(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRedisReply) CheckReplyType(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisReply_checkReplyType_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRedisReply) CheckStatusOK() {
	_swig_i_0 := arg1
	C._wrap_RedisReply_checkStatusOK_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisReply) CheckStatusQueued() {
	_swig_i_0 := arg1
	C._wrap_RedisReply_checkStatusQueued_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisReply) To_string__SWIG_0() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_RedisReply_to_string__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func RedisReplyTo_string__SWIG_1(arg1 RedisReply, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r_p := C._wrap_RedisReply_to_string__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_312)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func RedisReplyTo_string__SWIG_2(arg1 RedisReply) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := getSwigcptr(arg1)
	swig_r_p := C._wrap_RedisReply_to_string__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func RedisReplyTo_string(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return a[0].(SwigcptrRedisReply).To_string__SWIG_0()
	}
	if argc == 1 {
		return RedisReplyTo_string__SWIG_2(a[0].(RedisReply))
	}
	if argc == 2 {
		return RedisReplyTo_string__SWIG_1(a[0].(RedisReply), a[1].(string))
	}
	panic("No match for overloaded function call")
}

type RedisReply interface {
	Swigcptr() uintptr
	SwigIsRedisReply()
	Release() (_swig_ret RedisReply)
	GetContext() (_swig_ret RedisReply)
	GetChildCount() (_swig_ret int64)
	GetChild(arg2 int64) (_swig_ret RedisReply)
	ReleaseChild(arg2 int64) (_swig_ret RedisReply)
	CheckReplyType(arg2 int)
	CheckStatusOK()
	CheckStatusQueued()
}

type SwigcptrRedisSelect uintptr

func (p SwigcptrRedisSelect) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisSelect) SwigIsRedisSelect() {
}

func _swig_getRedisSelect_RedisSelect_SUBSCRIBE_TIMEOUT_RedisSelect() (_swig_ret uint) {
	var swig_r uint
	swig_r = (uint)(C._wrap_RedisSelect_SUBSCRIBE_TIMEOUT_RedisSelect_swsscommon_2432462d295473d6())
	return swig_r
}

var RedisSelectSUBSCRIBE_TIMEOUT uint = _swig_getRedisSelect_RedisSelect_SUBSCRIBE_TIMEOUT_RedisSelect()

func NewRedisSelect__SWIG_0(arg1 int) (_swig_ret RedisSelect) {
	var swig_r RedisSelect
	_swig_i_0 := arg1
	swig_r = (RedisSelect)(SwigcptrRedisSelect(C._wrap_new_RedisSelect__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewRedisSelect__SWIG_1() (_swig_ret RedisSelect) {
	var swig_r RedisSelect
	swig_r = (RedisSelect)(SwigcptrRedisSelect(C._wrap_new_RedisSelect__SWIG_1_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewRedisSelect(a ...interface{}) RedisSelect {
	argc := len(a)
	if argc == 0 {
		return NewRedisSelect__SWIG_1()
	}
	if argc == 1 {
		return NewRedisSelect__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisSelect) GetFd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_RedisSelect_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_RedisSelect_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RedisSelect_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RedisSelect_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RedisSelect_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) UpdateAfterRead() {
	_swig_i_0 := arg1
	C._wrap_RedisSelect_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisSelect) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_RedisSelect_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRedisSelect) Subscribe(arg2 DBConnector, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RedisSelect_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_315)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRedisSelect) Psubscribe(arg2 DBConnector, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RedisSelect_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_316)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRedisSelect) Punsubscribe(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisSelect_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_317)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisSelect) SetQueueLength(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RedisSelect_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_318(_swig_i_1))
}

func DeleteRedisSelect(arg1 RedisSelect) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisSelect_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrRedisSelect) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_RedisSelect_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrRedisSelect) SwigIsSelectable() {
}

func (p SwigcptrRedisSelect) SwigGetSelectable() Selectable {
	return SwigcptrSelectable(getSwigcptr(p))
}

type RedisSelect interface {
	Swigcptr() uintptr
	SwigIsRedisSelect()
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	GetDbConnector() (_swig_ret DBConnector)
	Subscribe(arg2 DBConnector, arg3 string)
	Psubscribe(arg2 DBConnector, arg3 string)
	Punsubscribe(arg2 string)
	SetQueueLength(arg2 int64)
	GetPri() (_swig_ret int)
	SwigIsSelectable()
	SwigGetSelectable() Selectable
}

type SwigcptrRedisTransactioner uintptr

func (p SwigcptrRedisTransactioner) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRedisTransactioner) SwigIsRedisTransactioner() {
}

func NewRedisTransactioner(arg1 DBConnector) (_swig_ret RedisTransactioner) {
	var swig_r RedisTransactioner
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RedisTransactioner)(SwigcptrRedisTransactioner(C._wrap_new_RedisTransactioner_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteRedisTransactioner(arg1 RedisTransactioner) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RedisTransactioner_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisTransactioner) Multi() {
	_swig_i_0 := arg1
	C._wrap_RedisTransactioner_multi_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRedisTransactioner) Exec() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RedisTransactioner_exec_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRedisTransactioner) Enqueue__SWIG_0(arg2 string, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RedisTransactioner_enqueue__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_319)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRedisTransactioner) Enqueue__SWIG_1(arg2 RedisCommand, arg3 int) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_RedisTransactioner_enqueue__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))
}

func (p SwigcptrRedisTransactioner) Enqueue(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Enqueue__SWIG_0(a[0].(string), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		p.Enqueue__SWIG_1(a[0].(RedisCommand), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRedisTransactioner) DequeueReply() (_swig_ret RedisReply) {
	var swig_r RedisReply
	_swig_i_0 := arg1
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_RedisTransactioner_dequeueReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type RedisTransactioner interface {
	Swigcptr() uintptr
	SwigIsRedisTransactioner()
	Multi()
	Exec() (_swig_ret bool)
	Enqueue(a ...interface{})
	DequeueReply() (_swig_ret RedisReply)
}

type SwigcptrConfigDBConnector_Native uintptr

func (p SwigcptrConfigDBConnector_Native) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConfigDBConnector_Native) SwigIsConfigDBConnector_Native() {
}

func _swig_getConfigDBConnector_Native_ConfigDBConnector_Native_INIT_INDICATOR_ConfigDBConnector_Native() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBConnector_Native_INIT_INDICATOR_ConfigDBConnector_Native_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var ConfigDBConnector_NativeINIT_INDICATOR string = _swig_getConfigDBConnector_Native_ConfigDBConnector_Native_INIT_INDICATOR_ConfigDBConnector_Native()

func NewConfigDBConnector_Native__SWIG_0(arg1 bool, arg2 string) (_swig_ret ConfigDBConnector_Native) {
	var swig_r ConfigDBConnector_Native
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ConfigDBConnector_Native)(SwigcptrConfigDBConnector_Native(C._wrap_new_ConfigDBConnector_Native__SWIG_0_swsscommon_2432462d295473d6(C._Bool(_swig_i_0), *(*C.swig_type_321)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConfigDBConnector_Native__SWIG_1(arg1 bool) (_swig_ret ConfigDBConnector_Native) {
	var swig_r ConfigDBConnector_Native
	_swig_i_0 := arg1
	swig_r = (ConfigDBConnector_Native)(SwigcptrConfigDBConnector_Native(C._wrap_new_ConfigDBConnector_Native__SWIG_1_swsscommon_2432462d295473d6(C._Bool(_swig_i_0))))
	return swig_r
}

func NewConfigDBConnector_Native__SWIG_2() (_swig_ret ConfigDBConnector_Native) {
	var swig_r ConfigDBConnector_Native
	swig_r = (ConfigDBConnector_Native)(SwigcptrConfigDBConnector_Native(C._wrap_new_ConfigDBConnector_Native__SWIG_2_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewConfigDBConnector_Native(a ...interface{}) ConfigDBConnector_Native {
	argc := len(a)
	if argc == 0 {
		return NewConfigDBConnector_Native__SWIG_2()
	}
	if argc == 1 {
		return NewConfigDBConnector_Native__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return NewConfigDBConnector_Native__SWIG_0(a[0].(bool), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConfigDBConnector_Native) Db_connect__SWIG_0(arg2 string, arg3 bool, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_ConfigDBConnector_Native_db_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_322)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2), C._Bool(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrConfigDBConnector_Native) Db_connect__SWIG_1(arg2 string, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ConfigDBConnector_Native_db_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_323)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrConfigDBConnector_Native) Db_connect__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBConnector_Native_db_connect__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_324)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrConfigDBConnector_Native) Db_connect(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Db_connect__SWIG_2(a[0].(string))
		return
	}
	if argc == 2 {
		p.Db_connect__SWIG_1(a[0].(string), a[1].(bool))
		return
	}
	if argc == 3 {
		p.Db_connect__SWIG_0(a[0].(string), a[1].(bool), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConfigDBConnector_Native) Connect__SWIG_0(arg2 bool, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ConfigDBConnector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1), C._Bool(_swig_i_2))
}

func (arg1 SwigcptrConfigDBConnector_Native) Connect__SWIG_1(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBConnector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrConfigDBConnector_Native) Connect__SWIG_2() {
	_swig_i_0 := arg1
	C._wrap_ConfigDBConnector_Native_connect__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrConfigDBConnector_Native) Connect(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Connect__SWIG_2()
		return
	}
	if argc == 1 {
		p.Connect__SWIG_1(a[0].(bool))
		return
	}
	if argc == 2 {
		p.Connect__SWIG_0(a[0].(bool), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConfigDBConnector_Native) Set_entry(arg2 string, arg3 string, arg4 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_ConfigDBConnector_Native_set_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_325)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_326)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrConfigDBConnector_Native) Mod_entry(arg2 string, arg3 string, arg4 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_ConfigDBConnector_Native_mod_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_327)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_328)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrConfigDBConnector_Native) Get_entry(arg2 string, arg3 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBConnector_Native_get_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_329)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_330)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrConfigDBConnector_Native) Get_keys__SWIG_0(arg2 string, arg3 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_get_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_331)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrConfigDBConnector_Native) Get_keys__SWIG_1(arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_get_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_332)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Get_keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Get_keys__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.Get_keys__SWIG_0(a[0].(string), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConfigDBConnector_Native) Get_table(arg2 string) (_swig_ret GetTableResult) {
	var swig_r GetTableResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (GetTableResult)(SwigcptrGetTableResult(C._wrap_ConfigDBConnector_Native_get_table_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_333)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrConfigDBConnector_Native) Delete_table(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBConnector_Native_delete_table_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_334)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrConfigDBConnector_Native) Mod_config(arg2 GetConfigResult) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ConfigDBConnector_Native_mod_config_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrConfigDBConnector_Native) Get_config() (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	_swig_i_0 := arg1
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_ConfigDBConnector_Native_get_config_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrConfigDBConnector_Native) GetKeySeparator() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConfigDBConnector_Native_getKeySeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrConfigDBConnector_Native) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConfigDBConnector_Native_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrConfigDBConnector_Native) GetDbName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConfigDBConnector_Native_getDbName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteConfigDBConnector_Native(arg1 ConfigDBConnector_Native) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ConfigDBConnector_Native_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConfigDBConnector_Native) GetNamespace() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBConnector_Native_getNamespace_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBConnector_Native) Close__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConfigDBConnector_Native_close__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_339)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConfigDBConnector_Native) Close__SWIG_1() {
	C._wrap_ConfigDBConnector_Native_close__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (p SwigcptrConfigDBConnector_Native) Close(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Close__SWIG_1()
		return
	}
	if argc == 1 {
		p.Close__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_db_list() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_get_db_list_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_dbid(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ConfigDBConnector_Native_get_dbid_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_340)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_db_separator(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConfigDBConnector_Native_get_db_separator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_342)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_redis_client(arg1 string) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ConfigDBConnector_Native_get_redis_client_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_343)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Publish(arg1 string, arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_ConfigDBConnector_Native_publish_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_345)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_346)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_347)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Exists(arg1 string, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ConfigDBConnector_Native_exists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_348)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_349)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Keys__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_350)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_351)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Keys__SWIG_1(arg1 string, arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_352)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_353)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Keys__SWIG_2(arg1 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBConnector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_354)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Keys__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return p.Keys__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Keys__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Scan__SWIG_0(arg1 string, arg2 int, arg3 string, arg4 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBConnector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_355)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), *(*C.swig_type_356)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Scan__SWIG_1(arg1 string, arg2 int, arg3 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBConnector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_357)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), *(*C.swig_type_358)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Scan__SWIG_2(arg1 string, arg2 int) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBConnector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_359)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Scan__SWIG_3(arg1 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBConnector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_360)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ {
	argc := len(a)
	if argc == 1 {
		return p.Scan__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.Scan__SWIG_2(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return p.Scan__SWIG_1(a[0].(string), a[1].(int), a[2].(string))
	}
	if argc == 4 {
		return p.Scan__SWIG_0(a[0].(string), a[1].(int), a[2].(string), a[3].(uint))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get__SWIG_0(arg1 string, arg2 string, arg3 string, arg4 bool) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_ConfigDBConnector_Native_get__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_361)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_362)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_363)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get__SWIG_1(arg1 string, arg2 string, arg3 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_ConfigDBConnector_Native_get__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_364)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_365)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_366)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_ {
	argc := len(a)
	if argc == 3 {
		return p.Get__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Get__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Hexists(arg1 string, arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ConfigDBConnector_Native_hexists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_367)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_368)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_369)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_all__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBConnector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_370)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_371)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Get_all__SWIG_1(arg1 string, arg2 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBConnector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_372)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_373)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Get_all(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 2 {
		return p.Get_all__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Get_all__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Hmset(arg1 string, arg2 string, arg3 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConfigDBConnector_Native_hmset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_374)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_375)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConfigDBConnector_Native) Set__SWIG_0(arg1 string, arg2 string, arg3 string, arg4 string, arg5 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int64)(C._wrap_ConfigDBConnector_Native_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_377)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_378)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_379)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_380)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Set__SWIG_1(arg1 string, arg2 string, arg3 string, arg4 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_ConfigDBConnector_Native_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_382)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_383)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_384)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_385)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Set(a ...interface{}) int64 {
	argc := len(a)
	if argc == 4 {
		return p.Set__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.Set__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Delete__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_ConfigDBConnector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_387)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_388)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBConnector_Native) Delete__SWIG_1(arg1 string, arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_ConfigDBConnector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_390)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_391)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrConfigDBConnector_Native) Delete(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return p.Delete__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBConnector_Native) Delete_all_by_pattern(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBConnector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_392)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_393)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrConfigDBConnector_Native) SwigIsSonicV2Connector_Native() {
}

func (p SwigcptrConfigDBConnector_Native) SwigGetSonicV2Connector_Native() SonicV2Connector_Native {
	return SwigcptrSonicV2Connector_Native(getSwigcptr(p))
}

type ConfigDBConnector_Native interface {
	Swigcptr() uintptr
	SwigIsConfigDBConnector_Native()
	Db_connect(a ...interface{})
	Connect(a ...interface{})
	Set_entry(arg2 string, arg3 string, arg4 FieldValueMap)
	Mod_entry(arg2 string, arg3 string, arg4 FieldValueMap)
	Get_entry(arg2 string, arg3 string) (_swig_ret FieldValueMap)
	Get_keys(a ...interface{}) VectorString
	Get_table(arg2 string) (_swig_ret GetTableResult)
	Delete_table(arg2 string)
	Mod_config(arg2 GetConfigResult)
	Get_config() (_swig_ret GetConfigResult)
	GetKeySeparator() (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetDbName() (_swig_ret string)
	GetNamespace() (_swig_ret string)
	Close(a ...interface{})
	Get_db_list() (_swig_ret VectorString)
	Get_dbid(arg1 string) (_swig_ret int)
	Get_db_separator(arg1 string) (_swig_ret string)
	Get_redis_client(arg1 string) (_swig_ret DBConnector)
	Publish(arg1 string, arg2 string, arg3 string) (_swig_ret int64)
	Exists(arg1 string, arg2 string) (_swig_ret bool)
	Keys(a ...interface{}) VectorString
	Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_
	Hexists(arg1 string, arg2 string, arg3 string) (_swig_ret bool)
	Get_all(a ...interface{}) FieldValueMap
	Hmset(arg1 string, arg2 string, arg3 FieldValueMap)
	Set(a ...interface{}) int64
	Delete(a ...interface{}) int64
	Delete_all_by_pattern(arg1 string, arg2 string)
	SwigIsSonicV2Connector_Native()
	SwigGetSonicV2Connector_Native() SonicV2Connector_Native
}

type ConfigDBConnector struct {
	ConfigDBConnector_Native
}

func NewConfigDBConnector(a ...interface{}) *ConfigDBConnector {
	return &ConfigDBConnector{
		NewConfigDBConnector_Native(a...),
	}
}

type SwigcptrConfigDBPipeConnector_Native uintptr

func (p SwigcptrConfigDBPipeConnector_Native) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConfigDBPipeConnector_Native) SwigIsConfigDBPipeConnector_Native() {
}

func NewConfigDBPipeConnector_Native__SWIG_0(arg1 bool, arg2 string) (_swig_ret ConfigDBPipeConnector_Native) {
	var swig_r ConfigDBPipeConnector_Native
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ConfigDBPipeConnector_Native)(SwigcptrConfigDBPipeConnector_Native(C._wrap_new_ConfigDBPipeConnector_Native__SWIG_0_swsscommon_2432462d295473d6(C._Bool(_swig_i_0), *(*C.swig_type_394)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConfigDBPipeConnector_Native__SWIG_1(arg1 bool) (_swig_ret ConfigDBPipeConnector_Native) {
	var swig_r ConfigDBPipeConnector_Native
	_swig_i_0 := arg1
	swig_r = (ConfigDBPipeConnector_Native)(SwigcptrConfigDBPipeConnector_Native(C._wrap_new_ConfigDBPipeConnector_Native__SWIG_1_swsscommon_2432462d295473d6(C._Bool(_swig_i_0))))
	return swig_r
}

func NewConfigDBPipeConnector_Native__SWIG_2() (_swig_ret ConfigDBPipeConnector_Native) {
	var swig_r ConfigDBPipeConnector_Native
	swig_r = (ConfigDBPipeConnector_Native)(SwigcptrConfigDBPipeConnector_Native(C._wrap_new_ConfigDBPipeConnector_Native__SWIG_2_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewConfigDBPipeConnector_Native(a ...interface{}) ConfigDBPipeConnector_Native {
	argc := len(a)
	if argc == 0 {
		return NewConfigDBPipeConnector_Native__SWIG_2()
	}
	if argc == 1 {
		return NewConfigDBPipeConnector_Native__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return NewConfigDBPipeConnector_Native__SWIG_0(a[0].(bool), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConfigDBPipeConnector_Native) Set_entry(arg2 string, arg3 string, arg4 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_ConfigDBPipeConnector_Native_set_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_395)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_396)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrConfigDBPipeConnector_Native) Mod_config(arg2 GetConfigResult) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ConfigDBPipeConnector_Native_mod_config_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrConfigDBPipeConnector_Native) Get_config() (_swig_ret GetConfigResult) {
	var swig_r GetConfigResult
	_swig_i_0 := arg1
	swig_r = (GetConfigResult)(SwigcptrGetConfigResult(C._wrap_ConfigDBPipeConnector_Native_get_config_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteConfigDBPipeConnector_Native(arg1 ConfigDBPipeConnector_Native) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ConfigDBPipeConnector_Native_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Db_connect__SWIG_0(arg1 string, arg2 bool, arg3 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_397)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1), C._Bool(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Db_connect__SWIG_1(arg1 string, arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_398)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Db_connect__SWIG_2(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConfigDBPipeConnector_Native_db_connect__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_399)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (p SwigcptrConfigDBPipeConnector_Native) Db_connect(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Db_connect__SWIG_2(a[0].(string))
		return
	}
	if argc == 2 {
		p.Db_connect__SWIG_1(a[0].(string), a[1].(bool))
		return
	}
	if argc == 3 {
		p.Db_connect__SWIG_0(a[0].(string), a[1].(bool), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Connect__SWIG_0(arg1 bool, arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBPipeConnector_Native_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C._Bool(_swig_i_0), C._Bool(_swig_i_1))
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Connect__SWIG_1(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_ConfigDBPipeConnector_Native_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Connect__SWIG_2() {
	C._wrap_ConfigDBPipeConnector_Native_connect__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (p SwigcptrConfigDBPipeConnector_Native) Connect(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Connect__SWIG_2()
		return
	}
	if argc == 1 {
		p.Connect__SWIG_1(a[0].(bool))
		return
	}
	if argc == 2 {
		p.Connect__SWIG_0(a[0].(bool), a[1].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Mod_entry(arg1 string, arg2 string, arg3 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConfigDBPipeConnector_Native_mod_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_400)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_401)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_entry(arg1 string, arg2 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBPipeConnector_Native_get_entry_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_402)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_403)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_keys__SWIG_0(arg1 string, arg2 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_get_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_404)(unsafe.Pointer(&_swig_i_0)), C._Bool(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_keys__SWIG_1(arg1 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_get_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_405)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Get_keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Get_keys__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return p.Get_keys__SWIG_0(a[0].(string), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_table(arg1 string) (_swig_ret GetTableResult) {
	var swig_r GetTableResult
	_swig_i_0 := arg1
	swig_r = (GetTableResult)(SwigcptrGetTableResult(C._wrap_ConfigDBPipeConnector_Native_get_table_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_406)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Delete_table(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConfigDBPipeConnector_Native_delete_table_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_407)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) GetKeySeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBPipeConnector_Native_getKeySeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBPipeConnector_Native_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) GetDbName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBPipeConnector_Native_getDbName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) GetNamespace() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConfigDBPipeConnector_Native_getNamespace_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Close__SWIG_0(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConfigDBPipeConnector_Native_close__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_339)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Close__SWIG_1() {
	C._wrap_ConfigDBPipeConnector_Native_close__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (p SwigcptrConfigDBPipeConnector_Native) Close(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Close__SWIG_1()
		return
	}
	if argc == 1 {
		p.Close__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_db_list() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_get_db_list_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_dbid(arg1 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ConfigDBPipeConnector_Native_get_dbid_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_340)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_db_separator(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConfigDBPipeConnector_Native_get_db_separator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_342)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_redis_client(arg1 string) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ConfigDBPipeConnector_Native_get_redis_client_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_343)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Publish(arg1 string, arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_ConfigDBPipeConnector_Native_publish_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_345)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_346)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_347)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Exists(arg1 string, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_ConfigDBPipeConnector_Native_exists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_348)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_349)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Keys__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_350)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_351)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Keys__SWIG_1(arg1 string, arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_352)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_353)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Keys__SWIG_2(arg1 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_ConfigDBPipeConnector_Native_keys__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_354)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Keys__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return p.Keys__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Keys__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Scan__SWIG_0(arg1 string, arg2 int, arg3 string, arg4 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBPipeConnector_Native_scan__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_355)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), *(*C.swig_type_356)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Scan__SWIG_1(arg1 string, arg2 int, arg3 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBPipeConnector_Native_scan__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_357)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), *(*C.swig_type_358)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Scan__SWIG_2(arg1 string, arg2 int) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBPipeConnector_Native_scan__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_359)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Scan__SWIG_3(arg1 string) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_ConfigDBPipeConnector_Native_scan__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_360)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ {
	argc := len(a)
	if argc == 1 {
		return p.Scan__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		return p.Scan__SWIG_2(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return p.Scan__SWIG_1(a[0].(string), a[1].(int), a[2].(string))
	}
	if argc == 4 {
		return p.Scan__SWIG_0(a[0].(string), a[1].(int), a[2].(string), a[3].(uint))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get__SWIG_0(arg1 string, arg2 string, arg3 string, arg4 bool) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_ConfigDBPipeConnector_Native_get__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_361)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_362)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_363)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get__SWIG_1(arg1 string, arg2 string, arg3 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_ConfigDBPipeConnector_Native_get__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_364)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_365)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_366)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_ {
	argc := len(a)
	if argc == 3 {
		return p.Get__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Get__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Hexists(arg1 string, arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_ConfigDBPipeConnector_Native_hexists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_367)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_368)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_369)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_all__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBPipeConnector_Native_get_all__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_370)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_371)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Get_all__SWIG_1(arg1 string, arg2 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_ConfigDBPipeConnector_Native_get_all__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_372)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_373)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Get_all(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 2 {
		return p.Get_all__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Get_all__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Hmset(arg1 string, arg2 string, arg3 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConfigDBPipeConnector_Native_hmset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_374)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_375)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Set__SWIG_0(arg1 string, arg2 string, arg3 string, arg4 string, arg5 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int64)(C._wrap_ConfigDBPipeConnector_Native_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_377)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_378)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_379)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_380)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Set__SWIG_1(arg1 string, arg2 string, arg3 string, arg4 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_ConfigDBPipeConnector_Native_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_382)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_383)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_384)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_385)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Set(a ...interface{}) int64 {
	argc := len(a)
	if argc == 4 {
		return p.Set__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.Set__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Delete__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_ConfigDBPipeConnector_Native_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_387)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_388)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Delete__SWIG_1(arg1 string, arg2 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_ConfigDBPipeConnector_Native_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_390)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_391)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrConfigDBPipeConnector_Native) Delete(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return p.Delete__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConfigDBPipeConnector_Native) Delete_all_by_pattern(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConfigDBPipeConnector_Native_delete_all_by_pattern_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_392)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_393)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrConfigDBPipeConnector_Native) SwigIsConfigDBConnector_Native() {
}

func (p SwigcptrConfigDBPipeConnector_Native) SwigGetConfigDBConnector_Native() ConfigDBConnector_Native {
	return SwigcptrConfigDBConnector_Native(getSwigcptr(p))
}

func (p SwigcptrConfigDBPipeConnector_Native) SwigIsSonicV2Connector_Native() {
}

func (p SwigcptrConfigDBPipeConnector_Native) SwigGetSonicV2Connector_Native() SonicV2Connector_Native {
	return SwigcptrSonicV2Connector_Native(getSwigcptr(p))
}

type ConfigDBPipeConnector_Native interface {
	Swigcptr() uintptr
	SwigIsConfigDBPipeConnector_Native()
	Set_entry(arg2 string, arg3 string, arg4 FieldValueMap)
	Mod_config(arg2 GetConfigResult)
	Get_config() (_swig_ret GetConfigResult)
	Db_connect(a ...interface{})
	Connect(a ...interface{})
	Mod_entry(arg1 string, arg2 string, arg3 FieldValueMap)
	Get_entry(arg1 string, arg2 string) (_swig_ret FieldValueMap)
	Get_keys(a ...interface{}) VectorString
	Get_table(arg1 string) (_swig_ret GetTableResult)
	Delete_table(arg1 string)
	GetKeySeparator() (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetDbName() (_swig_ret string)
	GetNamespace() (_swig_ret string)
	Close(a ...interface{})
	Get_db_list() (_swig_ret VectorString)
	Get_dbid(arg1 string) (_swig_ret int)
	Get_db_separator(arg1 string) (_swig_ret string)
	Get_redis_client(arg1 string) (_swig_ret DBConnector)
	Publish(arg1 string, arg2 string, arg3 string) (_swig_ret int64)
	Exists(arg1 string, arg2 string) (_swig_ret bool)
	Keys(a ...interface{}) VectorString
	Scan(a ...interface{}) Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_
	Hexists(arg1 string, arg2 string, arg3 string) (_swig_ret bool)
	Get_all(a ...interface{}) FieldValueMap
	Hmset(arg1 string, arg2 string, arg3 FieldValueMap)
	Set(a ...interface{}) int64
	Delete(a ...interface{}) int64
	Delete_all_by_pattern(arg1 string, arg2 string)
	SwigIsConfigDBConnector_Native()
	SwigGetConfigDBConnector_Native() ConfigDBConnector_Native
	SwigIsSonicV2Connector_Native()
	SwigGetSonicV2Connector_Native() SonicV2Connector_Native
}

func _swig_getMQ_RESPONSE_MAX_COUNT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_MQ_RESPONSE_MAX_COUNT_swsscommon_2432462d295473d6())
	return swig_r
}

var MQ_RESPONSE_MAX_COUNT int = _swig_getMQ_RESPONSE_MAX_COUNT()

const MQ_SIZE int = 100
const MQ_MAX_RETRY int = 10

func _swig_getMQ_POLL_TIMEOUT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_MQ_POLL_TIMEOUT_swsscommon_2432462d295473d6())
	return swig_r
}

var MQ_POLL_TIMEOUT int = _swig_getMQ_POLL_TIMEOUT()

const MQ_WATERMARK int = 10000

func GetORCH_ZMQ_PORT() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ORCH_ZMQ_PORT_get_swsscommon_2432462d295473d6())
	return swig_r
}

type SwigcptrZmqMessageHandler uintptr

func (p SwigcptrZmqMessageHandler) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZmqMessageHandler) SwigIsZmqMessageHandler() {
}

func DeleteZmqMessageHandler(arg1 ZmqMessageHandler) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ZmqMessageHandler_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrZmqMessageHandler) HandleReceivedData(arg2 Std_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ZmqMessageHandler_handleReceivedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

type ZmqMessageHandler interface {
	Swigcptr() uintptr
	SwigIsZmqMessageHandler()
	HandleReceivedData(arg2 Std_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_)
}

type SwigcptrZmqServer uintptr

func (p SwigcptrZmqServer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZmqServer) SwigIsZmqServer() {
}

func _swig_getZmqServer_ZmqServer_DEFAULT_POP_BATCH_SIZE_ZmqServer() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ZmqServer_DEFAULT_POP_BATCH_SIZE_ZmqServer_swsscommon_2432462d295473d6())
	return swig_r
}

var ZmqServerDEFAULT_POP_BATCH_SIZE int = _swig_getZmqServer_ZmqServer_DEFAULT_POP_BATCH_SIZE_ZmqServer()

func NewZmqServer__SWIG_0(arg1 string) (_swig_ret ZmqServer) {
	var swig_r ZmqServer
	_swig_i_0 := arg1
	swig_r = (ZmqServer)(SwigcptrZmqServer(C._wrap_new_ZmqServer__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_418)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewZmqServer__SWIG_1(arg1 string, arg2 string) (_swig_ret ZmqServer) {
	var swig_r ZmqServer
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ZmqServer)(SwigcptrZmqServer(C._wrap_new_ZmqServer__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_419)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_420)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqServer(a ...interface{}) ZmqServer {
	argc := len(a)
	if argc == 1 {
		return NewZmqServer__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		return NewZmqServer__SWIG_1(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func DeleteZmqServer(arg1 ZmqServer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ZmqServer_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrZmqServer) RegisterMessageHandler(arg2 string, arg3 string, arg4 ZmqMessageHandler) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_ZmqServer_registerMessageHandler_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_421)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_422)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

type ZmqServer interface {
	Swigcptr() uintptr
	SwigIsZmqServer()
	RegisterMessageHandler(arg2 string, arg3 string, arg4 ZmqMessageHandler)
}

type SwigcptrZmqClient uintptr

func (p SwigcptrZmqClient) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZmqClient) SwigIsZmqClient() {
}

func NewZmqClient__SWIG_0(arg1 string) (_swig_ret ZmqClient) {
	var swig_r ZmqClient
	_swig_i_0 := arg1
	swig_r = (ZmqClient)(SwigcptrZmqClient(C._wrap_new_ZmqClient__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_423)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewZmqClient__SWIG_1(arg1 string, arg2 string) (_swig_ret ZmqClient) {
	var swig_r ZmqClient
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (ZmqClient)(SwigcptrZmqClient(C._wrap_new_ZmqClient__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_424)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_425)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqClient(a ...interface{}) ZmqClient {
	argc := len(a)
	if argc == 1 {
		return NewZmqClient__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		return NewZmqClient__SWIG_1(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func DeleteZmqClient(arg1 ZmqClient) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ZmqClient_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrZmqClient) IsConnected() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ZmqClient_isConnected_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqClient) Connect() {
	_swig_i_0 := arg1
	C._wrap_ZmqClient_connect_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrZmqClient) SendMsg(arg2 string, arg3 string, arg4 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_, arg5 Std_vector_Sl_char_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_ZmqClient_sendMsg_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_426)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_427)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), C.uintptr_t(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

type ZmqClient interface {
	Swigcptr() uintptr
	SwigIsZmqClient()
	IsConnected() (_swig_ret bool)
	Connect()
	SendMsg(arg2 string, arg3 string, arg4 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_, arg5 Std_vector_Sl_char_Sg_)
}

type SwigcptrZmqConsumerStateTable uintptr

func (p SwigcptrZmqConsumerStateTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZmqConsumerStateTable) SwigIsZmqConsumerStateTable() {
}

func _swig_getZmqConsumerStateTable_ZmqConsumerStateTable_DEFAULT_POP_BATCH_SIZE_ZmqConsumerStateTable() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ZmqConsumerStateTable_DEFAULT_POP_BATCH_SIZE_ZmqConsumerStateTable_swsscommon_2432462d295473d6())
	return swig_r
}

var ZmqConsumerStateTableDEFAULT_POP_BATCH_SIZE int = _swig_getZmqConsumerStateTable_ZmqConsumerStateTable_DEFAULT_POP_BATCH_SIZE_ZmqConsumerStateTable()

func NewZmqConsumerStateTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 ZmqServer, arg4 int, arg5 int, arg6 bool) (_swig_ret ZmqConsumerStateTable) {
	var swig_r ZmqConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (ZmqConsumerStateTable)(SwigcptrZmqConsumerStateTable(C._wrap_new_ZmqConsumerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_428)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C._Bool(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqConsumerStateTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 ZmqServer, arg4 int, arg5 int) (_swig_ret ZmqConsumerStateTable) {
	var swig_r ZmqConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (ZmqConsumerStateTable)(SwigcptrZmqConsumerStateTable(C._wrap_new_ZmqConsumerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_429)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqConsumerStateTable__SWIG_2(arg1 DBConnector, arg2 string, arg3 ZmqServer, arg4 int) (_swig_ret ZmqConsumerStateTable) {
	var swig_r ZmqConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (ZmqConsumerStateTable)(SwigcptrZmqConsumerStateTable(C._wrap_new_ZmqConsumerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_430)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqConsumerStateTable__SWIG_3(arg1 DBConnector, arg2 string, arg3 ZmqServer) (_swig_ret ZmqConsumerStateTable) {
	var swig_r ZmqConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (ZmqConsumerStateTable)(SwigcptrZmqConsumerStateTable(C._wrap_new_ZmqConsumerStateTable__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_431)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqConsumerStateTable(a ...interface{}) ZmqConsumerStateTable {
	argc := len(a)
	if argc == 3 {
		return NewZmqConsumerStateTable__SWIG_3(a[0].(DBConnector), a[1].(string), a[2].(ZmqServer))
	}
	if argc == 4 {
		return NewZmqConsumerStateTable__SWIG_2(a[0].(DBConnector), a[1].(string), a[2].(ZmqServer), a[3].(int))
	}
	if argc == 5 {
		return NewZmqConsumerStateTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(ZmqServer), a[3].(int), a[4].(int))
	}
	if argc == 6 {
		return NewZmqConsumerStateTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(ZmqServer), a[3].(int), a[4].(int), a[5].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrZmqConsumerStateTable) Pops__SWIG_0(arg2 KeyOpFieldsValuesQueue, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_ZmqConsumerStateTable_pops__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_432)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrZmqConsumerStateTable) Pops__SWIG_1(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ZmqConsumerStateTable_pops__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrZmqConsumerStateTable) Pops(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pops__SWIG_1(a[0].(KeyOpFieldsValuesQueue))
		return
	}
	if argc == 2 {
		p.Pops__SWIG_0(a[0].(KeyOpFieldsValuesQueue), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrZmqConsumerStateTable) GetFd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ZmqConsumerStateTable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_ZmqConsumerStateTable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ZmqConsumerStateTable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ZmqConsumerStateTable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ZmqConsumerStateTable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ZmqConsumerStateTable_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrZmqConsumerStateTable) DbUpdaterQueueSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ZmqConsumerStateTable_dbUpdaterQueueSize_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteZmqConsumerStateTable(arg1 ZmqConsumerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ZmqConsumerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrZmqConsumerStateTable) UpdateAfterRead() {
	C._wrap_ZmqConsumerStateTable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrZmqConsumerStateTable) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ZmqConsumerStateTable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrZmqConsumerStateTable) HandleReceivedData(arg1 Std_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ZmqConsumerStateTable_handleReceivedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrZmqConsumerStateTable) SwigIsSelectable() {
}

func (p SwigcptrZmqConsumerStateTable) SwigGetSelectable() Selectable {
	return SwigcptrSelectable(getSwigcptr(p))
}

func (arg1 SwigcptrZmqConsumerStateTable) SwigGetZmqMessageHandler() (_swig_ret ZmqMessageHandler) {
	var swig_r ZmqMessageHandler
	_swig_i_0 := arg1
	swig_r = (ZmqMessageHandler)(SwigcptrZmqMessageHandler(C._wrap_ZmqConsumerStateTable_SwigGetZmqMessageHandler_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type ZmqConsumerStateTable interface {
	Swigcptr() uintptr
	SwigIsZmqConsumerStateTable()
	Pops(a ...interface{})
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	GetDbConnector() (_swig_ret DBConnector)
	DbUpdaterQueueSize() (_swig_ret int64)
	UpdateAfterRead()
	GetPri() (_swig_ret int)
	HandleReceivedData(arg1 Std_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_)
	SwigIsSelectable()
	SwigGetSelectable() Selectable
	SwigGetZmqMessageHandler() (_swig_ret ZmqMessageHandler)
}

type SwigcptrTableBase uintptr

func (p SwigcptrTableBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableBase) SwigIsTableBase() {
}

func NewTableBase__SWIG_0(arg1 int, arg2 string) (_swig_ret TableBase) {
	var swig_r TableBase
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (TableBase)(SwigcptrTableBase(C._wrap_new_TableBase__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_435)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewTableBase__SWIG_1(arg1 string, arg2 string) (_swig_ret TableBase) {
	var swig_r TableBase
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (TableBase)(SwigcptrTableBase(C._wrap_new_TableBase__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_436)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_437)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewTableBase(a ...interface{}) TableBase {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return NewTableBase__SWIG_1(a[0].(string), a[1].(string))
	}
check_1:
	if argc == 2 {
		return NewTableBase__SWIG_0(a[0].(int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func TableBaseGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableBase_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetTableName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableBase_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetKeyName(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_TableBase_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_441)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableBase_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableBase_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetChannelName__SWIG_1(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_TableBase_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_445)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableBase) GetChannelName__SWIG_2(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_TableBase_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrTableBase) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteTableBase(arg1 TableBase) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableBase_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type TableBase interface {
	Swigcptr() uintptr
	SwigIsTableBase()
	GetTableName() (_swig_ret string)
	GetKeyName(arg2 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
}

type SwigcptrTableEntryWritable uintptr

func (p SwigcptrTableEntryWritable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableEntryWritable) SwigIsTableEntryWritable() {
}

func DeleteTableEntryWritable(arg1 TableEntryWritable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableEntryWritable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTableEntryWritable) Set__SWIG_0(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_TableEntryWritable_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_447)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_448)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_449)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrTableEntryWritable) Set__SWIG_1(arg2 string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_TableEntryWritable_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_450)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_451)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrTableEntryWritable) Set__SWIG_2(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_TableEntryWritable_set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_452)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrTableEntryWritable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTableEntryWritable) Delete__SWIG_0(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_TableEntryWritable_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_453)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_454)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_455)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrTableEntryWritable) Delete__SWIG_1(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_TableEntryWritable_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_456)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_457)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrTableEntryWritable) Delete__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_TableEntryWritable_delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_458)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrTableEntryWritable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Delete__SWIG_2(a[0].(string))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

type TableEntryWritable interface {
	Swigcptr() uintptr
	SwigIsTableEntryWritable()
	Set(a ...interface{})
	Delete(a ...interface{})
}

type SwigcptrTableEntryPoppable uintptr

func (p SwigcptrTableEntryPoppable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableEntryPoppable) SwigIsTableEntryPoppable() {
}

func DeleteTableEntryPoppable(arg1 TableEntryPoppable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableEntryPoppable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTableEntryPoppable) Pop__SWIG_0(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_TableEntryPoppable_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_459)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrTableEntryPoppable) Pop__SWIG_1(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_TableEntryPoppable_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrTableEntryPoppable) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTableEntryPoppable) Pops__SWIG_0(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_TableEntryPoppable_pops__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrTableEntryPoppable) Pops__SWIG_1(arg2 VectorString, arg3 VectorString, arg4 FieldValuePairsList, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	C._wrap_TableEntryPoppable_pops__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_460)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrTableEntryPoppable) Pops__SWIG_2(arg2 VectorString, arg3 VectorString, arg4 FieldValuePairsList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_TableEntryPoppable_pops__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrTableEntryPoppable) Pops(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pops__SWIG_0(a[0].(KeyOpFieldsValuesQueue))
		return
	}
	if argc == 3 {
		p.Pops__SWIG_2(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList))
		return
	}
	if argc == 4 {
		p.Pops__SWIG_1(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

type TableEntryPoppable interface {
	Swigcptr() uintptr
	SwigIsTableEntryPoppable()
	Pop(a ...interface{})
	Pops(a ...interface{})
}

type SwigcptrTableConsumable uintptr

func (p SwigcptrTableConsumable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableConsumable) SwigIsTableConsumable() {
}

func _swig_getTableConsumable_TableConsumable_DEFAULT_POP_BATCH_SIZE_TableConsumable() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_TableConsumable_DEFAULT_POP_BATCH_SIZE_TableConsumable_swsscommon_2432462d295473d6())
	return swig_r
}

var TableConsumableDEFAULT_POP_BATCH_SIZE int = _swig_getTableConsumable_TableConsumable_DEFAULT_POP_BATCH_SIZE_TableConsumable()

func DeleteTableConsumable(arg1 TableConsumable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableConsumable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func TableConsumableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableConsumable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TableConsumable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableConsumable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TableConsumable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_TableConsumable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableConsumable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTableConsumable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableConsumable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrTableConsumable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrTableConsumable) Pop__SWIG_0(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_TableConsumable_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_470)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrTableConsumable) Pop__SWIG_1(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TableConsumable_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrTableConsumable) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrTableConsumable) Pops__SWIG_0(arg1 KeyOpFieldsValuesQueue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_TableConsumable_pops__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrTableConsumable) Pops__SWIG_1(arg1 VectorString, arg2 VectorString, arg3 FieldValuePairsList, arg4 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_TableConsumable_pops__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_471)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (_swig_base SwigcptrTableConsumable) Pops__SWIG_2(arg1 VectorString, arg2 VectorString, arg3 FieldValuePairsList) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_TableConsumable_pops__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrTableConsumable) Pops(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pops__SWIG_0(a[0].(KeyOpFieldsValuesQueue))
		return
	}
	if argc == 3 {
		p.Pops__SWIG_2(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList))
		return
	}
	if argc == 4 {
		p.Pops__SWIG_1(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrTableConsumable) GetFd() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_TableConsumable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	swig_r = (uint64)(C._wrap_TableConsumable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) HasData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_TableConsumable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_TableConsumable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_TableConsumable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) UpdateAfterRead() {
	C._wrap_TableConsumable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrTableConsumable) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_TableConsumable_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrTableConsumable) Subscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_TableConsumable_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_473)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrTableConsumable) Psubscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_TableConsumable_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrTableConsumable) Punsubscribe(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_TableConsumable_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrTableConsumable) SetQueueLength(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_TableConsumable_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_type_476(_swig_i_0))
}

func (_swig_base SwigcptrTableConsumable) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_TableConsumable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrTableConsumable) SwigIsTableBase() {
}

func (p SwigcptrTableConsumable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrTableConsumable) SwigGetTableEntryPoppable() (_swig_ret TableEntryPoppable) {
	var swig_r TableEntryPoppable
	_swig_i_0 := arg1
	swig_r = (TableEntryPoppable)(SwigcptrTableEntryPoppable(C._wrap_TableConsumable_SwigGetTableEntryPoppable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrTableConsumable) SwigGetRedisSelect() (_swig_ret RedisSelect) {
	var swig_r RedisSelect
	_swig_i_0 := arg1
	swig_r = (RedisSelect)(SwigcptrRedisSelect(C._wrap_TableConsumable_SwigGetRedisSelect_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrTableConsumable) SwigGetSelectable() Selectable {
	return p.SwigGetRedisSelect().SwigGetSelectable()
}

type TableConsumable interface {
	Swigcptr() uintptr
	SwigIsTableConsumable()
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	Pop(a ...interface{})
	Pops(a ...interface{})
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	GetDbConnector() (_swig_ret DBConnector)
	Subscribe(arg1 DBConnector, arg2 string)
	Psubscribe(arg1 DBConnector, arg2 string)
	Punsubscribe(arg1 string)
	SetQueueLength(arg1 int64)
	GetPri() (_swig_ret int)
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableEntryPoppable() (_swig_ret TableEntryPoppable)
	SwigGetRedisSelect() (_swig_ret RedisSelect)
	SwigGetSelectable() Selectable
}

type SwigcptrTableEntryEnumerable uintptr

func (p SwigcptrTableEntryEnumerable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableEntryEnumerable) SwigIsTableEntryEnumerable() {
}

func DeleteTableEntryEnumerable(arg1 TableEntryEnumerable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableEntryEnumerable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTableEntryEnumerable) Get(arg2 string, arg3 FieldValuePairs) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_TableEntryEnumerable_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_477)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrTableEntryEnumerable) Hget(arg2 string, arg3 string, arg4 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_TableEntryEnumerable_hget_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_478)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_479)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrTableEntryEnumerable) GetKeys(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_TableEntryEnumerable_getKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrTableEntryEnumerable) GetContent(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_TableEntryEnumerable_getContent_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

type TableEntryEnumerable interface {
	Swigcptr() uintptr
	SwigIsTableEntryEnumerable()
	Get(arg2 string, arg3 FieldValuePairs) (_swig_ret bool)
	Hget(arg2 string, arg3 string, arg4 *string) (_swig_ret bool)
	GetKeys(arg2 VectorString)
	GetContent(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
}

func GetDEFAULT_DB_TTL() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_DEFAULT_DB_TTL_get_swsscommon_2432462d295473d6())
	return swig_r
}

type SwigcptrTable uintptr

func (p SwigcptrTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTable) SwigIsTable() {
}

func NewTable__SWIG_0(arg1 DBConnector, arg2 string) (_swig_ret Table) {
	var swig_r Table
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (Table)(SwigcptrTable(C._wrap_new_Table__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_481)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewTable__SWIG_1(arg1 RedisPipeline, arg2 string, arg3 bool) (_swig_ret Table) {
	var swig_r Table
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Table)(SwigcptrTable(C._wrap_new_Table__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_482)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewTable(a ...interface{}) Table {
	argc := len(a)
	if argc == 2 {
		return NewTable__SWIG_0(a[0].(DBConnector), a[1].(string))
	}
	if argc == 3 {
		return NewTable__SWIG_1(a[0].(RedisPipeline), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteTable(arg1 Table) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Table_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTable) Set__SWIG_0(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Table_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_483)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_484)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_485)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrTable) Set__SWIG_1(arg2 string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_Table_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_486)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_487)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrTable) Set__SWIG_2(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Table_set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_488)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrTable) Set__SWIG_3(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string, arg6 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Table_set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_489)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_490)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_491)(unsafe.Pointer(&_swig_i_4)), C.swig_type_492(_swig_i_5))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (p SwigcptrTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	if argc == 5 {
		p.Set__SWIG_3(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string), a[4].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTable) Delete__SWIG_0(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Table_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_493)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_494)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_495)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrTable) Delete__SWIG_1(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Table_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_496)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_497)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrTable) Delete__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Table_delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_498)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Delete__SWIG_2(a[0].(string))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTable) Ttl(arg2 string, arg3 *int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Table_ttl_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_499)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrTable) Hdel__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Table_hdel__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_500)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_501)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_502)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_503)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrTable) Hdel__SWIG_1(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Table_hdel__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_504)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_505)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_506)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrTable) Hdel__SWIG_2(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Table_hdel__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_507)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_508)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrTable) Hdel(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Hdel__SWIG_2(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Hdel__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	if argc == 4 {
		p.Hdel__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTable) Get(arg2 string, arg3 FieldValuePairs) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_Table_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_509)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrTable) Hget(arg2 string, arg3 string, arg4 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_Table_hget_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_510)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_511)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrTable) Hset__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Table_hset__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_512)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_513)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_514)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_515)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_516)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrTable) Hset__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_Table_hset__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_517)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_518)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_519)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_520)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrTable) Hset__SWIG_2(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Table_hset__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_521)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_522)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_523)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (p SwigcptrTable) Hset(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.Hset__SWIG_2(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	if argc == 4 {
		p.Hset__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
		return
	}
	if argc == 5 {
		p.Hset__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrTable) GetKeys(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Table_getKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrTable) SetBuffered(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Table_setBuffered_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrTable) Flush() {
	_swig_i_0 := arg1
	C._wrap_Table_flush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrTable) Dump(arg2 GetTableResult) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Table_dump_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func TableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Table_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Table_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Table_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Table_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_Table_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Table_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Table_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrTable) GetContent(arg1 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Table_getContent_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (p SwigcptrTable) SwigIsTableBase() {
}

func (p SwigcptrTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrTable) SwigGetTableEntryEnumerable() (_swig_ret TableEntryEnumerable) {
	var swig_r TableEntryEnumerable
	_swig_i_0 := arg1
	swig_r = (TableEntryEnumerable)(SwigcptrTableEntryEnumerable(C._wrap_Table_SwigGetTableEntryEnumerable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type Table interface {
	Swigcptr() uintptr
	SwigIsTable()
	Set(a ...interface{})
	Delete(a ...interface{})
	Ttl(arg2 string, arg3 *int64) (_swig_ret bool)
	Hdel(a ...interface{})
	Get(arg2 string, arg3 FieldValuePairs) (_swig_ret bool)
	Hget(arg2 string, arg3 string, arg4 *string) (_swig_ret bool)
	Hset(a ...interface{})
	GetKeys(arg2 VectorString)
	SetBuffered(arg2 bool)
	Flush()
	Dump(arg2 GetTableResult)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetContent(arg1 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableEntryEnumerable() (_swig_ret TableEntryEnumerable)
}

type SwigcptrTableName_KeyValueOpQueues uintptr

func (p SwigcptrTableName_KeyValueOpQueues) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableName_KeyValueOpQueues) SwigIsTableName_KeyValueOpQueues() {
}

func NewTableName_KeyValueOpQueues(arg1 string) (_swig_ret TableName_KeyValueOpQueues) {
	var swig_r TableName_KeyValueOpQueues
	_swig_i_0 := arg1
	swig_r = (TableName_KeyValueOpQueues)(SwigcptrTableName_KeyValueOpQueues(C._wrap_new_TableName_KeyValueOpQueues_swsscommon_2432462d295473d6(*(*C.swig_type_531)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrTableName_KeyValueOpQueues) GetKeyValueOpQueueTableName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableName_KeyValueOpQueues_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteTableName_KeyValueOpQueues(arg1 TableName_KeyValueOpQueues) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableName_KeyValueOpQueues_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type TableName_KeyValueOpQueues interface {
	Swigcptr() uintptr
	SwigIsTableName_KeyValueOpQueues()
	GetKeyValueOpQueueTableName() (_swig_ret string)
}

type SwigcptrTableName_KeySet uintptr

func (p SwigcptrTableName_KeySet) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTableName_KeySet) SwigIsTableName_KeySet() {
}

func NewTableName_KeySet(arg1 string) (_swig_ret TableName_KeySet) {
	var swig_r TableName_KeySet
	_swig_i_0 := arg1
	swig_r = (TableName_KeySet)(SwigcptrTableName_KeySet(C._wrap_new_TableName_KeySet_swsscommon_2432462d295473d6(*(*C.swig_type_533)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func (arg1 SwigcptrTableName_KeySet) GetKeySetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableName_KeySet_getKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableName_KeySet) GetDelKeySetName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableName_KeySet_getDelKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrTableName_KeySet) GetStateHashPrefix() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_TableName_KeySet_getStateHashPrefix_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteTableName_KeySet(arg1 TableName_KeySet) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_TableName_KeySet_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type TableName_KeySet interface {
	Swigcptr() uintptr
	SwigIsTableName_KeySet()
	GetKeySetName() (_swig_ret string)
	GetDelKeySetName() (_swig_ret string)
	GetStateHashPrefix() (_swig_ret string)
}

type SwigcptrLuaTable uintptr

func (p SwigcptrLuaTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLuaTable) SwigIsLuaTable() {
}

func NewLuaTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 string, arg4 VectorString) (_swig_ret LuaTable) {
	var swig_r LuaTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (LuaTable)(SwigcptrLuaTable(C._wrap_new_LuaTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_537)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_538)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewLuaTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 string) (_swig_ret LuaTable) {
	var swig_r LuaTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (LuaTable)(SwigcptrLuaTable(C._wrap_new_LuaTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_539)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_540)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewLuaTable(a ...interface{}) LuaTable {
	argc := len(a)
	if argc == 3 {
		return NewLuaTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return NewLuaTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(string), a[3].(VectorString))
	}
	panic("No match for overloaded function call")
}

func DeleteLuaTable(arg1 LuaTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_LuaTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLuaTable) Get(arg2 VectorString, arg3 FieldValuePairs) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_LuaTable_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrLuaTable) Hget(arg2 VectorString, arg3 string, arg4 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_LuaTable_hget_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_541)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func LuaTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LuaTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_LuaTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LuaTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_LuaTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_LuaTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LuaTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrLuaTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_LuaTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrLuaTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrLuaTable) SwigIsTableBase() {
}

func (p SwigcptrLuaTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

type LuaTable interface {
	Swigcptr() uintptr
	SwigIsLuaTable()
	Get(arg2 VectorString, arg3 FieldValuePairs) (_swig_ret bool)
	Hget(arg2 VectorString, arg3 string, arg4 *string) (_swig_ret bool)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	SwigIsTableBase()
	SwigGetTableBase() TableBase
}

type SwigcptrCounterTable uintptr

func (p SwigcptrCounterTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCounterTable) SwigIsCounterTable() {
}

func NewCounterTable__SWIG_0(arg1 DBConnector, arg2 string) (_swig_ret CounterTable) {
	var swig_r CounterTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (CounterTable)(SwigcptrCounterTable(C._wrap_new_CounterTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_549)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewCounterTable__SWIG_1(arg1 DBConnector) (_swig_ret CounterTable) {
	var swig_r CounterTable
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (CounterTable)(SwigcptrCounterTable(C._wrap_new_CounterTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewCounterTable(a ...interface{}) CounterTable {
	argc := len(a)
	if argc == 1 {
		return NewCounterTable__SWIG_1(a[0].(DBConnector))
	}
	if argc == 2 {
		return NewCounterTable__SWIG_0(a[0].(DBConnector), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrCounterTable) Get(arg2 Counter, arg3 string, arg4 FieldValuePairs) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (bool)(C._wrap_CounterTable_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_550)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrCounterTable) Hget(arg2 Counter, arg3 string, arg4 string, arg5 *string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (bool)(C._wrap_CounterTable_hget_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_551)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_552)(unsafe.Pointer(&_swig_i_3)), C.swig_voidp(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrCounterTable) GetCountersDB() (_swig_ret Std_unique_ptr_Sl_swss_DBConnector_Sg_) {
	var swig_r Std_unique_ptr_Sl_swss_DBConnector_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_unique_ptr_Sl_swss_DBConnector_Sg_)(SwigcptrStd_unique_ptr_Sl_swss_DBConnector_Sg_(C._wrap_CounterTable_getCountersDB_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrCounterTable) GetGbcountersDB() (_swig_ret Std_unique_ptr_Sl_swss_DBConnector_Sg_) {
	var swig_r Std_unique_ptr_Sl_swss_DBConnector_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_unique_ptr_Sl_swss_DBConnector_Sg_)(SwigcptrStd_unique_ptr_Sl_swss_DBConnector_Sg_(C._wrap_CounterTable_getGbcountersDB_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteCounterTable(arg1 CounterTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_CounterTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func CounterTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CounterTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CounterTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CounterTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CounterTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_CounterTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CounterTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrCounterTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CounterTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrCounterTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrCounterTable) SwigIsTableBase() {
}

func (p SwigcptrCounterTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

type CounterTable interface {
	Swigcptr() uintptr
	SwigIsCounterTable()
	Get(arg2 Counter, arg3 string, arg4 FieldValuePairs) (_swig_ret bool)
	Hget(arg2 Counter, arg3 string, arg4 string, arg5 *string) (_swig_ret bool)
	GetCountersDB() (_swig_ret Std_unique_ptr_Sl_swss_DBConnector_Sg_)
	GetGbcountersDB() (_swig_ret Std_unique_ptr_Sl_swss_DBConnector_Sg_)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	SwigIsTableBase()
	SwigGetTableBase() TableBase
}

type _swig_DirectorCounter struct {
	SwigcptrCounter
	v interface{}
}

func (p *_swig_DirectorCounter) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrCounter)
}

func (p *_swig_DirectorCounter) SwigIsCounter() {
}

func (p *_swig_DirectorCounter) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorCounter(v interface{}) Counter {
	p := &_swig_DirectorCounter{0, v}
	p.SwigcptrCounter = SwigcptrCounter(C._wrap__swig_NewDirectorCounterCounter_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p))))
	return p
}

type _swig_DirectorInterfaceCounterGetLuaScript interface {
	GetLuaScript() string
}

func (swig_p *_swig_DirectorCounter) GetLuaScript() string {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCounterGetLuaScript); swig_ok {
		return swig_g.GetLuaScript()
	}
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorCounter_upcall_GetLuaScript_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrCounter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DirectorCounterGetLuaScript(swig_p Counter) string {
	var swig_r string
	swig_r_p := C._wrap__swig_DirectorCounter_upcall_GetLuaScript_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorCounter).SwigcptrCounter))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

//export Swig_DirectorCounter_callback_getLuaScript_swsscommon_2432462d295473d6
func Swig_DirectorCounter_callback_getLuaScript_swsscommon_2432462d295473d6(swig_c int) (swig_result string) {
	var swig_r string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCounter)
	swig_r = swig_p.GetLuaScript()
	var swig_r_1 string

	{
		p := Swig_malloc(len(swig_r))
		s := (*[1 << 30]byte)(unsafe.Pointer(p))[:len(swig_r)]
		copy(s, swig_r)
		swig_r_1 = *(*string)(unsafe.Pointer(&s))
	}

	return swig_r_1
}

type _swig_DirectorInterfaceCounterGetLuaArgv interface {
	GetLuaArgv() VectorString
}

func (swig_p *_swig_DirectorCounter) GetLuaArgv() VectorString {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCounterGetLuaArgv); swig_ok {
		return swig_g.GetLuaArgv()
	}
	var swig_r VectorString
	swig_r = (VectorString)((SwigcptrVectorString)(C._wrap__swig_DirectorCounter_upcall_GetLuaArgv_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrCounter))))
	return swig_r
}

func DirectorCounterGetLuaArgv(swig_p Counter) VectorString {
	var swig_r VectorString
	swig_r = (VectorString)((SwigcptrVectorString)(C._wrap__swig_DirectorCounter_upcall_GetLuaArgv_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorCounter).SwigcptrCounter))))
	return swig_r
}

//export Swig_DirectorCounter_callback_getLuaArgv_swsscommon_2432462d295473d6
func Swig_DirectorCounter_callback_getLuaArgv_swsscommon_2432462d295473d6(swig_c int) (swig_result SwigcptrVectorString) {
	var swig_r SwigcptrVectorString
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCounter)
	swig_r = SwigcptrVectorString(getSwigcptr(swig_p.GetLuaArgv()))
	return swig_r
}

type _swig_DirectorInterfaceCounterUsingLuaTable interface {
	UsingLuaTable(CounterTable, string) bool
}

func (swig_p *_swig_DirectorCounter) UsingLuaTable(arg0 CounterTable, name string) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCounterUsingLuaTable); swig_ok {
		return swig_g.UsingLuaTable(arg0, name)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg0)
	_swig_i_1 := name
	swig_r = (bool)(C._wrap__swig_DirectorCounter_upcall_UsingLuaTable_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrCounter), C.uintptr_t(_swig_i_0), *(*C.swig_type_561)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func DirectorCounterUsingLuaTable(swig_p Counter, arg0 CounterTable, name string) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg0)
	_swig_i_1 := name
	swig_r = (bool)(C._wrap__swig_DirectorCounter_upcall_UsingLuaTable_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorCounter).SwigcptrCounter), C.uintptr_t(_swig_i_0), *(*C.swig_type_561)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

//export Swig_DirectorCounter_callback_usingLuaTable_swsscommon_2432462d295473d6
func Swig_DirectorCounter_callback_usingLuaTable_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr, arg3 string) (swig_result bool) {
	var swig_r bool
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCounter)
	_swig_i_1 = swigCopyString(arg3)
	swig_r = swig_p.UsingLuaTable(SwigcptrCounterTable(arg2), _swig_i_1)
	return swig_r
}

type _swig_DirectorInterfaceCounterGetLuaKeys interface {
	GetLuaKeys(CounterTable, string) VectorString
}

func (swig_p *_swig_DirectorCounter) GetLuaKeys(arg0 CounterTable, name string) VectorString {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCounterGetLuaKeys); swig_ok {
		return swig_g.GetLuaKeys(arg0, name)
	}
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg0)
	_swig_i_1 := name
	swig_r = (VectorString)((SwigcptrVectorString)(C._wrap__swig_DirectorCounter_upcall_GetLuaKeys_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrCounter), C.uintptr_t(_swig_i_0), *(*C.swig_type_562)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

func DirectorCounterGetLuaKeys(swig_p Counter, arg0 CounterTable, name string) VectorString {
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg0)
	_swig_i_1 := name
	swig_r = (VectorString)((SwigcptrVectorString)(C._wrap__swig_DirectorCounter_upcall_GetLuaKeys_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorCounter).SwigcptrCounter), C.uintptr_t(_swig_i_0), *(*C.swig_type_562)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return swig_r
}

//export Swig_DirectorCounter_callback_getLuaKeys_swsscommon_2432462d295473d6
func Swig_DirectorCounter_callback_getLuaKeys_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr, arg3 string) (swig_result SwigcptrVectorString) {
	var swig_r SwigcptrVectorString
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCounter)
	_swig_i_1 = swigCopyString(arg3)
	swig_r = SwigcptrVectorString(getSwigcptr(swig_p.GetLuaKeys(SwigcptrCounterTable(arg2), _swig_i_1)))
	return swig_r
}

type _swig_DirectorInterfaceCounterGetKey interface {
	GetKey(CounterTable, string) CounterKeyPair
}

func (swig_p *_swig_DirectorCounter) GetKey(arg0 CounterTable, name string) CounterKeyPair {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceCounterGetKey); swig_ok {
		return swig_g.GetKey(arg0, name)
	}
	panic("call to pure virtual method")
}

//export Swig_DirectorCounter_callback_getKey_swsscommon_2432462d295473d6
func Swig_DirectorCounter_callback_getKey_swsscommon_2432462d295473d6(swig_c int, arg0 uintptr, name string) (swig_result SwigcptrCounterKeyPair) {
	var swig_r SwigcptrCounterKeyPair
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorCounter)
	_swig_i_1 = swigCopyString(name)
	swig_r = SwigcptrCounterKeyPair(getSwigcptr(swig_p.GetKey(SwigcptrCounterTable(arg0), _swig_i_1)))
	return swig_r
}

func DeleteDirectorCounter(arg1 Counter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorCounter_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Counter_swsscommon_2432462d295473d6
func Swiggo_DeleteDirector_Counter_swsscommon_2432462d295473d6(c int) {
	swigDirectorLookup(c).(*_swig_DirectorCounter).SwigcptrCounter = 0
	swigDirectorDelete(c)
}

type SwigcptrCounter uintptr

func (p SwigcptrCounter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCounter) SwigIsCounter() {
}

func (p SwigcptrCounter) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrCounter) GetLuaScript() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Counter_getLuaScript_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrCounter) GetLuaArgv() (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_Counter_getLuaArgv_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrCounter) UsingLuaTable(arg2 CounterTable, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Counter_usingLuaTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_561)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrCounter) GetLuaKeys(arg2 CounterTable, arg3 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_Counter_getLuaKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_562)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrCounter) GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_Counter_getKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_564)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func DeleteCounter(arg1 Counter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Counter_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type Counter interface {
	Swigcptr() uintptr
	SwigIsCounter()
	DirectorInterface() interface{}
	GetLuaScript() (_swig_ret string)
	GetLuaArgv() (_swig_ret VectorString)
	UsingLuaTable(arg2 CounterTable, arg3 string) (_swig_ret bool)
	GetLuaKeys(arg2 CounterTable, arg3 string) (_swig_ret VectorString)
	GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair)
}

type SwigcptrPortCounter uintptr

func (p SwigcptrPortCounter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPortCounter) SwigIsPortCounter() {
}

type SwssPortCounterMode int

func _swig_getPortCounter_Mode_UNION_PortCounter() (_swig_ret SwssPortCounterMode) {
	var swig_r SwssPortCounterMode
	swig_r = (SwssPortCounterMode)(C._wrap_Mode_UNION_PortCounter_swsscommon_2432462d295473d6())
	return swig_r
}

var PortCounterMode_UNION SwssPortCounterMode = _swig_getPortCounter_Mode_UNION_PortCounter()

func _swig_getPortCounter_Mode_ASIC_PortCounter() (_swig_ret SwssPortCounterMode) {
	var swig_r SwssPortCounterMode
	swig_r = (SwssPortCounterMode)(C._wrap_Mode_ASIC_PortCounter_swsscommon_2432462d295473d6())
	return swig_r
}

var PortCounterMode_ASIC SwssPortCounterMode = _swig_getPortCounter_Mode_ASIC_PortCounter()

func _swig_getPortCounter_Mode_SYSTEMSIDE_PortCounter() (_swig_ret SwssPortCounterMode) {
	var swig_r SwssPortCounterMode
	swig_r = (SwssPortCounterMode)(C._wrap_Mode_SYSTEMSIDE_PortCounter_swsscommon_2432462d295473d6())
	return swig_r
}

var PortCounterMode_SYSTEMSIDE SwssPortCounterMode = _swig_getPortCounter_Mode_SYSTEMSIDE_PortCounter()

func _swig_getPortCounter_Mode_LINESIDE_PortCounter() (_swig_ret SwssPortCounterMode) {
	var swig_r SwssPortCounterMode
	swig_r = (SwssPortCounterMode)(C._wrap_Mode_LINESIDE_PortCounter_swsscommon_2432462d295473d6())
	return swig_r
}

var PortCounterMode_LINESIDE SwssPortCounterMode = _swig_getPortCounter_Mode_LINESIDE_PortCounter()

func NewPortCounter__SWIG_0(arg1 SwssPortCounterMode) (_swig_ret PortCounter) {
	var swig_r PortCounter
	_swig_i_0 := arg1
	swig_r = (PortCounter)(SwigcptrPortCounter(C._wrap_new_PortCounter__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewPortCounter__SWIG_1() (_swig_ret PortCounter) {
	var swig_r PortCounter
	swig_r = (PortCounter)(SwigcptrPortCounter(C._wrap_new_PortCounter__SWIG_1_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewPortCounter(a ...interface{}) PortCounter {
	argc := len(a)
	if argc == 0 {
		return NewPortCounter__SWIG_1()
	}
	if argc == 1 {
		return NewPortCounter__SWIG_0(a[0].(SwssPortCounterMode))
	}
	panic("No match for overloaded function call")
}

func DeletePortCounter(arg1 PortCounter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PortCounter_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrPortCounter) GetLuaScript() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PortCounter_getLuaScript_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrPortCounter) UsingLuaTable(arg2 CounterTable, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_PortCounter_usingLuaTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_566)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrPortCounter) GetLuaKeys(arg2 CounterTable, arg3 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_PortCounter_getLuaKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_567)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrPortCounter) GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_PortCounter_getKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_568)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func PortCounterKeyCacheInstance() (_swig_ret KeyStringCache) {
	var swig_r KeyStringCache
	swig_r = (KeyStringCache)(SwigcptrKeyStringCache(C._wrap_PortCounter_keyCacheInstance_swsscommon_2432462d295473d6()))
	return swig_r
}

func (_swig_base SwigcptrPortCounter) GetLuaArgv() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_PortCounter_getLuaArgv_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrPortCounter) SwigIsCounter() {
}

func (p SwigcptrPortCounter) SwigGetCounter() Counter {
	return SwigcptrCounter(getSwigcptr(p))
}

type PortCounter interface {
	Swigcptr() uintptr
	SwigIsPortCounter()
	GetLuaScript() (_swig_ret string)
	UsingLuaTable(arg2 CounterTable, arg3 string) (_swig_ret bool)
	GetLuaKeys(arg2 CounterTable, arg3 string) (_swig_ret VectorString)
	GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair)
	GetLuaArgv() (_swig_ret VectorString)
	SwigIsCounter()
	SwigGetCounter() Counter
}

type SwigcptrMacsecCounter uintptr

func (p SwigcptrMacsecCounter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMacsecCounter) SwigIsMacsecCounter() {
}

func NewMacsecCounter() (_swig_ret MacsecCounter) {
	var swig_r MacsecCounter
	swig_r = (MacsecCounter)(SwigcptrMacsecCounter(C._wrap_new_MacsecCounter_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteMacsecCounter(arg1 MacsecCounter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_MacsecCounter_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMacsecCounter) GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_MacsecCounter_getKey_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_569)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func MacsecCounterKeyCacheInstance() (_swig_ret KeyPairCache) {
	var swig_r KeyPairCache
	swig_r = (KeyPairCache)(SwigcptrKeyPairCache(C._wrap_MacsecCounter_keyCacheInstance_swsscommon_2432462d295473d6()))
	return swig_r
}

func (_swig_base SwigcptrMacsecCounter) GetLuaScript() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_MacsecCounter_getLuaScript_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrMacsecCounter) GetLuaArgv() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_MacsecCounter_getLuaArgv_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrMacsecCounter) UsingLuaTable(arg1 CounterTable, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MacsecCounter_usingLuaTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_561)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (_swig_base SwigcptrMacsecCounter) GetLuaKeys(arg1 CounterTable, arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_MacsecCounter_getLuaKeys_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_562)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrMacsecCounter) SwigIsCounter() {
}

func (p SwigcptrMacsecCounter) SwigGetCounter() Counter {
	return SwigcptrCounter(getSwigcptr(p))
}

type MacsecCounter interface {
	Swigcptr() uintptr
	SwigIsMacsecCounter()
	GetKey(arg2 CounterTable, arg3 string) (_swig_ret CounterKeyPair)
	GetLuaScript() (_swig_ret string)
	GetLuaArgv() (_swig_ret VectorString)
	UsingLuaTable(arg1 CounterTable, arg2 string) (_swig_ret bool)
	GetLuaKeys(arg1 CounterTable, arg2 string) (_swig_ret VectorString)
	SwigIsCounter()
	SwigGetCounter() Counter
}

type SwigcptrCounterKeyPair uintptr

func (p SwigcptrCounterKeyPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCounterKeyPair) SwigIsCounterKeyPair() {
}

func NewCounterKeyPair__SWIG_0() (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_new_CounterKeyPair__SWIG_0_swsscommon_2432462d295473d6()))
	return swig_r
}

func NewCounterKeyPair__SWIG_1(arg1 int, arg2 string) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_new_CounterKeyPair__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), *(*C.swig_type_571)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewCounterKeyPair__SWIG_2(arg1 CounterKeyPair) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_new_CounterKeyPair__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewCounterKeyPair(a ...interface{}) CounterKeyPair {
	argc := len(a)
	if argc == 0 {
		return NewCounterKeyPair__SWIG_0()
	}
	if argc == 1 {
		return NewCounterKeyPair__SWIG_2(a[0].(CounterKeyPair))
	}
	if argc == 2 {
		return NewCounterKeyPair__SWIG_1(a[0].(int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrCounterKeyPair) SetFirst(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CounterKeyPair_first_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrCounterKeyPair) GetFirst() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_CounterKeyPair_first_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrCounterKeyPair) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_CounterKeyPair_second_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_572)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrCounterKeyPair) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_CounterKeyPair_second_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteCounterKeyPair(arg1 CounterKeyPair) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_CounterKeyPair_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type CounterKeyPair interface {
	Swigcptr() uintptr
	SwigIsCounterKeyPair()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrKeyStringCache uintptr

func (p SwigcptrKeyStringCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKeyStringCache) SwigIsKeyStringCache() {
}

func NewKeyStringCache(arg1 Std_function_Sl_void_Sp_swss_CounterTable_SS_const_SA__SP__Sg_) (_swig_ret KeyStringCache) {
	var swig_r KeyStringCache
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (KeyStringCache)(SwigcptrKeyStringCache(C._wrap_new_KeyStringCache_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKeyStringCache) Enabled() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_KeyStringCache_enabled_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyStringCache) Enable(arg2 CounterTable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyStringCache_enable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrKeyStringCache) Disable() {
	_swig_i_0 := arg1
	C._wrap_KeyStringCache_disable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyStringCache) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_KeyStringCache_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyStringCache) Clear() {
	_swig_i_0 := arg1
	C._wrap_KeyStringCache_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyStringCache) At(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_KeyStringCache_at_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_575)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrKeyStringCache) Insert(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_KeyStringCache_insert_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_576)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_577)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrKeyStringCache) Refresh(arg2 CounterTable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyStringCache_refresh_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteKeyStringCache(arg1 KeyStringCache) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_KeyStringCache_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type KeyStringCache interface {
	Swigcptr() uintptr
	SwigIsKeyStringCache()
	Enabled() (_swig_ret bool)
	Enable(arg2 CounterTable)
	Disable()
	Empty() (_swig_ret bool)
	Clear()
	At(arg2 string) (_swig_ret string)
	Insert(arg2 string, arg3 string)
	Refresh(arg2 CounterTable)
}

type SwigcptrKeyPairCache uintptr

func (p SwigcptrKeyPairCache) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKeyPairCache) SwigIsKeyPairCache() {
}

func NewKeyPairCache(arg1 Std_function_Sl_void_Sp_swss_CounterTable_SS_const_SA__SP__Sg_) (_swig_ret KeyPairCache) {
	var swig_r KeyPairCache
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (KeyPairCache)(SwigcptrKeyPairCache(C._wrap_new_KeyPairCache_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrKeyPairCache) Enabled() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_KeyPairCache_enabled_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyPairCache) Enable(arg2 CounterTable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyPairCache_enable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrKeyPairCache) Disable() {
	_swig_i_0 := arg1
	C._wrap_KeyPairCache_disable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyPairCache) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_KeyPairCache_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrKeyPairCache) Clear() {
	_swig_i_0 := arg1
	C._wrap_KeyPairCache_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrKeyPairCache) At(arg2 string) (_swig_ret CounterKeyPair) {
	var swig_r CounterKeyPair
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (CounterKeyPair)(SwigcptrCounterKeyPair(C._wrap_KeyPairCache_at_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_578)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKeyPairCache) Insert(arg2 string, arg3 CounterKeyPair) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_KeyPairCache_insert_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_579)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrKeyPairCache) Refresh(arg2 CounterTable) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_KeyPairCache_refresh_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteKeyPairCache(arg1 KeyPairCache) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_KeyPairCache_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type KeyPairCache interface {
	Swigcptr() uintptr
	SwigIsKeyPairCache()
	Enabled() (_swig_ret bool)
	Enable(arg2 CounterTable)
	Disable()
	Empty() (_swig_ret bool)
	Clear()
	At(arg2 string) (_swig_ret CounterKeyPair)
	Insert(arg2 string, arg3 CounterKeyPair)
	Refresh(arg2 CounterTable)
}

type SwigcptrProducerTable uintptr

func (p SwigcptrProducerTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrProducerTable) SwigIsProducerTable() {
}

func NewProducerTable__SWIG_0(arg1 DBConnector, arg2 string) (_swig_ret ProducerTable) {
	var swig_r ProducerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ProducerTable)(SwigcptrProducerTable(C._wrap_new_ProducerTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_580)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerTable__SWIG_1(arg1 RedisPipeline, arg2 string, arg3 bool) (_swig_ret ProducerTable) {
	var swig_r ProducerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (ProducerTable)(SwigcptrProducerTable(C._wrap_new_ProducerTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_581)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerTable__SWIG_2(arg1 RedisPipeline, arg2 string) (_swig_ret ProducerTable) {
	var swig_r ProducerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ProducerTable)(SwigcptrProducerTable(C._wrap_new_ProducerTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_582)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerTable__SWIG_3(arg1 DBConnector, arg2 string, arg3 string) (_swig_ret ProducerTable) {
	var swig_r ProducerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (ProducerTable)(SwigcptrProducerTable(C._wrap_new_ProducerTable__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_583)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_584)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewProducerTable(a ...interface{}) ProducerTable {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewProducerTable__SWIG_0(a[0].(DBConnector), a[1].(string))
	}
check_1:
	if argc == 2 {
		return NewProducerTable__SWIG_2(a[0].(RedisPipeline), a[1].(string))
	}
	if argc == 3 {
		if _, ok := a[0].(RedisPipeline); !ok {
			goto check_3
		}
		if _, ok := a[2].(bool); !ok {
			goto check_3
		}
		return NewProducerTable__SWIG_1(a[0].(RedisPipeline), a[1].(string), a[2].(bool))
	}
check_3:
	if argc == 3 {
		return NewProducerTable__SWIG_3(a[0].(DBConnector), a[1].(string), a[2].(string))
	}
	panic("No match for overloaded function call")
}

func DeleteProducerTable(arg1 ProducerTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ProducerTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProducerTable) SetBuffered(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ProducerTable_setBuffered_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrProducerTable) Set__SWIG_0(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ProducerTable_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_585)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_586)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_587)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrProducerTable) Set__SWIG_1(arg2 string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ProducerTable_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_588)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_589)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrProducerTable) Set__SWIG_2(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ProducerTable_set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_590)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrProducerTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProducerTable) Delete__SWIG_0(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_ProducerTable_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_591)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_592)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_593)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrProducerTable) Delete__SWIG_1(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ProducerTable_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_594)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_595)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrProducerTable) Delete__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ProducerTable_delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_596)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (p SwigcptrProducerTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Delete__SWIG_2(a[0].(string))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProducerTable) Flush() {
	_swig_i_0 := arg1
	C._wrap_ProducerTable_flush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func ProducerTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrProducerTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrProducerTable) GetKeyValueOpQueueTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerTable_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrProducerTable) SwigIsTableBase() {
}

func (p SwigcptrProducerTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrProducerTable) SwigGetTableName_KeyValueOpQueues() (_swig_ret TableName_KeyValueOpQueues) {
	var swig_r TableName_KeyValueOpQueues
	_swig_i_0 := arg1
	swig_r = (TableName_KeyValueOpQueues)(SwigcptrTableName_KeyValueOpQueues(C._wrap_ProducerTable_SwigGetTableName_KeyValueOpQueues_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type ProducerTable interface {
	Swigcptr() uintptr
	SwigIsProducerTable()
	SetBuffered(arg2 bool)
	Set(a ...interface{})
	Delete(a ...interface{})
	Flush()
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetKeyValueOpQueueTableName() (_swig_ret string)
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableName_KeyValueOpQueues() (_swig_ret TableName_KeyValueOpQueues)
}

type _swig_DirectorProducerStateTable struct {
	SwigcptrProducerStateTable
	v interface{}
}

func (p *_swig_DirectorProducerStateTable) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrProducerStateTable)
}

func (p *_swig_DirectorProducerStateTable) SwigIsProducerStateTable() {
}

func (p *_swig_DirectorProducerStateTable) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorProducerStateTable__SWIG_0(v interface{}, arg1 DBConnector, arg2 string) ProducerStateTable {
	p := &_swig_DirectorProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	p.SwigcptrProducerStateTable = SwigcptrProducerStateTable(C._wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_605)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorProducerStateTable__SWIG_1(v interface{}, arg1 RedisPipeline, arg2 string, arg3 bool) ProducerStateTable {
	p := &_swig_DirectorProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	p.SwigcptrProducerStateTable = SwigcptrProducerStateTable(C._wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_606)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorProducerStateTable__SWIG_2(v interface{}, arg1 RedisPipeline, arg2 string) ProducerStateTable {
	p := &_swig_DirectorProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	p.SwigcptrProducerStateTable = SwigcptrProducerStateTable(C._wrap__swig_NewDirectorProducerStateTableProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_607)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorProducerStateTable(abi interface{}, a ...interface{}) ProducerStateTable {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewDirectorProducerStateTable__SWIG_0(abi, a[0].(DBConnector), a[1].(string))
	}
check_1:
	if argc == 2 {
		return NewDirectorProducerStateTable__SWIG_2(abi, a[0].(RedisPipeline), a[1].(string))
	}
	if argc == 3 {
		return NewDirectorProducerStateTable__SWIG_1(abi, a[0].(RedisPipeline), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteDirectorProducerStateTable(arg1 ProducerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorProducerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_ProducerStateTable_swsscommon_2432462d295473d6
func Swiggo_DeleteDirector_ProducerStateTable_swsscommon_2432462d295473d6(c int) {
	swigDirectorLookup(c).(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceProducerStateTableSet__SWIG_0 interface {
	Set__SWIG_0(string, FieldValuePairs, string, string)
}

func (swig_p *_swig_DirectorProducerStateTable) Set__SWIG_0(key string, values FieldValuePairs, op string, prefix string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableSet__SWIG_0); swig_ok {
		swig_g.Set__SWIG_0(key, values, op, prefix)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	_swig_i_3 := prefix
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_608)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_609)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_610)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

func DirectorProducerStateTableSet__SWIG_0(swig_p ProducerStateTable, key string, values FieldValuePairs, op string, prefix string) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	_swig_i_3 := prefix
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_608)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_609)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_610)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

//export Swig_DirectorProducerStateTable_callback_set__SWIG_0_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_set__SWIG_0_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr, arg4 string, arg5 string) {
	var _swig_i_0 string
	var _swig_i_2 string
	var _swig_i_3 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_2 = swigCopyString(arg4)
	_swig_i_3 = swigCopyString(arg5)
	swig_p.Set__SWIG_0(_swig_i_0, SwigcptrFieldValuePairs(arg3), _swig_i_2, _swig_i_3)
}

type _swig_DirectorInterfaceProducerStateTableSet__SWIG_1 interface {
	Set__SWIG_1(string, FieldValuePairs, string)
}

func (swig_p *_swig_DirectorProducerStateTable) Set__SWIG_1(key string, values FieldValuePairs, op string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableSet__SWIG_1); swig_ok {
		swig_g.Set__SWIG_1(key, values, op)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_611)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_612)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func DirectorProducerStateTableSet__SWIG_1(swig_p ProducerStateTable, key string, values FieldValuePairs, op string) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_611)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_612)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

//export Swig_DirectorProducerStateTable_callback_set__SWIG_1_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_set__SWIG_1_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr, arg4 string) {
	var _swig_i_0 string
	var _swig_i_2 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_2 = swigCopyString(arg4)
	swig_p.Set__SWIG_1(_swig_i_0, SwigcptrFieldValuePairs(arg3), _swig_i_2)
}

type _swig_DirectorInterfaceProducerStateTableSet__SWIG_2 interface {
	Set__SWIG_2(string, FieldValuePairs)
}

func (swig_p *_swig_DirectorProducerStateTable) Set__SWIG_2(key string, values FieldValuePairs) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableSet__SWIG_2); swig_ok {
		swig_g.Set__SWIG_2(key, values)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_613)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorProducerStateTableSet__SWIG_2(swig_p ProducerStateTable, key string, values FieldValuePairs) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_613)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorProducerStateTable_callback_set__SWIG_2_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_set__SWIG_2_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Set__SWIG_2(_swig_i_0, SwigcptrFieldValuePairs(arg3))
}

type _swig_DirectorInterfaceProducerStateTableDelete__SWIG_0 interface {
	Delete__SWIG_0(string, string, string)
}

func (swig_p *_swig_DirectorProducerStateTable) Delete__SWIG_0(key string, op string, prefix string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableDelete__SWIG_0); swig_ok {
		swig_g.Delete__SWIG_0(key, op, prefix)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := op
	_swig_i_2 := prefix
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_614)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_615)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_616)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func DirectorProducerStateTableDelete__SWIG_0(swig_p ProducerStateTable, key string, op string, prefix string) {
	_swig_i_0 := key
	_swig_i_1 := op
	_swig_i_2 := prefix
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_614)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_615)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_616)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

//export Swig_DirectorProducerStateTable_callback_delete__SWIG_0_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_delete__SWIG_0_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 string, arg4 string) {
	var _swig_i_0 string
	var _swig_i_1 string
	var _swig_i_2 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_1 = swigCopyString(arg3)
	_swig_i_2 = swigCopyString(arg4)
	swig_p.Delete__SWIG_0(_swig_i_0, _swig_i_1, _swig_i_2)
}

type _swig_DirectorInterfaceProducerStateTableDelete__SWIG_1 interface {
	Delete__SWIG_1(string, string)
}

func (swig_p *_swig_DirectorProducerStateTable) Delete__SWIG_1(key string, op string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableDelete__SWIG_1); swig_ok {
		swig_g.Delete__SWIG_1(key, op)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := op
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_617)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_618)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func DirectorProducerStateTableDelete__SWIG_1(swig_p ProducerStateTable, key string, op string) {
	_swig_i_0 := key
	_swig_i_1 := op
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_617)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_618)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

//export Swig_DirectorProducerStateTable_callback_delete__SWIG_1_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_delete__SWIG_1_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 string) {
	var _swig_i_0 string
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_1 = swigCopyString(arg3)
	swig_p.Delete__SWIG_1(_swig_i_0, _swig_i_1)
}

type _swig_DirectorInterfaceProducerStateTableDelete__SWIG_2 interface {
	Delete__SWIG_2(string)
}

func (swig_p *_swig_DirectorProducerStateTable) Delete__SWIG_2(key string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableDelete__SWIG_2); swig_ok {
		swig_g.Delete__SWIG_2(key)
		return
	}
	_swig_i_0 := key
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), *(*C.swig_type_619)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorProducerStateTableDelete__SWIG_2(swig_p ProducerStateTable, key string) {
	_swig_i_0 := key
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), *(*C.swig_type_619)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorProducerStateTable_callback_delete__SWIG_2_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_delete__SWIG_2_swsscommon_2432462d295473d6(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Delete__SWIG_2(_swig_i_0)
}

type _swig_DirectorInterfaceProducerStateTableSet__SWIG_3 interface {
	Set__SWIG_3(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
}

func (swig_p *_swig_DirectorProducerStateTable) Set__SWIG_3(values Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableSet__SWIG_3); swig_ok {
		swig_g.Set__SWIG_3(values)
		return
	}
	_swig_i_0 := getSwigcptr(values)
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), C.uintptr_t(_swig_i_0))
}

func DirectorProducerStateTableSet__SWIG_3(swig_p ProducerStateTable, values Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(values)
	C._wrap__swig_DirectorProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorProducerStateTable_callback_set__SWIG_3_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_set__SWIG_3_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	swig_p.Set__SWIG_3(SwigcptrStd_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_(arg2))
}

func (p _swig_DirectorProducerStateTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Set__SWIG_3(a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func DirectorProducerStateTableSet(p *_swig_DirectorProducerStateTable, a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		DirectorProducerStateTableSet__SWIG_3(p, a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		DirectorProducerStateTableSet__SWIG_2(p, a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		DirectorProducerStateTableSet__SWIG_1(p, a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		DirectorProducerStateTableSet__SWIG_0(p, a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

type _swig_DirectorInterfaceProducerStateTableDelete__SWIG_3 interface {
	Delete__SWIG_3(VectorString)
}

func (swig_p *_swig_DirectorProducerStateTable) Delete__SWIG_3(keys VectorString) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceProducerStateTableDelete__SWIG_3); swig_ok {
		swig_g.Delete__SWIG_3(keys)
		return
	}
	_swig_i_0 := getSwigcptr(keys)
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrProducerStateTable), C.uintptr_t(_swig_i_0))
}

func DirectorProducerStateTableDelete__SWIG_3(swig_p ProducerStateTable, keys VectorString) {
	_swig_i_0 := getSwigcptr(keys)
	C._wrap__swig_DirectorProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorProducerStateTable).SwigcptrProducerStateTable), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorProducerStateTable_callback_delete__SWIG_3_swsscommon_2432462d295473d6
func Swig_DirectorProducerStateTable_callback_delete__SWIG_3_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorProducerStateTable)
	swig_p.Delete__SWIG_3(SwigcptrVectorString(arg2))
}

func (p _swig_DirectorProducerStateTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Delete__SWIG_2(a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		p.Delete__SWIG_3(a[0].(VectorString))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func DirectorProducerStateTableDelete(p *_swig_DirectorProducerStateTable, a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		DirectorProducerStateTableDelete__SWIG_2(p, a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		DirectorProducerStateTableDelete__SWIG_3(p, a[0].(VectorString))
		return
	}
	if argc == 2 {
		DirectorProducerStateTableDelete__SWIG_1(p, a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		DirectorProducerStateTableDelete__SWIG_0(p, a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

type SwigcptrProducerStateTable uintptr

func (p SwigcptrProducerStateTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrProducerStateTable) SwigIsProducerStateTable() {
}

func (p SwigcptrProducerStateTable) DirectorInterface() interface{} {
	return nil
}

func NewProducerStateTable__SWIG_0(arg1 DBConnector, arg2 string) (_swig_ret ProducerStateTable) {
	var swig_r ProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ProducerStateTable)(SwigcptrProducerStateTable(C._wrap_new_ProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_605)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerStateTable__SWIG_1(arg1 RedisPipeline, arg2 string, arg3 bool) (_swig_ret ProducerStateTable) {
	var swig_r ProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (ProducerStateTable)(SwigcptrProducerStateTable(C._wrap_new_ProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_606)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerStateTable__SWIG_2(arg1 RedisPipeline, arg2 string) (_swig_ret ProducerStateTable) {
	var swig_r ProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ProducerStateTable)(SwigcptrProducerStateTable(C._wrap_new_ProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_607)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewProducerStateTable(a ...interface{}) ProducerStateTable {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewProducerStateTable__SWIG_0(a[0].(DBConnector), a[1].(string))
	}
check_1:
	if argc == 2 {
		return NewProducerStateTable__SWIG_2(a[0].(RedisPipeline), a[1].(string))
	}
	if argc == 3 {
		return NewProducerStateTable__SWIG_1(a[0].(RedisPipeline), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteProducerStateTable(arg1 ProducerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ProducerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProducerStateTable) SetBuffered(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ProducerStateTable_setBuffered_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrProducerStateTable) Set__SWIG_0(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ProducerStateTable_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_608)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_609)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_610)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrProducerStateTable) Set__SWIG_1(arg2 string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ProducerStateTable_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_611)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_612)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrProducerStateTable) Set__SWIG_2(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ProducerStateTable_set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_613)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrProducerStateTable) Delete__SWIG_0(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_ProducerStateTable_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_614)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_615)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_616)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrProducerStateTable) Delete__SWIG_1(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ProducerStateTable_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_617)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_618)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrProducerStateTable) Delete__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ProducerStateTable_delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_619)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrProducerStateTable) Set__SWIG_3(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ProducerStateTable_set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrProducerStateTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Set__SWIG_3(a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProducerStateTable) Delete__SWIG_3(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ProducerStateTable_delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrProducerStateTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Delete__SWIG_2(a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		p.Delete__SWIG_3(a[0].(VectorString))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrProducerStateTable) Flush() {
	_swig_i_0 := arg1
	C._wrap_ProducerStateTable_flush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProducerStateTable) Count() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ProducerStateTable_count_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrProducerStateTable) Clear() {
	_swig_i_0 := arg1
	C._wrap_ProducerStateTable_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProducerStateTable) Create_temp_view() {
	_swig_i_0 := arg1
	C._wrap_ProducerStateTable_create_temp_view_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrProducerStateTable) Apply_temp_view() {
	_swig_i_0 := arg1
	C._wrap_ProducerStateTable_apply_temp_view_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func ProducerStateTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerStateTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerStateTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ProducerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrProducerStateTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrProducerStateTable) GetKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetDelKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrProducerStateTable) GetStateHashPrefix() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ProducerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrProducerStateTable) SwigIsTableBase() {
}

func (p SwigcptrProducerStateTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrProducerStateTable) SwigGetTableName_KeySet() (_swig_ret TableName_KeySet) {
	var swig_r TableName_KeySet
	_swig_i_0 := arg1
	swig_r = (TableName_KeySet)(SwigcptrTableName_KeySet(C._wrap_ProducerStateTable_SwigGetTableName_KeySet_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

type ProducerStateTable interface {
	Swigcptr() uintptr
	SwigIsProducerStateTable()
	DirectorInterface() interface{}
	SetBuffered(arg2 bool)
	Set(a ...interface{})
	Delete(a ...interface{})
	Flush()
	Count() (_swig_ret int64)
	Clear()
	Create_temp_view()
	Apply_temp_view()
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetKeySetName() (_swig_ret string)
	GetDelKeySetName() (_swig_ret string)
	GetStateHashPrefix() (_swig_ret string)
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableName_KeySet() (_swig_ret TableName_KeySet)
}

type _swig_DirectorZmqProducerStateTable struct {
	SwigcptrZmqProducerStateTable
	v interface{}
}

func (p *_swig_DirectorZmqProducerStateTable) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrZmqProducerStateTable)
}

func (p *_swig_DirectorZmqProducerStateTable) SwigIsZmqProducerStateTable() {
}

func (p *_swig_DirectorZmqProducerStateTable) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorZmqProducerStateTable__SWIG_0(v interface{}, arg1 DBConnector, arg2 string, arg3 ZmqClient, arg4 bool) ZmqProducerStateTable {
	p := &_swig_DirectorZmqProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	p.SwigcptrZmqProducerStateTable = SwigcptrZmqProducerStateTable(C._wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_631)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorZmqProducerStateTable__SWIG_1(v interface{}, arg1 DBConnector, arg2 string, arg3 ZmqClient) ZmqProducerStateTable {
	p := &_swig_DirectorZmqProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	p.SwigcptrZmqProducerStateTable = SwigcptrZmqProducerStateTable(C._wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_632)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorZmqProducerStateTable__SWIG_2(v interface{}, arg1 RedisPipeline, arg2 string, arg3 ZmqClient, arg4 bool, arg5 bool) ZmqProducerStateTable {
	p := &_swig_DirectorZmqProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	p.SwigcptrZmqProducerStateTable = SwigcptrZmqProducerStateTable(C._wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_633)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C._Bool(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorZmqProducerStateTable__SWIG_3(v interface{}, arg1 RedisPipeline, arg2 string, arg3 ZmqClient, arg4 bool) ZmqProducerStateTable {
	p := &_swig_DirectorZmqProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	p.SwigcptrZmqProducerStateTable = SwigcptrZmqProducerStateTable(C._wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_3_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_634)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorZmqProducerStateTable__SWIG_4(v interface{}, arg1 RedisPipeline, arg2 string, arg3 ZmqClient) ZmqProducerStateTable {
	p := &_swig_DirectorZmqProducerStateTable{0, v}
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	p.SwigcptrZmqProducerStateTable = SwigcptrZmqProducerStateTable(C._wrap__swig_NewDirectorZmqProducerStateTableZmqProducerStateTable__SWIG_4_swsscommon_2432462d295473d6(C.int(swigDirectorAdd(p)), C.uintptr_t(_swig_i_0), *(*C.swig_type_635)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	return p
}

func NewDirectorZmqProducerStateTable(abi interface{}, a ...interface{}) ZmqProducerStateTable {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewDirectorZmqProducerStateTable__SWIG_1(abi, a[0].(DBConnector), a[1].(string), a[2].(ZmqClient))
	}
check_1:
	if argc == 3 {
		return NewDirectorZmqProducerStateTable__SWIG_4(abi, a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient))
	}
	if argc == 4 {
		if _, ok := a[0].(RedisPipeline); !ok {
			goto check_3
		}
		return NewDirectorZmqProducerStateTable__SWIG_3(abi, a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient), a[3].(bool))
	}
check_3:
	if argc == 4 {
		return NewDirectorZmqProducerStateTable__SWIG_0(abi, a[0].(DBConnector), a[1].(string), a[2].(ZmqClient), a[3].(bool))
	}
	if argc == 5 {
		return NewDirectorZmqProducerStateTable__SWIG_2(abi, a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient), a[3].(bool), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func DeleteDirectorZmqProducerStateTable(arg1 ZmqProducerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorZmqProducerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_ZmqProducerStateTable_swsscommon_2432462d295473d6
func Swiggo_DeleteDirector_ZmqProducerStateTable_swsscommon_2432462d295473d6(c int) {
	swigDirectorLookup(c).(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_0 interface {
	Set__SWIG_0(string, FieldValuePairs, string, string)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Set__SWIG_0(key string, values FieldValuePairs, op string, prefix string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_0); swig_ok {
		swig_g.Set__SWIG_0(key, values, op, prefix)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	_swig_i_3 := prefix
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_636)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_637)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_638)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

func DirectorZmqProducerStateTableSet__SWIG_0(swig_p ZmqProducerStateTable, key string, values FieldValuePairs, op string, prefix string) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	_swig_i_3 := prefix
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_636)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_637)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_638)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_set__SWIG_0_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_set__SWIG_0_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr, arg4 string, arg5 string) {
	var _swig_i_0 string
	var _swig_i_2 string
	var _swig_i_3 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_2 = swigCopyString(arg4)
	_swig_i_3 = swigCopyString(arg5)
	swig_p.Set__SWIG_0(_swig_i_0, SwigcptrFieldValuePairs(arg3), _swig_i_2, _swig_i_3)
}

type _swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_1 interface {
	Set__SWIG_1(string, FieldValuePairs, string)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Set__SWIG_1(key string, values FieldValuePairs, op string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_1); swig_ok {
		swig_g.Set__SWIG_1(key, values, op)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_639)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_640)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func DirectorZmqProducerStateTableSet__SWIG_1(swig_p ZmqProducerStateTable, key string, values FieldValuePairs, op string) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	_swig_i_2 := op
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_639)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_640)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_set__SWIG_1_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_set__SWIG_1_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr, arg4 string) {
	var _swig_i_0 string
	var _swig_i_2 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_2 = swigCopyString(arg4)
	swig_p.Set__SWIG_1(_swig_i_0, SwigcptrFieldValuePairs(arg3), _swig_i_2)
}

type _swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_2 interface {
	Set__SWIG_2(string, FieldValuePairs)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Set__SWIG_2(key string, values FieldValuePairs) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_2); swig_ok {
		swig_g.Set__SWIG_2(key, values)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_641)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorZmqProducerStateTableSet__SWIG_2(swig_p ZmqProducerStateTable, key string, values FieldValuePairs) {
	_swig_i_0 := key
	_swig_i_1 := getSwigcptr(values)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_641)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_set__SWIG_2_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_set__SWIG_2_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 uintptr) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Set__SWIG_2(_swig_i_0, SwigcptrFieldValuePairs(arg3))
}

type _swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_0 interface {
	Delete__SWIG_0(string, string, string)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Delete__SWIG_0(key string, op string, prefix string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_0); swig_ok {
		swig_g.Delete__SWIG_0(key, op, prefix)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := op
	_swig_i_2 := prefix
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_642)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_643)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_644)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

func DirectorZmqProducerStateTableDelete__SWIG_0(swig_p ZmqProducerStateTable, key string, op string, prefix string) {
	_swig_i_0 := key
	_swig_i_1 := op
	_swig_i_2 := prefix
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_642)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_643)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_644)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_0_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_0_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 string, arg4 string) {
	var _swig_i_0 string
	var _swig_i_1 string
	var _swig_i_2 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_1 = swigCopyString(arg3)
	_swig_i_2 = swigCopyString(arg4)
	swig_p.Delete__SWIG_0(_swig_i_0, _swig_i_1, _swig_i_2)
}

type _swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_1 interface {
	Delete__SWIG_1(string, string)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Delete__SWIG_1(key string, op string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_1); swig_ok {
		swig_g.Delete__SWIG_1(key, op)
		return
	}
	_swig_i_0 := key
	_swig_i_1 := op
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_645)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_646)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

func DirectorZmqProducerStateTableDelete__SWIG_1(swig_p ZmqProducerStateTable, key string, op string) {
	_swig_i_0 := key
	_swig_i_1 := op
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_645)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_646)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_1_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_1_swsscommon_2432462d295473d6(swig_c int, arg2 string, arg3 string) {
	var _swig_i_0 string
	var _swig_i_1 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	_swig_i_1 = swigCopyString(arg3)
	swig_p.Delete__SWIG_1(_swig_i_0, _swig_i_1)
}

type _swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_2 interface {
	Delete__SWIG_2(string)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Delete__SWIG_2(key string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_2); swig_ok {
		swig_g.Delete__SWIG_2(key)
		return
	}
	_swig_i_0 := key
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), *(*C.swig_type_647)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

func DirectorZmqProducerStateTableDelete__SWIG_2(swig_p ZmqProducerStateTable, key string) {
	_swig_i_0 := key
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), *(*C.swig_type_647)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
}

//export Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_2_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_2_swsscommon_2432462d295473d6(swig_c int, arg2 string) {
	var _swig_i_0 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	_swig_i_0 = swigCopyString(arg2)
	swig_p.Delete__SWIG_2(_swig_i_0)
}

type _swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_3 interface {
	Set__SWIG_3(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Set__SWIG_3(values Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableSet__SWIG_3); swig_ok {
		swig_g.Set__SWIG_3(values)
		return
	}
	_swig_i_0 := getSwigcptr(values)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

func DirectorZmqProducerStateTableSet__SWIG_3(swig_p ZmqProducerStateTable, values Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(values)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorZmqProducerStateTable_callback_set__SWIG_3_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_set__SWIG_3_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	swig_p.Set__SWIG_3(SwigcptrStd_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_(arg2))
}

func (p _swig_DirectorZmqProducerStateTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Set__SWIG_3(a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func DirectorZmqProducerStateTableSet(p *_swig_DirectorZmqProducerStateTable, a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		DirectorZmqProducerStateTableSet__SWIG_3(p, a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		DirectorZmqProducerStateTableSet__SWIG_2(p, a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		DirectorZmqProducerStateTableSet__SWIG_1(p, a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		DirectorZmqProducerStateTableSet__SWIG_0(p, a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

type _swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_3 interface {
	Delete__SWIG_3(VectorString)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Delete__SWIG_3(keys VectorString) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableDelete__SWIG_3); swig_ok {
		swig_g.Delete__SWIG_3(keys)
		return
	}
	_swig_i_0 := getSwigcptr(keys)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

func DirectorZmqProducerStateTableDelete__SWIG_3(swig_p ZmqProducerStateTable, keys VectorString) {
	_swig_i_0 := getSwigcptr(keys)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_3_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_delete__SWIG_3_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	swig_p.Delete__SWIG_3(SwigcptrVectorString(arg2))
}

func (p _swig_DirectorZmqProducerStateTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Delete__SWIG_2(a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		p.Delete__SWIG_3(a[0].(VectorString))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func DirectorZmqProducerStateTableDelete(p *_swig_DirectorZmqProducerStateTable, a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		DirectorZmqProducerStateTableDelete__SWIG_2(p, a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		DirectorZmqProducerStateTableDelete__SWIG_3(p, a[0].(VectorString))
		return
	}
	if argc == 2 {
		DirectorZmqProducerStateTableDelete__SWIG_1(p, a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		DirectorZmqProducerStateTableDelete__SWIG_0(p, a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

type _swig_DirectorInterfaceZmqProducerStateTableSend interface {
	Send(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
}

func (swig_p *_swig_DirectorZmqProducerStateTable) Send(kcos Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceZmqProducerStateTableSend); swig_ok {
		swig_g.Send(kcos)
		return
	}
	_swig_i_0 := getSwigcptr(kcos)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Send_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

func DirectorZmqProducerStateTableSend(swig_p ZmqProducerStateTable, kcos Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(kcos)
	C._wrap__swig_DirectorZmqProducerStateTable_upcall_Send_swsscommon_2432462d295473d6(C.uintptr_t(swig_p.(*_swig_DirectorZmqProducerStateTable).SwigcptrZmqProducerStateTable), C.uintptr_t(_swig_i_0))
}

//export Swig_DirectorZmqProducerStateTable_callback_send_swsscommon_2432462d295473d6
func Swig_DirectorZmqProducerStateTable_callback_send_swsscommon_2432462d295473d6(swig_c int, arg2 uintptr) {
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorZmqProducerStateTable)
	swig_p.Send(SwigcptrStd_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_(arg2))
}

type SwigcptrZmqProducerStateTable uintptr

func (p SwigcptrZmqProducerStateTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZmqProducerStateTable) SwigIsZmqProducerStateTable() {
}

func (p SwigcptrZmqProducerStateTable) DirectorInterface() interface{} {
	return nil
}

func NewZmqProducerStateTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 ZmqClient, arg4 bool) (_swig_ret ZmqProducerStateTable) {
	var swig_r ZmqProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (ZmqProducerStateTable)(SwigcptrZmqProducerStateTable(C._wrap_new_ZmqProducerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_631)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqProducerStateTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 ZmqClient) (_swig_ret ZmqProducerStateTable) {
	var swig_r ZmqProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (ZmqProducerStateTable)(SwigcptrZmqProducerStateTable(C._wrap_new_ZmqProducerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_632)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqProducerStateTable__SWIG_2(arg1 RedisPipeline, arg2 string, arg3 ZmqClient, arg4 bool, arg5 bool) (_swig_ret ZmqProducerStateTable) {
	var swig_r ZmqProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (ZmqProducerStateTable)(SwigcptrZmqProducerStateTable(C._wrap_new_ZmqProducerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_633)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3), C._Bool(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqProducerStateTable__SWIG_3(arg1 RedisPipeline, arg2 string, arg3 ZmqClient, arg4 bool) (_swig_ret ZmqProducerStateTable) {
	var swig_r ZmqProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	swig_r = (ZmqProducerStateTable)(SwigcptrZmqProducerStateTable(C._wrap_new_ZmqProducerStateTable__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_634)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqProducerStateTable__SWIG_4(arg1 RedisPipeline, arg2 string, arg3 ZmqClient) (_swig_ret ZmqProducerStateTable) {
	var swig_r ZmqProducerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (ZmqProducerStateTable)(SwigcptrZmqProducerStateTable(C._wrap_new_ZmqProducerStateTable__SWIG_4_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_635)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewZmqProducerStateTable(a ...interface{}) ZmqProducerStateTable {
	argc := len(a)
	if argc == 3 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewZmqProducerStateTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(ZmqClient))
	}
check_1:
	if argc == 3 {
		return NewZmqProducerStateTable__SWIG_4(a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient))
	}
	if argc == 4 {
		if _, ok := a[0].(RedisPipeline); !ok {
			goto check_3
		}
		return NewZmqProducerStateTable__SWIG_3(a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient), a[3].(bool))
	}
check_3:
	if argc == 4 {
		return NewZmqProducerStateTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(ZmqClient), a[3].(bool))
	}
	if argc == 5 {
		return NewZmqProducerStateTable__SWIG_2(a[0].(RedisPipeline), a[1].(string), a[2].(ZmqClient), a[3].(bool), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrZmqProducerStateTable) Set__SWIG_0(arg2 string, arg3 FieldValuePairs, arg4 string, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_ZmqProducerStateTable_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_636)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_637)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_638)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Set__SWIG_1(arg2 string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ZmqProducerStateTable_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_639)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2), *(*C.swig_type_640)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Set__SWIG_2(arg2 string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ZmqProducerStateTable_set__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_641)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Delete__SWIG_0(arg2 string, arg3 string, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_ZmqProducerStateTable_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_642)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_643)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_644)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Delete__SWIG_1(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ZmqProducerStateTable_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_645)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_646)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Delete__SWIG_2(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ZmqProducerStateTable_delete__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_647)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrZmqProducerStateTable) Set__SWIG_3(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ZmqProducerStateTable_set__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrZmqProducerStateTable) Set(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Set__SWIG_3(a[0].(Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Set__SWIG_2(a[0].(string), a[1].(FieldValuePairs))
		return
	}
	if argc == 3 {
		p.Set__SWIG_1(a[0].(string), a[1].(FieldValuePairs), a[2].(string))
		return
	}
	if argc == 4 {
		p.Set__SWIG_0(a[0].(string), a[1].(FieldValuePairs), a[2].(string), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrZmqProducerStateTable) Delete__SWIG_3(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ZmqProducerStateTable_delete__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrZmqProducerStateTable) Delete(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Delete__SWIG_2(a[0].(string))
		return
	}
check_1:
	if argc == 1 {
		p.Delete__SWIG_3(a[0].(VectorString))
		return
	}
	if argc == 2 {
		p.Delete__SWIG_1(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrZmqProducerStateTable) Send(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ZmqProducerStateTable_send_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrZmqProducerStateTable) DbUpdaterQueueSize() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ZmqProducerStateTable_dbUpdaterQueueSize_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteZmqProducerStateTable(arg1 ZmqProducerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ZmqProducerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrZmqProducerStateTable) SetBuffered(arg1 bool) {
	_swig_i_0 := arg1
	C._wrap_ZmqProducerStateTable_setBuffered_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C._Bool(_swig_i_0))
}

func (_swig_base SwigcptrZmqProducerStateTable) Flush() {
	C._wrap_ZmqProducerStateTable_flush_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrZmqProducerStateTable) Count() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_ZmqProducerStateTable_count_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrZmqProducerStateTable) Clear() {
	C._wrap_ZmqProducerStateTable_clear_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrZmqProducerStateTable) Create_temp_view() {
	C._wrap_ZmqProducerStateTable_create_temp_view_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrZmqProducerStateTable) Apply_temp_view() {
	C._wrap_ZmqProducerStateTable_apply_temp_view_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func ZmqProducerStateTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ZmqProducerStateTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ZmqProducerStateTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ZmqProducerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ZmqProducerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrZmqProducerStateTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrZmqProducerStateTable) GetKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetDelKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrZmqProducerStateTable) GetStateHashPrefix() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ZmqProducerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrZmqProducerStateTable) SwigIsProducerStateTable() {
}

func (p SwigcptrZmqProducerStateTable) SwigGetProducerStateTable() ProducerStateTable {
	return SwigcptrProducerStateTable(getSwigcptr(p))
}

func (p SwigcptrZmqProducerStateTable) SwigIsTableBase() {
}

func (p SwigcptrZmqProducerStateTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (p SwigcptrZmqProducerStateTable) SwigGetTableName_KeySet() TableName_KeySet {
	return p.SwigGetProducerStateTable().SwigGetTableName_KeySet()
}

type ZmqProducerStateTable interface {
	Swigcptr() uintptr
	SwigIsZmqProducerStateTable()
	DirectorInterface() interface{}
	Set(a ...interface{})
	Delete(a ...interface{})
	Send(arg2 Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_)
	DbUpdaterQueueSize() (_swig_ret int64)
	SetBuffered(arg1 bool)
	Flush()
	Count() (_swig_ret int64)
	Clear()
	Create_temp_view()
	Apply_temp_view()
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetKeySetName() (_swig_ret string)
	GetDelKeySetName() (_swig_ret string)
	GetStateHashPrefix() (_swig_ret string)
	SwigIsProducerStateTable()
	SwigGetProducerStateTable() ProducerStateTable
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableName_KeySet() TableName_KeySet
}

type SwigcptrConsumerTableBase uintptr

func (p SwigcptrConsumerTableBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConsumerTableBase) SwigIsConsumerTableBase() {
}

func (arg1 SwigcptrConsumerTableBase) GetPOP_BATCH_SIZE() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_ConsumerTableBase_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteConsumerTableBase(arg1 ConsumerTableBase) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ConsumerTableBase_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrConsumerTableBase) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ConsumerTableBase_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrConsumerTableBase) Pop__SWIG_0(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_ConsumerTableBase_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), *(*C.swig_type_660)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrConsumerTableBase) Pop__SWIG_1(arg2 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ConsumerTableBase_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrConsumerTableBase) Pop__SWIG_2(arg2 *string, arg3 *string, arg4 FieldValuePairs, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	C._wrap_ConsumerTableBase_pop__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3), *(*C.swig_type_661)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func (arg1 SwigcptrConsumerTableBase) Pop__SWIG_3(arg2 *string, arg3 *string, arg4 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_ConsumerTableBase_pop__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (p SwigcptrConsumerTableBase) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	if argc == 3 {
		p.Pop__SWIG_3(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs))
		return
	}
	if argc == 4 {
		p.Pop__SWIG_2(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConsumerTableBase) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ConsumerTableBase_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func ConsumerTableBaseGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTableBase_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTableBase_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTableBase_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTableBase_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTableBase_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTableBase_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTableBase) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTableBase_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrConsumerTableBase) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTableBase) Pops__SWIG_0(arg1 KeyOpFieldsValuesQueue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ConsumerTableBase_pops__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConsumerTableBase) Pops__SWIG_1(arg1 VectorString, arg2 VectorString, arg3 FieldValuePairsList, arg4 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ConsumerTableBase_pops__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_471)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (_swig_base SwigcptrConsumerTableBase) Pops__SWIG_2(arg1 VectorString, arg2 VectorString, arg3 FieldValuePairsList) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConsumerTableBase_pops__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrConsumerTableBase) Pops(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pops__SWIG_0(a[0].(KeyOpFieldsValuesQueue))
		return
	}
	if argc == 3 {
		p.Pops__SWIG_2(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList))
		return
	}
	if argc == 4 {
		p.Pops__SWIG_1(a[0].(VectorString), a[1].(VectorString), a[2].(FieldValuePairsList), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTableBase) GetFd() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerTableBase_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	swig_r = (uint64)(C._wrap_ConsumerTableBase_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) HasData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTableBase_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTableBase_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTableBase_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) UpdateAfterRead() {
	C._wrap_ConsumerTableBase_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerTableBase) Subscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTableBase_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_473)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerTableBase) Psubscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTableBase_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerTableBase) Punsubscribe(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConsumerTableBase_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerTableBase) SetQueueLength(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_ConsumerTableBase_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_type_476(_swig_i_0))
}

func (_swig_base SwigcptrConsumerTableBase) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerTableBase_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) Multi() {
	C._wrap_ConsumerTableBase_multi_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerTableBase) Exec() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTableBase_exec_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTableBase) Enqueue__SWIG_0(arg1 string, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConsumerTableBase_enqueue__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_670)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerTableBase) Enqueue__SWIG_1(arg1 RedisCommand, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTableBase_enqueue__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrConsumerTableBase) Enqueue(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Enqueue__SWIG_0(a[0].(string), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		p.Enqueue__SWIG_1(a[0].(RedisCommand), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTableBase) DequeueReply() (_swig_ret RedisReply) {
	var swig_r RedisReply
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_ConsumerTableBase_dequeueReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrConsumerTableBase) SwigIsTableConsumable() {
}

func (p SwigcptrConsumerTableBase) SwigGetTableConsumable() TableConsumable {
	return SwigcptrTableConsumable(getSwigcptr(p))
}

func (p SwigcptrConsumerTableBase) SwigIsTableBase() {
}

func (p SwigcptrConsumerTableBase) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrConsumerTableBase) SwigGetRedisTransactioner() (_swig_ret RedisTransactioner) {
	var swig_r RedisTransactioner
	_swig_i_0 := arg1
	swig_r = (RedisTransactioner)(SwigcptrRedisTransactioner(C._wrap_ConsumerTableBase_SwigGetRedisTransactioner_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrConsumerTableBase) SwigGetTableEntryPoppable() TableEntryPoppable {
	return p.SwigGetTableConsumable().SwigGetTableEntryPoppable()
}

func (p SwigcptrConsumerTableBase) SwigGetRedisSelect() RedisSelect {
	return p.SwigGetTableConsumable().SwigGetRedisSelect()
}

func (p SwigcptrConsumerTableBase) SwigGetSelectable() Selectable {
	return p.SwigGetTableConsumable().SwigGetRedisSelect().SwigGetSelectable()
}

type ConsumerTableBase interface {
	Swigcptr() uintptr
	SwigIsConsumerTableBase()
	GetPOP_BATCH_SIZE() (_swig_ret int)
	GetDbConnector() (_swig_ret DBConnector)
	Pop(a ...interface{})
	Empty() (_swig_ret bool)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	Pops(a ...interface{})
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	Subscribe(arg1 DBConnector, arg2 string)
	Psubscribe(arg1 DBConnector, arg2 string)
	Punsubscribe(arg1 string)
	SetQueueLength(arg1 int64)
	GetPri() (_swig_ret int)
	Multi()
	Exec() (_swig_ret bool)
	Enqueue(a ...interface{})
	DequeueReply() (_swig_ret RedisReply)
	SwigIsTableConsumable()
	SwigGetTableConsumable() TableConsumable
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetRedisTransactioner() (_swig_ret RedisTransactioner)
	SwigGetTableEntryPoppable() TableEntryPoppable
	SwigGetRedisSelect() RedisSelect
	SwigGetSelectable() Selectable
}

type SwigcptrConsumerTable uintptr

func (p SwigcptrConsumerTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConsumerTable) SwigIsConsumerTable() {
}

func NewConsumerTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 int, arg4 int) (_swig_ret ConsumerTable) {
	var swig_r ConsumerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (ConsumerTable)(SwigcptrConsumerTable(C._wrap_new_ConsumerTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_671)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 int) (_swig_ret ConsumerTable) {
	var swig_r ConsumerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (ConsumerTable)(SwigcptrConsumerTable(C._wrap_new_ConsumerTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_672)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerTable__SWIG_2(arg1 DBConnector, arg2 string) (_swig_ret ConsumerTable) {
	var swig_r ConsumerTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ConsumerTable)(SwigcptrConsumerTable(C._wrap_new_ConsumerTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_673)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerTable(a ...interface{}) ConsumerTable {
	argc := len(a)
	if argc == 2 {
		return NewConsumerTable__SWIG_2(a[0].(DBConnector), a[1].(string))
	}
	if argc == 3 {
		return NewConsumerTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(int))
	}
	if argc == 4 {
		return NewConsumerTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(int), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConsumerTable) Pops(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ConsumerTable_pops_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrConsumerTable) SetModifyRedis(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_setModifyRedis_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func DeleteConsumerTable(arg1 ConsumerTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ConsumerTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConsumerTable) GetPOP_BATCH_SIZE() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetConsumerTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ConsumerTable_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) Pop__SWIG_0(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_674)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerTable) Pop__SWIG_1(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ConsumerTable_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConsumerTable) Pop__SWIG_2(arg1 *string, arg2 *string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ConsumerTable_pop__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_675)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (_swig_base SwigcptrConsumerTable) Pop__SWIG_3(arg1 *string, arg2 *string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConsumerTable_pop__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrConsumerTable) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	if argc == 3 {
		p.Pop__SWIG_3(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs))
		return
	}
	if argc == 4 {
		p.Pop__SWIG_2(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTable) Empty() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTable_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func ConsumerTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrConsumerTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTable) GetFd() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerTable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	swig_r = (uint64)(C._wrap_ConsumerTable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) HasData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) UpdateAfterRead() {
	C._wrap_ConsumerTable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerTable) Subscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_473)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerTable) Psubscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerTable) Punsubscribe(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConsumerTable_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerTable) SetQueueLength(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_ConsumerTable_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_type_476(_swig_i_0))
}

func (_swig_base SwigcptrConsumerTable) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerTable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) Multi() {
	C._wrap_ConsumerTable_multi_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerTable) Exec() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerTable_exec_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) Enqueue__SWIG_0(arg1 string, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_670)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerTable) Enqueue__SWIG_1(arg1 RedisCommand, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrConsumerTable) Enqueue(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Enqueue__SWIG_0(a[0].(string), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		p.Enqueue__SWIG_1(a[0].(RedisCommand), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerTable) DequeueReply() (_swig_ret RedisReply) {
	var swig_r RedisReply
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_ConsumerTable_dequeueReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConsumerTable) GetKeyValueOpQueueTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerTable_getKeyValueOpQueueTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrConsumerTable) SwigIsConsumerTableBase() {
}

func (p SwigcptrConsumerTable) SwigGetConsumerTableBase() ConsumerTableBase {
	return SwigcptrConsumerTableBase(getSwigcptr(p))
}

func (p SwigcptrConsumerTable) SwigIsTableConsumable() {
}

func (p SwigcptrConsumerTable) SwigGetTableConsumable() TableConsumable {
	return SwigcptrTableConsumable(getSwigcptr(p))
}

func (p SwigcptrConsumerTable) SwigIsTableBase() {
}

func (p SwigcptrConsumerTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrConsumerTable) SwigGetTableName_KeyValueOpQueues() (_swig_ret TableName_KeyValueOpQueues) {
	var swig_r TableName_KeyValueOpQueues
	_swig_i_0 := arg1
	swig_r = (TableName_KeyValueOpQueues)(SwigcptrTableName_KeyValueOpQueues(C._wrap_ConsumerTable_SwigGetTableName_KeyValueOpQueues_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrConsumerTable) SwigGetTableEntryPoppable() TableEntryPoppable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetTableEntryPoppable()
}

func (p SwigcptrConsumerTable) SwigGetRedisSelect() RedisSelect {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect()
}

func (p SwigcptrConsumerTable) SwigGetSelectable() Selectable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect().SwigGetSelectable()
}

func (p SwigcptrConsumerTable) SwigGetRedisTransactioner() RedisTransactioner {
	return p.SwigGetConsumerTableBase().SwigGetRedisTransactioner()
}

type ConsumerTable interface {
	Swigcptr() uintptr
	SwigIsConsumerTable()
	Pops(arg2 KeyOpFieldsValuesQueue)
	SetModifyRedis(arg2 bool)
	GetPOP_BATCH_SIZE() (_swig_ret int)
	GetDbConnector() (_swig_ret DBConnector)
	Pop(a ...interface{})
	Empty() (_swig_ret bool)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	Subscribe(arg1 DBConnector, arg2 string)
	Psubscribe(arg1 DBConnector, arg2 string)
	Punsubscribe(arg1 string)
	SetQueueLength(arg1 int64)
	GetPri() (_swig_ret int)
	Multi()
	Exec() (_swig_ret bool)
	Enqueue(a ...interface{})
	DequeueReply() (_swig_ret RedisReply)
	GetKeyValueOpQueueTableName() (_swig_ret string)
	SwigIsConsumerTableBase()
	SwigGetConsumerTableBase() ConsumerTableBase
	SwigIsTableConsumable()
	SwigGetTableConsumable() TableConsumable
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableName_KeyValueOpQueues() (_swig_ret TableName_KeyValueOpQueues)
	SwigGetTableEntryPoppable() TableEntryPoppable
	SwigGetRedisSelect() RedisSelect
	SwigGetSelectable() Selectable
	SwigGetRedisTransactioner() RedisTransactioner
}

type SwigcptrConsumerStateTable uintptr

func (p SwigcptrConsumerStateTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConsumerStateTable) SwigIsConsumerStateTable() {
}

func NewConsumerStateTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 int, arg4 int) (_swig_ret ConsumerStateTable) {
	var swig_r ConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (ConsumerStateTable)(SwigcptrConsumerStateTable(C._wrap_new_ConsumerStateTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_685)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerStateTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 int) (_swig_ret ConsumerStateTable) {
	var swig_r ConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (ConsumerStateTable)(SwigcptrConsumerStateTable(C._wrap_new_ConsumerStateTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_686)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerStateTable__SWIG_2(arg1 DBConnector, arg2 string) (_swig_ret ConsumerStateTable) {
	var swig_r ConsumerStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (ConsumerStateTable)(SwigcptrConsumerStateTable(C._wrap_new_ConsumerStateTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_687)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewConsumerStateTable(a ...interface{}) ConsumerStateTable {
	argc := len(a)
	if argc == 2 {
		return NewConsumerStateTable__SWIG_2(a[0].(DBConnector), a[1].(string))
	}
	if argc == 3 {
		return NewConsumerStateTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(int))
	}
	if argc == 4 {
		return NewConsumerStateTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(int), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrConsumerStateTable) Pops(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ConsumerStateTable_pops_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteConsumerStateTable(arg1 ConsumerStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ConsumerStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConsumerStateTable) GetPOP_BATCH_SIZE() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetConsumerStateTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_ConsumerStateTable_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) Pop__SWIG_0(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerStateTable_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_674)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerStateTable) Pop__SWIG_1(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_ConsumerStateTable_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrConsumerStateTable) Pop__SWIG_2(arg1 *string, arg2 *string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_ConsumerStateTable_pop__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_675)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (_swig_base SwigcptrConsumerStateTable) Pop__SWIG_3(arg1 *string, arg2 *string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ConsumerStateTable_pop__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrConsumerStateTable) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	if argc == 3 {
		p.Pop__SWIG_3(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs))
		return
	}
	if argc == 4 {
		p.Pop__SWIG_2(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerStateTable) Empty() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerStateTable_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func ConsumerStateTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerStateTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerStateTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ConsumerStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrConsumerStateTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerStateTable) GetFd() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerStateTable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	swig_r = (uint64)(C._wrap_ConsumerStateTable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) HasData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerStateTable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerStateTable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerStateTable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) UpdateAfterRead() {
	C._wrap_ConsumerStateTable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerStateTable) Subscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerStateTable_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_473)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerStateTable) Psubscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerStateTable_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrConsumerStateTable) Punsubscribe(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_ConsumerStateTable_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerStateTable) SetQueueLength(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_ConsumerStateTable_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_type_476(_swig_i_0))
}

func (_swig_base SwigcptrConsumerStateTable) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ConsumerStateTable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) Multi() {
	C._wrap_ConsumerStateTable_multi_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrConsumerStateTable) Exec() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_ConsumerStateTable_exec_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) Enqueue__SWIG_0(arg1 string, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ConsumerStateTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_670)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrConsumerStateTable) Enqueue__SWIG_1(arg1 RedisCommand, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_ConsumerStateTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrConsumerStateTable) Enqueue(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Enqueue__SWIG_0(a[0].(string), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		p.Enqueue__SWIG_1(a[0].(RedisCommand), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrConsumerStateTable) DequeueReply() (_swig_ret RedisReply) {
	var swig_r RedisReply
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_ConsumerStateTable_dequeueReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrConsumerStateTable) GetKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetDelKeySetName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getDelKeySetName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrConsumerStateTable) GetStateHashPrefix() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_ConsumerStateTable_getStateHashPrefix_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrConsumerStateTable) SwigIsConsumerTableBase() {
}

func (p SwigcptrConsumerStateTable) SwigGetConsumerTableBase() ConsumerTableBase {
	return SwigcptrConsumerTableBase(getSwigcptr(p))
}

func (p SwigcptrConsumerStateTable) SwigIsTableConsumable() {
}

func (p SwigcptrConsumerStateTable) SwigGetTableConsumable() TableConsumable {
	return SwigcptrTableConsumable(getSwigcptr(p))
}

func (p SwigcptrConsumerStateTable) SwigIsTableBase() {
}

func (p SwigcptrConsumerStateTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (arg1 SwigcptrConsumerStateTable) SwigGetTableName_KeySet() (_swig_ret TableName_KeySet) {
	var swig_r TableName_KeySet
	_swig_i_0 := arg1
	swig_r = (TableName_KeySet)(SwigcptrTableName_KeySet(C._wrap_ConsumerStateTable_SwigGetTableName_KeySet_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrConsumerStateTable) SwigGetTableEntryPoppable() TableEntryPoppable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetTableEntryPoppable()
}

func (p SwigcptrConsumerStateTable) SwigGetRedisSelect() RedisSelect {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect()
}

func (p SwigcptrConsumerStateTable) SwigGetSelectable() Selectable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect().SwigGetSelectable()
}

func (p SwigcptrConsumerStateTable) SwigGetRedisTransactioner() RedisTransactioner {
	return p.SwigGetConsumerTableBase().SwigGetRedisTransactioner()
}

type ConsumerStateTable interface {
	Swigcptr() uintptr
	SwigIsConsumerStateTable()
	Pops(arg2 KeyOpFieldsValuesQueue)
	GetPOP_BATCH_SIZE() (_swig_ret int)
	GetDbConnector() (_swig_ret DBConnector)
	Pop(a ...interface{})
	Empty() (_swig_ret bool)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	Subscribe(arg1 DBConnector, arg2 string)
	Psubscribe(arg1 DBConnector, arg2 string)
	Punsubscribe(arg1 string)
	SetQueueLength(arg1 int64)
	GetPri() (_swig_ret int)
	Multi()
	Exec() (_swig_ret bool)
	Enqueue(a ...interface{})
	DequeueReply() (_swig_ret RedisReply)
	GetKeySetName() (_swig_ret string)
	GetDelKeySetName() (_swig_ret string)
	GetStateHashPrefix() (_swig_ret string)
	SwigIsConsumerTableBase()
	SwigGetConsumerTableBase() ConsumerTableBase
	SwigIsTableConsumable()
	SwigGetTableConsumable() TableConsumable
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableName_KeySet() (_swig_ret TableName_KeySet)
	SwigGetTableEntryPoppable() TableEntryPoppable
	SwigGetRedisSelect() RedisSelect
	SwigGetSelectable() Selectable
	SwigGetRedisTransactioner() RedisTransactioner
}

type SwigcptrSubscriberStateTable uintptr

func (p SwigcptrSubscriberStateTable) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSubscriberStateTable) SwigIsSubscriberStateTable() {
}

func NewSubscriberStateTable__SWIG_0(arg1 DBConnector, arg2 string, arg3 int, arg4 int) (_swig_ret SubscriberStateTable) {
	var swig_r SubscriberStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (SubscriberStateTable)(SwigcptrSubscriberStateTable(C._wrap_new_SubscriberStateTable__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_699)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewSubscriberStateTable__SWIG_1(arg1 DBConnector, arg2 string, arg3 int) (_swig_ret SubscriberStateTable) {
	var swig_r SubscriberStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (SubscriberStateTable)(SwigcptrSubscriberStateTable(C._wrap_new_SubscriberStateTable__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_700)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewSubscriberStateTable__SWIG_2(arg1 DBConnector, arg2 string) (_swig_ret SubscriberStateTable) {
	var swig_r SubscriberStateTable
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (SubscriberStateTable)(SwigcptrSubscriberStateTable(C._wrap_new_SubscriberStateTable__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_701)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewSubscriberStateTable(a ...interface{}) SubscriberStateTable {
	argc := len(a)
	if argc == 2 {
		return NewSubscriberStateTable__SWIG_2(a[0].(DBConnector), a[1].(string))
	}
	if argc == 3 {
		return NewSubscriberStateTable__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(int))
	}
	if argc == 4 {
		return NewSubscriberStateTable__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(int), a[3].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSubscriberStateTable) Pops(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SubscriberStateTable_pops_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSubscriberStateTable) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_SubscriberStateTable_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriberStateTable) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SubscriberStateTable_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriberStateTable) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SubscriberStateTable_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriberStateTable) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SubscriberStateTable_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteSubscriberStateTable(arg1 SubscriberStateTable) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SubscriberStateTable_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSubscriberStateTable) GetPOP_BATCH_SIZE() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_GetSubscriberStateTable_POP_BATCH_SIZE_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSubscriberStateTable) GetDbConnector() (_swig_ret DBConnector) {
	var swig_r DBConnector
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_SubscriberStateTable_getDbConnector_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (_swig_base SwigcptrSubscriberStateTable) Pop__SWIG_0(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SubscriberStateTable_pop__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_674)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrSubscriberStateTable) Pop__SWIG_1(arg1 Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_SubscriberStateTable_pop__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0))
}

func (_swig_base SwigcptrSubscriberStateTable) Pop__SWIG_2(arg1 *string, arg2 *string, arg3 FieldValuePairs, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_SubscriberStateTable_pop__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_675)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (_swig_base SwigcptrSubscriberStateTable) Pop__SWIG_3(arg1 *string, arg2 *string, arg3 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SubscriberStateTable_pop__SWIG_3_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_voidp(_swig_i_0), C.swig_voidp(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (p SwigcptrSubscriberStateTable) Pop(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Pop__SWIG_1(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_))
		return
	}
	if argc == 2 {
		p.Pop__SWIG_0(a[0].(Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_), a[1].(string))
		return
	}
	if argc == 3 {
		p.Pop__SWIG_3(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs))
		return
	}
	if argc == 4 {
		p.Pop__SWIG_2(a[0].(*string), a[1].(*string), a[2].(FieldValuePairs), a[3].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrSubscriberStateTable) Empty() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SubscriberStateTable_empty_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func SubscriberStateTableGetTableSeparator(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SubscriberStateTable_getTableSeparator_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetTableName() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SubscriberStateTable_getTableName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetKeyName(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SubscriberStateTable_getKeyName_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_464)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetTableNameSeparator() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SubscriberStateTable_getTableNameSeparator_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetChannelName__SWIG_0() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_SubscriberStateTable_getChannelName__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetChannelName__SWIG_1(arg1 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SubscriberStateTable_getChannelName__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_468)(unsafe.Pointer(&_swig_i_0)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (_swig_base SwigcptrSubscriberStateTable) GetChannelName__SWIG_2(arg1 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SubscriberStateTable_getChannelName__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (p SwigcptrSubscriberStateTable) GetChannelName(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.GetChannelName__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_2
		}
		return p.GetChannelName__SWIG_1(a[0].(string))
	}
check_2:
	if argc == 1 {
		return p.GetChannelName__SWIG_2(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrSubscriberStateTable) GetFd() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SubscriberStateTable_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSubscriberStateTable) UpdateAfterRead() {
	C._wrap_SubscriberStateTable_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSubscriberStateTable) Subscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SubscriberStateTable_subscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_473)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrSubscriberStateTable) Psubscribe(arg1 DBConnector, arg2 string) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SubscriberStateTable_psubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), *(*C.swig_type_474)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (_swig_base SwigcptrSubscriberStateTable) Punsubscribe(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_SubscriberStateTable_punsubscribe_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_475)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrSubscriberStateTable) SetQueueLength(arg1 int64) {
	_swig_i_0 := arg1
	C._wrap_SubscriberStateTable_setQueueLength_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.swig_type_476(_swig_i_0))
}

func (_swig_base SwigcptrSubscriberStateTable) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_SubscriberStateTable_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSubscriberStateTable) Multi() {
	C._wrap_SubscriberStateTable_multi_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrSubscriberStateTable) Exec() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_SubscriberStateTable_exec_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrSubscriberStateTable) Enqueue__SWIG_0(arg1 string, arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SubscriberStateTable_enqueue__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), *(*C.swig_type_670)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func (_swig_base SwigcptrSubscriberStateTable) Enqueue__SWIG_1(arg1 RedisCommand, arg2 int) {
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	C._wrap_SubscriberStateTable_enqueue__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base), C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (p SwigcptrSubscriberStateTable) Enqueue(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Enqueue__SWIG_0(a[0].(string), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		p.Enqueue__SWIG_1(a[0].(RedisCommand), a[1].(int))
		return
	}
	panic("No match for overloaded function call")
}

func (_swig_base SwigcptrSubscriberStateTable) DequeueReply() (_swig_ret RedisReply) {
	var swig_r RedisReply
	swig_r = (RedisReply)(SwigcptrRedisReply(C._wrap_SubscriberStateTable_dequeueReply_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))))
	return swig_r
}

func (p SwigcptrSubscriberStateTable) SwigIsConsumerTableBase() {
}

func (p SwigcptrSubscriberStateTable) SwigGetConsumerTableBase() ConsumerTableBase {
	return SwigcptrConsumerTableBase(getSwigcptr(p))
}

func (p SwigcptrSubscriberStateTable) SwigIsTableConsumable() {
}

func (p SwigcptrSubscriberStateTable) SwigGetTableConsumable() TableConsumable {
	return SwigcptrTableConsumable(getSwigcptr(p))
}

func (p SwigcptrSubscriberStateTable) SwigIsTableBase() {
}

func (p SwigcptrSubscriberStateTable) SwigGetTableBase() TableBase {
	return SwigcptrTableBase(getSwigcptr(p))
}

func (p SwigcptrSubscriberStateTable) SwigGetTableEntryPoppable() TableEntryPoppable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetTableEntryPoppable()
}

func (p SwigcptrSubscriberStateTable) SwigGetRedisSelect() RedisSelect {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect()
}

func (p SwigcptrSubscriberStateTable) SwigGetSelectable() Selectable {
	return p.SwigGetConsumerTableBase().SwigGetTableConsumable().SwigGetRedisSelect().SwigGetSelectable()
}

func (p SwigcptrSubscriberStateTable) SwigGetRedisTransactioner() RedisTransactioner {
	return p.SwigGetConsumerTableBase().SwigGetRedisTransactioner()
}

type SubscriberStateTable interface {
	Swigcptr() uintptr
	SwigIsSubscriberStateTable()
	Pops(arg2 KeyOpFieldsValuesQueue)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	InitializedWithData() (_swig_ret bool)
	GetPOP_BATCH_SIZE() (_swig_ret int)
	GetDbConnector() (_swig_ret DBConnector)
	Pop(a ...interface{})
	Empty() (_swig_ret bool)
	GetTableName() (_swig_ret string)
	GetKeyName(arg1 string) (_swig_ret string)
	GetTableNameSeparator() (_swig_ret string)
	GetChannelName(a ...interface{}) string
	GetFd() (_swig_ret int)
	UpdateAfterRead()
	Subscribe(arg1 DBConnector, arg2 string)
	Psubscribe(arg1 DBConnector, arg2 string)
	Punsubscribe(arg1 string)
	SetQueueLength(arg1 int64)
	GetPri() (_swig_ret int)
	Multi()
	Exec() (_swig_ret bool)
	Enqueue(a ...interface{})
	DequeueReply() (_swig_ret RedisReply)
	SwigIsConsumerTableBase()
	SwigGetConsumerTableBase() ConsumerTableBase
	SwigIsTableConsumable()
	SwigGetTableConsumable() TableConsumable
	SwigIsTableBase()
	SwigGetTableBase() TableBase
	SwigGetTableEntryPoppable() TableEntryPoppable
	SwigGetRedisSelect() RedisSelect
	SwigGetSelectable() Selectable
	SwigGetRedisTransactioner() RedisTransactioner
}

func GetDEFAULT_NC_POP_BATCH_SIZE() (_swig_ret int64) {
	var swig_r int64
	swig_r = (int64)(C._wrap_DEFAULT_NC_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6())
	return swig_r
}

type SwigcptrNotificationConsumer uintptr

func (p SwigcptrNotificationConsumer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNotificationConsumer) SwigIsNotificationConsumer() {
}

func NewNotificationConsumer__SWIG_0(arg1 DBConnector, arg2 string, arg3 int, arg4 int64) (_swig_ret NotificationConsumer) {
	var swig_r NotificationConsumer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (NotificationConsumer)(SwigcptrNotificationConsumer(C._wrap_new_NotificationConsumer__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_711)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C.swig_type_712(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationConsumer__SWIG_1(arg1 DBConnector, arg2 string, arg3 int) (_swig_ret NotificationConsumer) {
	var swig_r NotificationConsumer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (NotificationConsumer)(SwigcptrNotificationConsumer(C._wrap_new_NotificationConsumer__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_713)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationConsumer__SWIG_2(arg1 DBConnector, arg2 string) (_swig_ret NotificationConsumer) {
	var swig_r NotificationConsumer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (NotificationConsumer)(SwigcptrNotificationConsumer(C._wrap_new_NotificationConsumer__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_714)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationConsumer(a ...interface{}) NotificationConsumer {
	argc := len(a)
	if argc == 2 {
		return NewNotificationConsumer__SWIG_2(a[0].(DBConnector), a[1].(string))
	}
	if argc == 3 {
		return NewNotificationConsumer__SWIG_1(a[0].(DBConnector), a[1].(string), a[2].(int))
	}
	if argc == 4 {
		return NewNotificationConsumer__SWIG_0(a[0].(DBConnector), a[1].(string), a[2].(int), a[3].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrNotificationConsumer) Pop(arg2 *string, arg3 *string, arg4 FieldValuePairs) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_NotificationConsumer_pop_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.uintptr_t(_swig_i_3))
}

func (arg1 SwigcptrNotificationConsumer) Pops(arg2 KeyOpFieldsValuesQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_NotificationConsumer_pops_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrNotificationConsumer) Peek() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_NotificationConsumer_peek_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteNotificationConsumer(arg1 NotificationConsumer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_NotificationConsumer_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrNotificationConsumer) GetFd() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_NotificationConsumer_getFd_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrNotificationConsumer) ReadData() (_swig_ret uint64) {
	var swig_r uint64
	_swig_i_0 := arg1
	swig_r = (uint64)(C._wrap_NotificationConsumer_readData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrNotificationConsumer) HasData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_NotificationConsumer_hasData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrNotificationConsumer) HasCachedData() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_NotificationConsumer_hasCachedData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrNotificationConsumer) GetPOP_BATCH_SIZE() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_NotificationConsumer_POP_BATCH_SIZE_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (_swig_base SwigcptrNotificationConsumer) InitializedWithData() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_NotificationConsumer_initializedWithData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (_swig_base SwigcptrNotificationConsumer) UpdateAfterRead() {
	C._wrap_NotificationConsumer_updateAfterRead_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base))
}

func (_swig_base SwigcptrNotificationConsumer) GetPri() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_NotificationConsumer_getPri_swsscommon_2432462d295473d6(C.uintptr_t(_swig_base)))
	return swig_r
}

func (p SwigcptrNotificationConsumer) SwigIsSelectable() {
}

func (p SwigcptrNotificationConsumer) SwigGetSelectable() Selectable {
	return SwigcptrSelectable(getSwigcptr(p))
}

type NotificationConsumer interface {
	Swigcptr() uintptr
	SwigIsNotificationConsumer()
	Pop(arg2 *string, arg3 *string, arg4 FieldValuePairs)
	Pops(arg2 KeyOpFieldsValuesQueue)
	Peek() (_swig_ret int)
	GetFd() (_swig_ret int)
	ReadData() (_swig_ret uint64)
	HasData() (_swig_ret bool)
	HasCachedData() (_swig_ret bool)
	GetPOP_BATCH_SIZE() (_swig_ret int64)
	InitializedWithData() (_swig_ret bool)
	UpdateAfterRead()
	GetPri() (_swig_ret int)
	SwigIsSelectable()
	SwigGetSelectable() Selectable
}

type SwigcptrNotificationProducer uintptr

func (p SwigcptrNotificationProducer) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNotificationProducer) SwigIsNotificationProducer() {
}

func NewNotificationProducer__SWIG_0(arg1 DBConnector, arg2 string) (_swig_ret NotificationProducer) {
	var swig_r NotificationProducer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (NotificationProducer)(SwigcptrNotificationProducer(C._wrap_new_NotificationProducer__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_717)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationProducer__SWIG_1(arg1 RedisPipeline, arg2 string, arg3 bool) (_swig_ret NotificationProducer) {
	var swig_r NotificationProducer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (NotificationProducer)(SwigcptrNotificationProducer(C._wrap_new_NotificationProducer__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_718)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationProducer__SWIG_2(arg1 RedisPipeline, arg2 string) (_swig_ret NotificationProducer) {
	var swig_r NotificationProducer
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (NotificationProducer)(SwigcptrNotificationProducer(C._wrap_new_NotificationProducer__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_719)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewNotificationProducer(a ...interface{}) NotificationProducer {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(DBConnector); !ok {
			goto check_1
		}
		return NewNotificationProducer__SWIG_0(a[0].(DBConnector), a[1].(string))
	}
check_1:
	if argc == 2 {
		return NewNotificationProducer__SWIG_2(a[0].(RedisPipeline), a[1].(string))
	}
	if argc == 3 {
		return NewNotificationProducer__SWIG_1(a[0].(RedisPipeline), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrNotificationProducer) Send(arg2 string, arg3 string, arg4 FieldValuePairs) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (int64)(C._wrap_NotificationProducer_send_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_721)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_722)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func DeleteNotificationProducer(arg1 NotificationProducer) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_NotificationProducer_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type NotificationProducer interface {
	Swigcptr() uintptr
	SwigIsNotificationProducer()
	Send(arg2 string, arg3 string, arg4 FieldValuePairs) (_swig_ret int64)
}

const MAXIMUM_WARMRESTART_TIMER_VALUE int = 9999
const DISABLE_WARMRESTART_TIMER_VALUE int = 9999

type SwigcptrWarmStart uintptr

func (p SwigcptrWarmStart) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWarmStart) SwigIsWarmStart() {
}

type SwssWarmStartWarmStartState int

func _swig_getWarmStart_INITIALIZED_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_INITIALIZED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartINITIALIZED SwssWarmStartWarmStartState = _swig_getWarmStart_INITIALIZED_WarmStart()

func _swig_getWarmStart_RESTORED_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_RESTORED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartRESTORED SwssWarmStartWarmStartState = _swig_getWarmStart_RESTORED_WarmStart()

func _swig_getWarmStart_REPLAYED_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_REPLAYED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartREPLAYED SwssWarmStartWarmStartState = _swig_getWarmStart_REPLAYED_WarmStart()

func _swig_getWarmStart_RECONCILED_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_RECONCILED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartRECONCILED SwssWarmStartWarmStartState = _swig_getWarmStart_RECONCILED_WarmStart()

func _swig_getWarmStart_WSDISABLED_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_WSDISABLED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartWSDISABLED SwssWarmStartWarmStartState = _swig_getWarmStart_WSDISABLED_WarmStart()

func _swig_getWarmStart_WSUNKNOWN_WarmStart() (_swig_ret SwssWarmStartWarmStartState) {
	var swig_r SwssWarmStartWarmStartState
	swig_r = (SwssWarmStartWarmStartState)(C._wrap_WSUNKNOWN_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartWSUNKNOWN SwssWarmStartWarmStartState = _swig_getWarmStart_WSUNKNOWN_WarmStart()

type SwssWarmStartDataCheckState int

func _swig_getWarmStart_CHECK_IGNORED_WarmStart() (_swig_ret SwssWarmStartDataCheckState) {
	var swig_r SwssWarmStartDataCheckState
	swig_r = (SwssWarmStartDataCheckState)(C._wrap_CHECK_IGNORED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartCHECK_IGNORED SwssWarmStartDataCheckState = _swig_getWarmStart_CHECK_IGNORED_WarmStart()

func _swig_getWarmStart_CHECK_PASSED_WarmStart() (_swig_ret SwssWarmStartDataCheckState) {
	var swig_r SwssWarmStartDataCheckState
	swig_r = (SwssWarmStartDataCheckState)(C._wrap_CHECK_PASSED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartCHECK_PASSED SwssWarmStartDataCheckState = _swig_getWarmStart_CHECK_PASSED_WarmStart()

func _swig_getWarmStart_CHECK_FAILED_WarmStart() (_swig_ret SwssWarmStartDataCheckState) {
	var swig_r SwssWarmStartDataCheckState
	swig_r = (SwssWarmStartDataCheckState)(C._wrap_CHECK_FAILED_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartCHECK_FAILED SwssWarmStartDataCheckState = _swig_getWarmStart_CHECK_FAILED_WarmStart()

type SwssWarmStartDataCheckStage int

func _swig_getWarmStart_STAGE_SHUTDOWN_WarmStart() (_swig_ret SwssWarmStartDataCheckStage) {
	var swig_r SwssWarmStartDataCheckStage
	swig_r = (SwssWarmStartDataCheckStage)(C._wrap_STAGE_SHUTDOWN_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartSTAGE_SHUTDOWN SwssWarmStartDataCheckStage = _swig_getWarmStart_STAGE_SHUTDOWN_WarmStart()

func _swig_getWarmStart_STAGE_RESTORE_WarmStart() (_swig_ret SwssWarmStartDataCheckStage) {
	var swig_r SwssWarmStartDataCheckStage
	swig_r = (SwssWarmStartDataCheckStage)(C._wrap_STAGE_RESTORE_WarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

var WarmStartSTAGE_RESTORE SwssWarmStartDataCheckStage = _swig_getWarmStart_STAGE_RESTORE_WarmStart()

func GetWarmStartWarmStartStateNameMap() (_swig_ret Std_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_) {
	var swig_r Std_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_
	swig_r = (Std_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_)(SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_(C._wrap_WarmStart_warmStartStateNameMap_get_swsscommon_2432462d295473d6()))
	return swig_r
}

func GetWarmStartDataCheckStateNameMap() (_swig_ret Std_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_) {
	var swig_r Std_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_
	swig_r = (Std_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_)(SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_(C._wrap_WarmStart_dataCheckStateNameMap_get_swsscommon_2432462d295473d6()))
	return swig_r
}

func WarmStartGetInstance() (_swig_ret WarmStart) {
	var swig_r WarmStart
	swig_r = (WarmStart)(SwigcptrWarmStart(C._wrap_WarmStart_getInstance_swsscommon_2432462d295473d6()))
	return swig_r
}

func WarmStartInitialize__SWIG_0(arg1 string, arg2 string, arg3 uint, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_WarmStart_initialize__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_723)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_724)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func WarmStartInitialize__SWIG_1(arg1 string, arg2 string, arg3 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_WarmStart_initialize__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_725)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_726)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func WarmStartInitialize__SWIG_2(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WarmStart_initialize__SWIG_2_swsscommon_2432462d295473d6(*(*C.swig_type_727)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_728)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func WarmStartInitialize(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		WarmStartInitialize__SWIG_2(a[0].(string), a[1].(string))
		return
	}
	if argc == 3 {
		WarmStartInitialize__SWIG_1(a[0].(string), a[1].(string), a[2].(uint))
		return
	}
	if argc == 4 {
		WarmStartInitialize__SWIG_0(a[0].(string), a[1].(string), a[2].(uint), a[3].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func WarmStartCheckWarmStart__SWIG_0(arg1 string, arg2 string, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_WarmStart_checkWarmStart__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_729)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_730)(unsafe.Pointer(&_swig_i_1)), C._Bool(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func WarmStartCheckWarmStart__SWIG_1(arg1 string, arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_WarmStart_checkWarmStart__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_731)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_732)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func WarmStartCheckWarmStart(a ...interface{}) bool {
	argc := len(a)
	if argc == 2 {
		return WarmStartCheckWarmStart__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return WarmStartCheckWarmStart__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func WarmStartIsWarmStart() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_WarmStart_isWarmStart_swsscommon_2432462d295473d6())
	return swig_r
}

func WarmStartIsSystemWarmRebootEnabled() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_WarmStart_isSystemWarmRebootEnabled_swsscommon_2432462d295473d6())
	return swig_r
}

func WarmStartGetWarmStartState(arg1 string, arg2 *SwssWarmStartWarmStartState) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WarmStart_getWarmStartState_swsscommon_2432462d295473d6(*(*C.swig_type_733)(unsafe.Pointer(&_swig_i_0)), C.swig_voidp(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func WarmStartSetWarmStartState(arg1 string, arg2 SwssWarmStartWarmStartState) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WarmStart_setWarmStartState_swsscommon_2432462d295473d6(*(*C.swig_type_734)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func WarmStartGetWarmStartTimer(arg1 string, arg2 string) (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uint)(C._wrap_WarmStart_getWarmStartTimer_swsscommon_2432462d295473d6(*(*C.swig_type_735)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_736)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func WarmStartSetDataCheckState(arg1 string, arg2 SwssWarmStartDataCheckStage, arg3 SwssWarmStartDataCheckState) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_WarmStart_setDataCheckState_swsscommon_2432462d295473d6(*(*C.swig_type_737)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func WarmStartGetDataCheckState(arg1 string, arg2 SwssWarmStartDataCheckStage) (_swig_ret SwssWarmStartDataCheckState) {
	var swig_r SwssWarmStartDataCheckState
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (SwssWarmStartDataCheckState)(C._wrap_WarmStart_getDataCheckState_swsscommon_2432462d295473d6(*(*C.swig_type_738)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewWarmStart() (_swig_ret WarmStart) {
	var swig_r WarmStart
	swig_r = (WarmStart)(SwigcptrWarmStart(C._wrap_new_WarmStart_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteWarmStart(arg1 WarmStart) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_WarmStart_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type WarmStart interface {
	Swigcptr() uintptr
	SwigIsWarmStart()
}

type SwigcptrUnavailableDataError uintptr

func (p SwigcptrUnavailableDataError) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUnavailableDataError) SwigIsUnavailableDataError() {
}

func NewUnavailableDataError(arg1 string, arg2 string) (_swig_ret UnavailableDataError) {
	var swig_r UnavailableDataError
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (UnavailableDataError)(SwigcptrUnavailableDataError(C._wrap_new_UnavailableDataError_swsscommon_2432462d295473d6(*(*C.swig_type_739)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_740)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrUnavailableDataError) GetData() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_UnavailableDataError_getData_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func DeleteUnavailableDataError(arg1 UnavailableDataError) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_UnavailableDataError_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type UnavailableDataError interface {
	Swigcptr() uintptr
	SwigIsUnavailableDataError()
	GetData() (_swig_ret string)
}

type SwigcptrDBInterface uintptr

func (p SwigcptrDBInterface) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDBInterface) SwigIsDBInterface() {
}

func (arg1 SwigcptrDBInterface) Connect__SWIG_0(arg2 int, arg3 string, arg4 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DBInterface_connect__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_742)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrDBInterface) Connect__SWIG_1(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DBInterface_connect__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_743)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrDBInterface) Connect(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		p.Connect__SWIG_1(a[0].(int), a[1].(string))
		return
	}
	if argc == 3 {
		p.Connect__SWIG_0(a[0].(int), a[1].(string), a[2].(bool))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Close__SWIG_0(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_DBInterface_close__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_744)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrDBInterface) Close__SWIG_1() {
	_swig_i_0 := arg1
	C._wrap_DBInterface_close__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

func (p SwigcptrDBInterface) Close(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Close__SWIG_1()
		return
	}
	if argc == 1 {
		p.Close__SWIG_0(a[0].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Delete__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_DBInterface_delete__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_746)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_747)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Delete__SWIG_1(arg2 string, arg3 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_DBInterface_delete__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_749)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_750)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrDBInterface) Delete(a ...interface{}) int64 {
	argc := len(a)
	if argc == 2 {
		return p.Delete__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Delete__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Delete_all_by_pattern(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_DBInterface_delete_all_by_pattern_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_751)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_752)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrDBInterface) Exists(arg2 string, arg3 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_DBInterface_exists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_753)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_754)(unsafe.Pointer(&_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Get__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 bool) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_DBInterface_get__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_755)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_756)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_757)(unsafe.Pointer(&_swig_i_3)), C._Bool(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Get__SWIG_1(arg2 string, arg3 string, arg4 string) (_swig_ret Std_shared_ptr_Sl_std_string_Sg_) {
	var swig_r Std_shared_ptr_Sl_std_string_Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Std_shared_ptr_Sl_std_string_Sg_)(SwigcptrStd_shared_ptr_Sl_std_string_Sg_(C._wrap_DBInterface_get__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_758)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_759)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_760)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (p SwigcptrDBInterface) Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_ {
	argc := len(a)
	if argc == 3 {
		return p.Get__SWIG_1(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return p.Get__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Hexists(arg2 string, arg3 string, arg4 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (bool)(C._wrap_DBInterface_hexists_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_761)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_762)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_763)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Get_all__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_DBInterface_get_all__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_764)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_765)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Get_all__SWIG_1(arg2 string, arg3 string) (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_DBInterface_get_all__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_766)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_767)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (p SwigcptrDBInterface) Get_all(a ...interface{}) FieldValueMap {
	argc := len(a)
	if argc == 2 {
		return p.Get_all__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Get_all__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Keys__SWIG_0(arg2 string, arg3 string, arg4 bool) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_DBInterface_keys__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_768)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_769)(unsafe.Pointer(&_swig_i_2)), C._Bool(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Keys__SWIG_1(arg2 string, arg3 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_DBInterface_keys__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_770)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_771)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Keys__SWIG_2(arg2 string) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_DBInterface_keys__SWIG_2_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_772)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrDBInterface) Keys(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 1 {
		return p.Keys__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return p.Keys__SWIG_1(a[0].(string), a[1].(string))
	}
	if argc == 3 {
		return p.Keys__SWIG_0(a[0].(string), a[1].(string), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Scan(arg2 string, arg3 int, arg4 string, arg5 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) {
	var swig_r Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)(SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_(C._wrap_DBInterface_scan_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_773)(unsafe.Pointer(&_swig_i_1)), C.swig_intgo(_swig_i_2), *(*C.swig_type_774)(unsafe.Pointer(&_swig_i_3)), C.swig_intgo(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Publish(arg2 string, arg3 string, arg4 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_DBInterface_publish_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_776)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_777)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_778)(unsafe.Pointer(&_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Hmset(arg2 string, arg3 string, arg4 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	C._wrap_DBInterface_hmset_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_779)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_780)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrDBInterface) Set__SWIG_0(arg2 string, arg3 string, arg4 string, arg5 string, arg6 bool) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (int64)(C._wrap_DBInterface_set__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_782)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_783)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_784)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_785)(unsafe.Pointer(&_swig_i_4)), C._Bool(_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Set__SWIG_1(arg2 string, arg3 string, arg4 string, arg5 string) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (int64)(C._wrap_DBInterface_set__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_787)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_788)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_789)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_790)(unsafe.Pointer(&_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func (p SwigcptrDBInterface) Set(a ...interface{}) int64 {
	argc := len(a)
	if argc == 4 {
		return p.Set__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return p.Set__SWIG_0(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDBInterface) Get_redis_client(arg2 string) (_swig_ret DBConnector) {
	var swig_r DBConnector
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DBConnector)(SwigcptrDBConnector(C._wrap_DBInterface_get_redis_client_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_791)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrDBInterface) Set_redis_kwargs(arg2 string, arg3 string, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_DBInterface_set_redis_kwargs_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_792)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_793)(unsafe.Pointer(&_swig_i_2)), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func _swig_getDBInterface_DBInterface_BLOCKING_ATTEMPT_ERROR_THRESHOLD_DBInterface() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DBInterface_BLOCKING_ATTEMPT_ERROR_THRESHOLD_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfaceBLOCKING_ATTEMPT_ERROR_THRESHOLD int = _swig_getDBInterface_DBInterface_BLOCKING_ATTEMPT_ERROR_THRESHOLD_DBInterface()

func _swig_getDBInterface_DBInterface_BLOCKING_ATTEMPT_SUPPRESSION_DBInterface() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DBInterface_BLOCKING_ATTEMPT_SUPPRESSION_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfaceBLOCKING_ATTEMPT_SUPPRESSION int = _swig_getDBInterface_DBInterface_BLOCKING_ATTEMPT_SUPPRESSION_DBInterface()

func _swig_getDBInterface_DBInterface_CONNECT_RETRY_WAIT_TIME_DBInterface() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DBInterface_CONNECT_RETRY_WAIT_TIME_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfaceCONNECT_RETRY_WAIT_TIME int = _swig_getDBInterface_DBInterface_CONNECT_RETRY_WAIT_TIME_DBInterface()

func _swig_getDBInterface_DBInterface_DATA_RETRIEVAL_WAIT_TIME_DBInterface() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DBInterface_DATA_RETRIEVAL_WAIT_TIME_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfaceDATA_RETRIEVAL_WAIT_TIME int = _swig_getDBInterface_DBInterface_DATA_RETRIEVAL_WAIT_TIME_DBInterface()

func _swig_getDBInterface_DBInterface_PUB_SUB_NOTIFICATION_TIMEOUT_DBInterface() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_DBInterface_PUB_SUB_NOTIFICATION_TIMEOUT_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfacePUB_SUB_NOTIFICATION_TIMEOUT int = _swig_getDBInterface_DBInterface_PUB_SUB_NOTIFICATION_TIMEOUT_DBInterface()

func _swig_getDBInterface_DBInterface_PUB_SUB_MAXIMUM_DATA_WAIT_DBInterface() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_DBInterface_PUB_SUB_MAXIMUM_DATA_WAIT_DBInterface_swsscommon_2432462d295473d6())
	return swig_r
}

var DBInterfacePUB_SUB_MAXIMUM_DATA_WAIT float64 = _swig_getDBInterface_DBInterface_PUB_SUB_MAXIMUM_DATA_WAIT_DBInterface()

func NewDBInterface() (_swig_ret DBInterface) {
	var swig_r DBInterface
	swig_r = (DBInterface)(SwigcptrDBInterface(C._wrap_new_DBInterface_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteDBInterface(arg1 DBInterface) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_DBInterface_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type DBInterface interface {
	Swigcptr() uintptr
	SwigIsDBInterface()
	Connect(a ...interface{})
	Close(a ...interface{})
	Delete(a ...interface{}) int64
	Delete_all_by_pattern(arg2 string, arg3 string)
	Exists(arg2 string, arg3 string) (_swig_ret bool)
	Get(a ...interface{}) Std_shared_ptr_Sl_std_string_Sg_
	Hexists(arg2 string, arg3 string, arg4 string) (_swig_ret bool)
	Get_all(a ...interface{}) FieldValueMap
	Keys(a ...interface{}) VectorString
	Scan(arg2 string, arg3 int, arg4 string, arg5 uint) (_swig_ret Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_)
	Publish(arg2 string, arg3 string, arg4 string) (_swig_ret int64)
	Hmset(arg2 string, arg3 string, arg4 FieldValueMap)
	Set(a ...interface{}) int64
	Get_redis_client(arg2 string) (_swig_ret DBConnector)
	Set_redis_kwargs(arg2 string, arg3 string, arg4 int)
}

func GetDAEMON_LOGLEVEL() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DAEMON_LOGLEVEL_get_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func GetDAEMON_LOGOUTPUT() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_DAEMON_LOGOUTPUT_get_swsscommon_2432462d295473d6()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func Err_exit(arg1 string, arg2 int, arg3 int, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_err_exit_swsscommon_2432462d295473d6(*(*C.swig_type_796)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_797)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

type SwigcptrLogger uintptr

func (p SwigcptrLogger) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLogger) SwigIsLogger() {
}

type SwssLoggerPriority int

func _swig_getLogger_SWSS_EMERG_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_EMERG_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_EMERG SwssLoggerPriority = _swig_getLogger_SWSS_EMERG_Logger()

func _swig_getLogger_SWSS_ALERT_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_ALERT_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_ALERT SwssLoggerPriority = _swig_getLogger_SWSS_ALERT_Logger()

func _swig_getLogger_SWSS_CRIT_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_CRIT_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_CRIT SwssLoggerPriority = _swig_getLogger_SWSS_CRIT_Logger()

func _swig_getLogger_SWSS_ERROR_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_ERROR_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_ERROR SwssLoggerPriority = _swig_getLogger_SWSS_ERROR_Logger()

func _swig_getLogger_SWSS_WARN_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_WARN_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_WARN SwssLoggerPriority = _swig_getLogger_SWSS_WARN_Logger()

func _swig_getLogger_SWSS_NOTICE_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_NOTICE_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_NOTICE SwssLoggerPriority = _swig_getLogger_SWSS_NOTICE_Logger()

func _swig_getLogger_SWSS_INFO_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_INFO_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_INFO SwssLoggerPriority = _swig_getLogger_SWSS_INFO_Logger()

func _swig_getLogger_SWSS_DEBUG_Logger() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_SWSS_DEBUG_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_DEBUG SwssLoggerPriority = _swig_getLogger_SWSS_DEBUG_Logger()

func GetLoggerPriorityStringMap() (_swig_ret Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_) {
	var swig_r Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_
	swig_r = (Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_)(SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_(C._wrap_Logger_priorityStringMap_get_swsscommon_2432462d295473d6()))
	return swig_r
}

type SwssLoggerOutput int

func _swig_getLogger_SWSS_SYSLOG_Logger() (_swig_ret SwssLoggerOutput) {
	var swig_r SwssLoggerOutput
	swig_r = (SwssLoggerOutput)(C._wrap_SWSS_SYSLOG_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_SYSLOG SwssLoggerOutput = _swig_getLogger_SWSS_SYSLOG_Logger()

func _swig_getLogger_SWSS_STDOUT_Logger() (_swig_ret SwssLoggerOutput) {
	var swig_r SwssLoggerOutput
	swig_r = (SwssLoggerOutput)(C._wrap_SWSS_STDOUT_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_STDOUT SwssLoggerOutput = _swig_getLogger_SWSS_STDOUT_Logger()

func _swig_getLogger_SWSS_STDERR_Logger() (_swig_ret SwssLoggerOutput) {
	var swig_r SwssLoggerOutput
	swig_r = (SwssLoggerOutput)(C._wrap_SWSS_STDERR_Logger_swsscommon_2432462d295473d6())
	return swig_r
}

var LoggerSWSS_STDERR SwssLoggerOutput = _swig_getLogger_SWSS_STDERR_Logger()

func GetLoggerOutputStringMap() (_swig_ret Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_) {
	var swig_r Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_
	swig_r = (Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_)(SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_(C._wrap_Logger_outputStringMap_get_swsscommon_2432462d295473d6()))
	return swig_r
}

func LoggerGetInstance() (_swig_ret Logger) {
	var swig_r Logger
	swig_r = (Logger)(SwigcptrLogger(C._wrap_Logger_getInstance_swsscommon_2432462d295473d6()))
	return swig_r
}

func LoggerSetMinPrio(arg1 SwssLoggerPriority) {
	_swig_i_0 := arg1
	C._wrap_Logger_setMinPrio_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
}

func LoggerGetMinPrio() (_swig_ret SwssLoggerPriority) {
	var swig_r SwssLoggerPriority
	swig_r = (SwssLoggerPriority)(C._wrap_Logger_getMinPrio_swsscommon_2432462d295473d6())
	return swig_r
}

func LoggerLinkToDbWithOutput(arg1 string, arg2 Std_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_, arg3 string, arg4 Std_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_, arg5 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	_swig_i_3 := getSwigcptr(arg4)
	_swig_i_4 := arg5
	C._wrap_Logger_linkToDbWithOutput_swsscommon_2432462d295473d6(*(*C.swig_type_798)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_799)(unsafe.Pointer(&_swig_i_2)), C.uintptr_t(_swig_i_3), *(*C.swig_type_800)(unsafe.Pointer(&_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
}

func LoggerLinkToDb(arg1 string, arg2 Std_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	C._wrap_Logger_linkToDb_swsscommon_2432462d295473d6(*(*C.swig_type_801)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_802)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func LoggerLinkToDbNative__SWIG_0(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_linkToDbNative__SWIG_0_swsscommon_2432462d295473d6(*(*C.swig_type_803)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_804)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func LoggerLinkToDbNative__SWIG_1(arg1 string) {
	_swig_i_0 := arg1
	C._wrap_Logger_linkToDbNative__SWIG_1_swsscommon_2432462d295473d6(*(*C.swig_type_805)(unsafe.Pointer(&_swig_i_0)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
}

func LoggerLinkToDbNative(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		LoggerLinkToDbNative__SWIG_1(a[0].(string))
		return
	}
	if argc == 2 {
		LoggerLinkToDbNative__SWIG_0(a[0].(string), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func LoggerRestartLogger() {
	C._wrap_Logger_restartLogger_swsscommon_2432462d295473d6()
}

func (arg1 SwigcptrLogger) Write(arg2 SwssLoggerPriority, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Logger_write_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_806)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrLogger) Wthrow(arg2 SwssLoggerPriority, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Logger_wthrow_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_807)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func LoggerPriorityToString(arg1 SwssLoggerPriority) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_priorityToString_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func LoggerOutputToString(arg1 SwssLoggerOutput) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_outputToString_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func LoggerSwssOutputNotify(arg1 string, arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_swssOutputNotify_swsscommon_2432462d295473d6(*(*C.swig_type_810)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_811)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

type Logger interface {
	Swigcptr() uintptr
	SwigIsLogger()
	Write(arg2 SwssLoggerPriority, arg3 string)
	Wthrow(arg2 SwssLoggerPriority, arg3 string)
}

func Events_init_publisher(arg1 string) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_events_init_publisher_swsscommon_2432462d295473d6(*(*C.swig_type_812)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Events_deinit_publisher(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_events_deinit_publisher_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

const EVENT_TS_PARAM string = "timestamp"
const EVENT_MAXSZ int = 1024

func Event_publish__SWIG_0(arg1 uintptr, arg2 string, arg3 FieldValueMap) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (int)(C._wrap_event_publish__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_813)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func Event_publish__SWIG_1(arg1 uintptr, arg2 string) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int)(C._wrap_event_publish__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_814)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func Event_publish(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return Event_publish__SWIG_1(a[0].(uintptr), a[1].(string))
	}
	if argc == 3 {
		return Event_publish__SWIG_0(a[0].(uintptr), a[1].(string), a[2].(FieldValueMap))
	}
	panic("No match for overloaded function call")
}

func Events_init_subscriber__SWIG_0(arg1 bool, arg2 int, arg3 VectorString) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (uintptr)(C._wrap_events_init_subscriber__SWIG_0_swsscommon_2432462d295473d6(C._Bool(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func Events_init_subscriber__SWIG_1(arg1 bool, arg2 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (uintptr)(C._wrap_events_init_subscriber__SWIG_1_swsscommon_2432462d295473d6(C._Bool(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func Events_init_subscriber__SWIG_2(arg1 bool) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_events_init_subscriber__SWIG_2_swsscommon_2432462d295473d6(C._Bool(_swig_i_0)))
	return swig_r
}

func Events_init_subscriber__SWIG_3() (_swig_ret uintptr) {
	var swig_r uintptr
	swig_r = (uintptr)(C._wrap_events_init_subscriber__SWIG_3_swsscommon_2432462d295473d6())
	return swig_r
}

func Events_init_subscriber(a ...interface{}) uintptr {
	argc := len(a)
	if argc == 0 {
		return Events_init_subscriber__SWIG_3()
	}
	if argc == 1 {
		return Events_init_subscriber__SWIG_2(a[0].(bool))
	}
	if argc == 2 {
		return Events_init_subscriber__SWIG_1(a[0].(bool), a[1].(int))
	}
	if argc == 3 {
		return Events_init_subscriber__SWIG_0(a[0].(bool), a[1].(int), a[2].(VectorString))
	}
	panic("No match for overloaded function call")
}

func Events_deinit_subscriber(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_events_deinit_subscriber_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type SwigcptrEvent_receive_op_t uintptr

func (p SwigcptrEvent_receive_op_t) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEvent_receive_op_t) SwigIsEvent_receive_op_t() {
}

func (arg1 SwigcptrEvent_receive_op_t) SetKey(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_event_receive_op_t_key_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), *(*C.swig_type_815)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrEvent_receive_op_t) GetKey() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_event_receive_op_t_key_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrEvent_receive_op_t) SetParams(arg2 FieldValueMap) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_event_receive_op_t_params_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEvent_receive_op_t) GetParams() (_swig_ret FieldValueMap) {
	var swig_r FieldValueMap
	_swig_i_0 := arg1
	swig_r = (FieldValueMap)(SwigcptrFieldValueMap(C._wrap_event_receive_op_t_params_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEvent_receive_op_t) SetMissed_cnt(arg2 uint) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_event_receive_op_t_missed_cnt_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrEvent_receive_op_t) GetMissed_cnt() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_event_receive_op_t_missed_cnt_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEvent_receive_op_t) SetPublish_epoch_ms(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_event_receive_op_t_publish_epoch_ms_set_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_type_817(_swig_i_1))
}

func (arg1 SwigcptrEvent_receive_op_t) GetPublish_epoch_ms() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_event_receive_op_t_publish_epoch_ms_get_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewEvent_receive_op_t() (_swig_ret Event_receive_op_t) {
	var swig_r Event_receive_op_t
	swig_r = (Event_receive_op_t)(SwigcptrEvent_receive_op_t(C._wrap_new_event_receive_op_t_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteEvent_receive_op_t(arg1 Event_receive_op_t) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_event_receive_op_t_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type Event_receive_op_t interface {
	Swigcptr() uintptr
	SwigIsEvent_receive_op_t()
	SetKey(arg2 string)
	GetKey() (_swig_ret string)
	SetParams(arg2 FieldValueMap)
	GetParams() (_swig_ret FieldValueMap)
	SetMissed_cnt(arg2 uint)
	GetMissed_cnt() (_swig_ret uint)
	SetPublish_epoch_ms(arg2 int64)
	GetPublish_epoch_ms() (_swig_ret int64)
}

func Event_receive(arg1 uintptr, arg2 Event_receive_op_t) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (int)(C._wrap_event_receive_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func Event_receive_json(arg1 uintptr, arg2 *string, arg3 *uint, arg4 *int64) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int)(C._wrap_event_receive_json_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2), C.swig_voidp(_swig_i_3)))
	return swig_r
}

type SwssStatusCode int

func _swig_getStatusCode_SWSS_RC_SUCCESS() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_SUCCESS_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_SUCCESS SwssStatusCode = _swig_getStatusCode_SWSS_RC_SUCCESS()

func _swig_getStatusCode_SWSS_RC_INVALID_PARAM() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_INVALID_PARAM_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_INVALID_PARAM SwssStatusCode = _swig_getStatusCode_SWSS_RC_INVALID_PARAM()

func _swig_getStatusCode_SWSS_RC_DEADLINE_EXCEEDED() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_DEADLINE_EXCEEDED_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_DEADLINE_EXCEEDED SwssStatusCode = _swig_getStatusCode_SWSS_RC_DEADLINE_EXCEEDED()

func _swig_getStatusCode_SWSS_RC_UNAVAIL() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_UNAVAIL_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_UNAVAIL SwssStatusCode = _swig_getStatusCode_SWSS_RC_UNAVAIL()

func _swig_getStatusCode_SWSS_RC_NOT_FOUND() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_NOT_FOUND_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_NOT_FOUND SwssStatusCode = _swig_getStatusCode_SWSS_RC_NOT_FOUND()

func _swig_getStatusCode_SWSS_RC_NO_MEMORY() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_NO_MEMORY_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_NO_MEMORY SwssStatusCode = _swig_getStatusCode_SWSS_RC_NO_MEMORY()

func _swig_getStatusCode_SWSS_RC_EXISTS() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_EXISTS_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_EXISTS SwssStatusCode = _swig_getStatusCode_SWSS_RC_EXISTS()

func _swig_getStatusCode_SWSS_RC_PERMISSION_DENIED() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_PERMISSION_DENIED_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_PERMISSION_DENIED SwssStatusCode = _swig_getStatusCode_SWSS_RC_PERMISSION_DENIED()

func _swig_getStatusCode_SWSS_RC_FULL() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_FULL_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_FULL SwssStatusCode = _swig_getStatusCode_SWSS_RC_FULL()

func _swig_getStatusCode_SWSS_RC_IN_USE() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_IN_USE_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_IN_USE SwssStatusCode = _swig_getStatusCode_SWSS_RC_IN_USE()

func _swig_getStatusCode_SWSS_RC_INTERNAL() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_INTERNAL_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_INTERNAL SwssStatusCode = _swig_getStatusCode_SWSS_RC_INTERNAL()

func _swig_getStatusCode_SWSS_RC_UNIMPLEMENTED() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_UNIMPLEMENTED_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_UNIMPLEMENTED SwssStatusCode = _swig_getStatusCode_SWSS_RC_UNIMPLEMENTED()

func _swig_getStatusCode_SWSS_RC_NOT_EXECUTED() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_NOT_EXECUTED_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_NOT_EXECUTED SwssStatusCode = _swig_getStatusCode_SWSS_RC_NOT_EXECUTED()

func _swig_getStatusCode_SWSS_RC_FAILED_PRECONDITION() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_FAILED_PRECONDITION_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_FAILED_PRECONDITION SwssStatusCode = _swig_getStatusCode_SWSS_RC_FAILED_PRECONDITION()

func _swig_getStatusCode_SWSS_RC_UNKNOWN() (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	swig_r = (SwssStatusCode)(C._wrap_StatusCode_SWSS_RC_UNKNOWN_swsscommon_2432462d295473d6())
	return swig_r
}

var StatusCode_SWSS_RC_UNKNOWN SwssStatusCode = _swig_getStatusCode_SWSS_RC_UNKNOWN()

func GetStatusCodeMapping() (_swig_ret Std_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_) {
	var swig_r Std_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_
	swig_r = (Std_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_)(SwigcptrStd_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_(C._wrap_statusCodeMapping_get_swsscommon_2432462d295473d6()))
	return swig_r
}

func GetStatusCodeLookup() (_swig_ret Std_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_) {
	var swig_r Std_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_
	swig_r = (Std_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_)(SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_(C._wrap_StatusCodeLookup_get_swsscommon_2432462d295473d6()))
	return swig_r
}

func StatusCodeToStr(arg1 *SwssStatusCode) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_statusCodeToStr_swsscommon_2432462d295473d6(C.swig_voidp(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func StrToStatusCode(arg1 string) (_swig_ret SwssStatusCode) {
	var swig_r SwssStatusCode
	_swig_i_0 := arg1
	swig_r = (SwssStatusCode)(C._wrap_strToStatusCode_swsscommon_2432462d295473d6(*(*C.swig_type_820)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

type SwigcptrRestartWaiter uintptr

func (p SwigcptrRestartWaiter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRestartWaiter) SwigIsRestartWaiter() {
}

func RestartWaiterWaitAdvancedBootDone__SWIG_0(arg1 uint, arg2 uint, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RestartWaiter_waitAdvancedBootDone__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func RestartWaiterWaitAdvancedBootDone__SWIG_1(arg1 uint, arg2 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RestartWaiter_waitAdvancedBootDone__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func RestartWaiterWaitAdvancedBootDone__SWIG_2(arg1 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RestartWaiter_waitAdvancedBootDone__SWIG_2_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func RestartWaiterWaitAdvancedBootDone__SWIG_3() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RestartWaiter_waitAdvancedBootDone__SWIG_3_swsscommon_2432462d295473d6())
	return swig_r
}

func RestartWaiterWaitAdvancedBootDone(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return RestartWaiterWaitAdvancedBootDone__SWIG_3()
	}
	if argc == 1 {
		return RestartWaiterWaitAdvancedBootDone__SWIG_2(a[0].(uint))
	}
	if argc == 2 {
		return RestartWaiterWaitAdvancedBootDone__SWIG_1(a[0].(uint), a[1].(uint))
	}
	if argc == 3 {
		return RestartWaiterWaitAdvancedBootDone__SWIG_0(a[0].(uint), a[1].(uint), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func RestartWaiterWaitWarmBootDone__SWIG_0(arg1 uint, arg2 uint, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RestartWaiter_waitWarmBootDone__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func RestartWaiterWaitWarmBootDone__SWIG_1(arg1 uint, arg2 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RestartWaiter_waitWarmBootDone__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func RestartWaiterWaitWarmBootDone__SWIG_2(arg1 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RestartWaiter_waitWarmBootDone__SWIG_2_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func RestartWaiterWaitWarmBootDone__SWIG_3() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RestartWaiter_waitWarmBootDone__SWIG_3_swsscommon_2432462d295473d6())
	return swig_r
}

func RestartWaiterWaitWarmBootDone(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return RestartWaiterWaitWarmBootDone__SWIG_3()
	}
	if argc == 1 {
		return RestartWaiterWaitWarmBootDone__SWIG_2(a[0].(uint))
	}
	if argc == 2 {
		return RestartWaiterWaitWarmBootDone__SWIG_1(a[0].(uint), a[1].(uint))
	}
	if argc == 3 {
		return RestartWaiterWaitWarmBootDone__SWIG_0(a[0].(uint), a[1].(uint), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func RestartWaiterWaitFastBootDone__SWIG_0(arg1 uint, arg2 uint, arg3 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_RestartWaiter_waitFastBootDone__SWIG_0_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C._Bool(_swig_i_2)))
	return swig_r
}

func RestartWaiterWaitFastBootDone__SWIG_1(arg1 uint, arg2 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RestartWaiter_waitFastBootDone__SWIG_1_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func RestartWaiterWaitFastBootDone__SWIG_2(arg1 uint) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RestartWaiter_waitFastBootDone__SWIG_2_swsscommon_2432462d295473d6(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func RestartWaiterWaitFastBootDone__SWIG_3() (_swig_ret bool) {
	var swig_r bool
	swig_r = (bool)(C._wrap_RestartWaiter_waitFastBootDone__SWIG_3_swsscommon_2432462d295473d6())
	return swig_r
}

func RestartWaiterWaitFastBootDone(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return RestartWaiterWaitFastBootDone__SWIG_3()
	}
	if argc == 1 {
		return RestartWaiterWaitFastBootDone__SWIG_2(a[0].(uint))
	}
	if argc == 2 {
		return RestartWaiterWaitFastBootDone__SWIG_1(a[0].(uint), a[1].(uint))
	}
	if argc == 3 {
		return RestartWaiterWaitFastBootDone__SWIG_0(a[0].(uint), a[1].(uint), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func RestartWaiterIsAdvancedBootInProgressHelper__SWIG_0(arg1 DBConnector, arg2 bool) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_RestartWaiter_isAdvancedBootInProgressHelper__SWIG_0_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1)))
	return swig_r
}

func RestartWaiterIsAdvancedBootInProgressHelper__SWIG_1(arg1 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_RestartWaiter_isAdvancedBootInProgressHelper__SWIG_1_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func RestartWaiterIsAdvancedBootInProgressHelper(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		return RestartWaiterIsAdvancedBootInProgressHelper__SWIG_1(a[0].(DBConnector))
	}
	if argc == 2 {
		return RestartWaiterIsAdvancedBootInProgressHelper__SWIG_0(a[0].(DBConnector), a[1].(bool))
	}
	panic("No match for overloaded function call")
}

func RestartWaiterIsAdvancedBootInProgress(arg1 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_RestartWaiter_isAdvancedBootInProgress_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func RestartWaiterIsFastBootInProgress(arg1 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_RestartWaiter_isFastBootInProgress_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func RestartWaiterIsWarmBootInProgress(arg1 DBConnector) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (bool)(C._wrap_RestartWaiter_isWarmBootInProgress_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewRestartWaiter() (_swig_ret RestartWaiter) {
	var swig_r RestartWaiter
	swig_r = (RestartWaiter)(SwigcptrRestartWaiter(C._wrap_new_RestartWaiter_swsscommon_2432462d295473d6()))
	return swig_r
}

func DeleteRestartWaiter(arg1 RestartWaiter) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RestartWaiter_swsscommon_2432462d295473d6(C.uintptr_t(_swig_i_0))
}

type RestartWaiter interface {
	Swigcptr() uintptr
	SwigIsRestartWaiter()
}

type SwigcptrSwigDirector_Counter uintptr
type SwigDirector_Counter interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_Counter) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_shared_ptr_Sl_std_string_Sg_ uintptr
type Std_shared_ptr_Sl_std_string_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_shared_ptr_Sl_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ uintptr
type Std_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_pair_Sl_int_Sc_std_vector_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_ uintptr
type Std_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_function_Sl_void_Sp_std_string_Sc_std_string_SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_ZmqProducerStateTable uintptr
type SwigDirector_ZmqProducerStateTable interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_ZmqProducerStateTable) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_ uintptr
type Std_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_enum_SS_swss_StatusCode_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_StatusCode_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_ uintptr
type Std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp_swss_CounterTable_SS_const_SA__SP__Sg_ uintptr
type Std_function_Sl_void_Sp_swss_CounterTable_SS_const_SA__SP__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_function_Sl_void_Sp_swss_CounterTable_SS_const_SA__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_ uintptr
type Std_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_std_shared_ptr_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_char_Sg_ uintptr
type Std_vector_Sl_char_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_char_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_unique_ptr_Sl_swss_DBConnector_Sg_ uintptr
type Std_unique_ptr_Sl_swss_DBConnector_Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_unique_ptr_Sl_swss_DBConnector_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_ uintptr
type Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Output_Sc_std_less_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_unordered_map_Sl_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_ uintptr
type Std_unordered_map_Sl_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_unordered_map_Sl_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_ uintptr
type Std_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_std_tuple_Sl_std_string_Sc_std_string_Sc_std_vector_Sl_std_pair_Sl_std_string_Sc_std_string_Sg__Sg__Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_ uintptr
type Std_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_Logger_Priority_Sc_std_less_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_swss_Selectable_Sm__Sg_ uintptr
type Std_vector_Sl_swss_Selectable_Sm__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_vector_Sl_swss_Selectable_Sm__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_ProducerStateTable uintptr
type SwigDirector_ProducerStateTable interface {
	Swigcptr() uintptr
}

func (p SwigcptrSwigDirector_ProducerStateTable) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_ uintptr
type Std_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_WarmStartState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_WarmStartState_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_ uintptr
type Std_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_enum_SS_swss_WarmStart_DataCheckState_Sc_std_string_Sc_std_less_Sl_enum_SS_swss_WarmStart_DataCheckState_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_ uintptr
type Std_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr
}

func (p SwigcptrStd_map_Sl_std_string_Sc_enum_SS_swss_StatusCode_Sc_std_less_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}
