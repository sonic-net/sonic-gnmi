// Code generated by MockGen. DO NOT EDIT.
// Source: internal/hostinfo/platform.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	hostinfo "github.com/sonic-net/sonic-gnmi/upgrade-service/internal/hostinfo"
)

// MockPlatformInfoProvider is a mock of PlatformInfoProvider interface.
type MockPlatformInfoProvider struct {
	ctrl     *gomock.Controller
	recorder *MockPlatformInfoProviderMockRecorder
}

// MockPlatformInfoProviderMockRecorder is the mock recorder for MockPlatformInfoProvider.
type MockPlatformInfoProviderMockRecorder struct {
	mock *MockPlatformInfoProvider
}

// NewMockPlatformInfoProvider creates a new mock instance.
func NewMockPlatformInfoProvider(ctrl *gomock.Controller) *MockPlatformInfoProvider {
	mock := &MockPlatformInfoProvider{ctrl: ctrl}
	mock.recorder = &MockPlatformInfoProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlatformInfoProvider) EXPECT() *MockPlatformInfoProviderMockRecorder {
	return m.recorder
}

// GetPlatformIdentifier mocks base method.
func (m *MockPlatformInfoProvider) GetPlatformIdentifier(ctx context.Context, info *hostinfo.PlatformInfo) (string, string, string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlatformIdentifier", ctx, info)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	return ret0, ret1, ret2
}

// GetPlatformIdentifier indicates an expected call of GetPlatformIdentifier.
func (mr *MockPlatformInfoProviderMockRecorder) GetPlatformIdentifier(ctx, info interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlatformIdentifier", reflect.TypeOf((*MockPlatformInfoProvider)(nil).GetPlatformIdentifier), ctx, info)
}

// GetPlatformInfo mocks base method.
func (m *MockPlatformInfoProvider) GetPlatformInfo(ctx context.Context) (*hostinfo.PlatformInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlatformInfo", ctx)
	ret0, _ := ret[0].(*hostinfo.PlatformInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlatformInfo indicates an expected call of GetPlatformInfo.
func (mr *MockPlatformInfoProviderMockRecorder) GetPlatformInfo(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlatformInfo", reflect.TypeOf((*MockPlatformInfoProvider)(nil).GetPlatformInfo), ctx)
}
